!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCESS_ONCE	src/kcompat.h	2241;"	d
ADVERTISED_10000baseKR_Full	src/kcompat.h	2729;"	d
ADVERTISED_10000baseKX4_Full	src/kcompat.h	2726;"	d
ADVERTISED_10000baseT_Full	src/kcompat.h	1068;"	d
ADVERTISED_10000baseT_Full	src/kcompat_ethtool.c	56;"	d	file:
ADVERTISED_10000baseT_Full	src/kcompat_ethtool.c	57;"	d	file:
ADVERTISED_1000baseKX_Full	src/kcompat.h	2723;"	d
ADVERTISED_20000baseKR2_Full	src/kcompat.h	3452;"	d
ADVERTISED_20000baseMLD2_Full	src/kcompat.h	3451;"	d
ADVERTISED_2500baseX_Full	src/kcompat.h	2201;"	d
ADVERTISED_40000baseCR4_Full	src/kcompat.h	3724;"	d
ADVERTISED_40000baseKR4_Full	src/kcompat.h	3723;"	d
ADVERTISED_40000baseLR4_Full	src/kcompat.h	3726;"	d
ADVERTISED_40000baseSR4_Full	src/kcompat.h	3725;"	d
ADVERTISED_Asym_Pause	src/kcompat.h	1773;"	d
ADVERTISED_Pause	src/kcompat.h	1772;"	d
ADVERTISE_1000FULL	src/kcompat.h	1724;"	d
ADVERTISE_1000HALF	src/kcompat.h	1725;"	d
ADVERTISE_1000_FULL	src/defines.h	251;"	d
ADVERTISE_1000_HALF	src/defines.h	250;"	d
ADVERTISE_100FULL	src/kcompat.h	813;"	d
ADVERTISE_100HALF	src/kcompat.h	812;"	d
ADVERTISE_100_FULL	src/defines.h	249;"	d
ADVERTISE_100_HALF	src/defines.h	248;"	d
ADVERTISE_10FULL	src/kcompat.h	811;"	d
ADVERTISE_10HALF	src/kcompat.h	810;"	d
ADVERTISE_10_FULL	src/defines.h	247;"	d
ADVERTISE_10_HALF	src/defines.h	246;"	d
ADVERTISE_ALL	src/kcompat.h	814;"	d
ADVERTISE_CSMA	src/kcompat.h	809;"	d
ADVERTISE_PAUSE_ASYM	src/kcompat.h	1719;"	d
ADVERTISE_PAUSE_CAP	src/kcompat.h	1718;"	d
ALIGN	src/kcompat.h	1342;"	d
ALIGN	src/kcompat.h	1343;"	d
ANCIENT_PM	src/kcompat.h	2492;"	d
AN_RETRY_COUNT	src/82571.h	33;"	d
ARCH	src/Makefile	/^ARCH := $(shell uname -m | sed 's\/i.86\/i386\/')$/;"	m
ARRAY_SIZE	src/kcompat.h	1895;"	d
ARRAY_SIZE	src/kcompat.h	733;"	d
ARRAY_SIZE	src/kcompat.h	734;"	d
AUTONEG_ADVERTISE_SPEED_DEFAULT	src/defines.h	264;"	d
AUTO_ALL_MODES	src/e1000.h	88;"	d
AUTO_READ_DONE_TIMEOUT	src/defines.h	510;"	d
AX_RELEASE_CODE	src/kcompat.h	685;"	d
AX_RELEASE_VERSION	src/kcompat.h	681;"	d
BITOP_WORD	src/kcompat.h	1358;"	d
BITS_TO_LONGS	src/kcompat.h	259;"	d
BMCR_ANENABLE	src/kcompat.h	800;"	d
BMCR_FULLDPLX	src/kcompat.h	799;"	d
BMCR_SPEED1000	src/kcompat.h	1559;"	d
BME1000_E_PHY_ID	src/defines.h	694;"	d
BME1000_E_PHY_ID_R2	src/defines.h	695;"	d
BME1000_PSCR_ENABLE_DOWNSHIFT	src/defines.h	756;"	d
BMSR_100FULL	src/kcompat.h	807;"	d
BMSR_100HALF	src/kcompat.h	806;"	d
BMSR_10FULL	src/kcompat.h	805;"	d
BMSR_10HALF	src/kcompat.h	804;"	d
BMSR_ANEGCAPABLE	src/kcompat.h	803;"	d
BMSR_ERCAP	src/kcompat.h	802;"	d
BMSR_ESTATEN	src/kcompat.h	1765;"	d
BM_CS_CTRL1	src/phy.h	154;"	d
BM_CS_STATUS	src/phy.h	157;"	d
BM_CS_STATUS_LINK_UP	src/phy.h	158;"	d
BM_CS_STATUS_RESOLVED	src/phy.h	159;"	d
BM_CS_STATUS_SPEED_1000	src/phy.h	161;"	d
BM_CS_STATUS_SPEED_MASK	src/phy.h	160;"	d
BM_MTA	src/ich8lan.h	127;"	d
BM_PHY_PAGE_SELECT	src/phy.h	97;"	d
BM_PHY_REG	src/phy.h	113;"	d
BM_PHY_REG_NUM	src/phy.h	119;"	d
BM_PHY_REG_PAGE	src/phy.h	117;"	d
BM_PORT_CTRL_PAGE	src/phy.h	102;"	d
BM_PORT_GEN_CFG	src/ich8lan.h	118;"	d
BM_RAR_CTRL	src/ich8lan.h	126;"	d
BM_RAR_H	src/ich8lan.h	125;"	d
BM_RAR_L	src/ich8lan.h	123;"	d
BM_RAR_M	src/ich8lan.h	124;"	d
BM_RCTL	src/ich8lan.h	119;"	d
BM_RCTL_BAM	src/ich8lan.h	133;"	d
BM_RCTL_MO_MASK	src/ich8lan.h	132;"	d
BM_RCTL_MO_SHIFT	src/ich8lan.h	131;"	d
BM_RCTL_MPE	src/ich8lan.h	130;"	d
BM_RCTL_PMCF	src/ich8lan.h	134;"	d
BM_RCTL_RFCE	src/ich8lan.h	135;"	d
BM_RCTL_UPE	src/ich8lan.h	129;"	d
BM_WUC	src/ich8lan.h	120;"	d
BM_WUC_ADDRESS_OPCODE	src/phy.h	104;"	d
BM_WUC_DATA_OPCODE	src/phy.h	105;"	d
BM_WUC_ENABLE_BIT	src/phy.h	108;"	d
BM_WUC_ENABLE_PAGE	src/phy.h	106;"	d
BM_WUC_ENABLE_REG	src/phy.h	107;"	d
BM_WUC_HOST_WU_BIT	src/phy.h	109;"	d
BM_WUC_ME_WU_BIT	src/phy.h	110;"	d
BM_WUC_PAGE	src/phy.h	103;"	d
BM_WUFC	src/ich8lan.h	121;"	d
BM_WUS	src/ich8lan.h	122;"	d
BRIDGE_MODE_VEB	src/kcompat.h	3951;"	d
BRIDGE_MODE_VEPA	src/kcompat.h	3954;"	d
BUILD_KERNEL	src/Makefile	/^BUILD_KERNEL=$(shell uname -r)$/;"	m
BURST_RADV	src/e1000.h	106;"	d
BURST_RDTR	src/e1000.h	105;"	d
CC	src/Makefile	/^  CC := gcc cc$/;"	m
CC	src/Makefile	/^  CC := kgcc gcc cc$/;"	m
CC	src/Makefile	/^CC := $(firstword $(CC))$/;"	m
CC	src/Makefile	/^CC := $(foreach cc, $(CC), $(test_cc))$/;"	m
CFILES	src/Makefile	/^CFILES = netdev.c ethtool.c param.c $(FAMILYC) \\$/;"	m
CHECKSUM_COMPLETE	src/kcompat.h	215;"	d
CHECKSUM_PARTIAL	src/kcompat.h	214;"	d
CONFIG_E1000E_MSIX	src/kcompat.h	60;"	d
CONFIG_E1000E_NAPI	src/kcompat.h	1054;"	d
CONFIG_E1000E_NAPI	src/kcompat.h	65;"	d
CONFIG_E1000E_NAPI	src/kcompat.h	68;"	d
CONFIG_E1000_DISABLE_PACKET_SPLIT	src/kcompat.h	1325;"	d
CONFIG_FCOE	src/kcompat.h	1975;"	d
CONFIG_FCOE_MODULE	src/kcompat.h	1976;"	d
CONFIG_FILE	src/Makefile	/^  CONFIG_FILE := $(firstword $(CSP))$/;"	m
CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS	src/kcompat.h	290;"	d
CONFIG_IGB_DISABLE_PACKET_SPLIT	src/kcompat.h	1328;"	d
CONFIG_INET_LRO	src/kcompat.h	1972;"	d
CONFIG_INET_LRO_MODULE	src/kcompat.h	1973;"	d
CONFIG_NET_POLL_CONTROLLER	src/kcompat.h	108;"	d
CONFIG_NET_POLL_CONTROLLER	src/kcompat.h	177;"	d
CONFIG_NR_CPUS	src/kcompat.h	2624;"	d
CONFIG_PCI_MSI	src/kcompat.h	84;"	d
CONFIG_PM	src/kcompat.h	104;"	d
CONFIG_PM	src/kcompat.h	840;"	d
CONFIG_PM_SLEEP	src/kcompat.h	2226;"	d
CONFIG_XPS	src/kcompat.h	3339;"	d
COPPER_LINK_UP_LIMIT	src/defines.h	500;"	d
COPYBREAK_DEFAULT	src/param.c	38;"	d	file:
CSP	src/Makefile	/^CSP :=  $(KSRC)\/include\/generated\/autoconf.h \\$/;"	m
CSP	src/Makefile	/^CSP := $(foreach file, $(CSP), $(test_file))$/;"	m
CTL1000_AS_MASTER	src/kcompat.h	3465;"	d
CTL1000_ENABLE_MASTER	src/kcompat.h	3466;"	d
CV_SMB_CTRL	src/ich8lan.h	164;"	d
CV_SMB_CTRL_FORCE_SMBUS	src/ich8lan.h	165;"	d
DCA_PROVIDER_ADD	src/kcompat.h	280;"	d
DCA_PROVIDER_REMOVE	src/kcompat.h	281;"	d
DCB_CAP_DCBX_HOST	src/kcompat.h	3323;"	d
DCB_CAP_DCBX_LLD_MANAGED	src/kcompat.h	3326;"	d
DCB_CAP_DCBX_STATIC	src/kcompat.h	3335;"	d
DCB_CAP_DCBX_VER_CEE	src/kcompat.h	3329;"	d
DCB_CAP_DCBX_VER_IEEE	src/kcompat.h	3332;"	d
DECLARE_BITMAP	src/kcompat.h	261;"	d
DECLARE_PCI_UNMAP_ADDR	src/kcompat.h	1936;"	d
DECLARE_PCI_UNMAP_LEN	src/kcompat.h	1938;"	d
DEFAULT_80003ES2LAN_TIPG_IPGR2	src/defines.h	342;"	d
DEFAULT_82543_TIPG_IPGR1	src/defines.h	338;"	d
DEFAULT_82543_TIPG_IPGR2	src/defines.h	341;"	d
DEFAULT_82543_TIPG_IPGT_COPPER	src/defines.h	334;"	d
DEFAULT_ITR	src/param.c	120;"	d	file:
DEFAULT_JUMBO	src/e1000.h	93;"	d
DEFAULT_MSG_ENABLE	src/netdev.c	61;"	d	file:
DEFAULT_RADV	src/e1000.h	104;"	d
DEFAULT_RDTR	src/e1000.h	103;"	d
DEFAULT_TADV	src/param.c	94;"	d	file:
DEFAULT_TCTL_EXT_GCEX_80003ES2LAN	src/80003es2lan.h	43;"	d
DEFAULT_TIDV	src/param.c	85;"	d	file:
DEFAULT_TIPG_IPGT_1000_80003ES2LAN	src/80003es2lan.h	45;"	d
DEFAULT_TIPG_IPGT_10_100_80003ES2LAN	src/80003es2lan.h	46;"	d
DEFINE_DMA_UNMAP_ADDR	src/kcompat.h	2855;"	d
DEFINE_DMA_UNMAP_ADDR	src/kcompat.h	2856;"	d
DEFINE_DMA_UNMAP_ADDR	src/kcompat.h	3066;"	d
DEFINE_DMA_UNMAP_LEN	src/kcompat.h	2857;"	d
DEFINE_DMA_UNMAP_LEN	src/kcompat.h	2858;"	d
DEFINE_DMA_UNMAP_LEN	src/kcompat.h	3067;"	d
DEFINE_MUTEX	src/kcompat.h	1834;"	d
DEFINE_MUTEX	src/kcompat.h	1835;"	d
DEFINE_PCI_DEVICE_TABLE	src/kcompat.h	2415;"	d
DEPVER	src/Makefile	/^DEPVER := $(shell \/sbin\/depmod -V 2>\/dev\/null | \\$/;"	m
DIV_ROUND_UP	src/kcompat.h	1959;"	d
DMA_32BIT_MASK	src/kcompat.h	142;"	d
DMA_32BIT_MASK	src/kcompat.h	978;"	d
DMA_32BIT_MASK	src/kcompat.h	979;"	d
DMA_64BIT_MASK	src/kcompat.h	138;"	d
DMA_64BIT_MASK	src/kcompat.h	980;"	d
DMA_64BIT_MASK	src/kcompat.h	981;"	d
DMA_BIDIRECTIONAL	src/kcompat.h	/^	DMA_BIDIRECTIONAL = 0,$/;"	e	enum:dma_data_direction
DMA_BIT_MASK	src/kcompat.h	2345;"	d
DMA_FROM_DEVICE	src/kcompat.h	/^	DMA_FROM_DEVICE = 2,$/;"	e	enum:dma_data_direction
DMA_NONE	src/kcompat.h	/^	DMA_NONE = 3,$/;"	e	enum:dma_data_direction
DMA_TO_DEVICE	src/kcompat.h	/^	DMA_TO_DEVICE = 1,$/;"	e	enum:dma_data_direction
DRIVER_NAME	src/Makefile	/^DRIVER_NAME = e1000e$/;"	m
DRV_EXTRAVERSION	src/netdev.c	52;"	d	file:
DRV_EXTRAVERSION	src/netdev.c	54;"	d	file:
DRV_VERSION	src/netdev.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	src/netdev.c	57;"	d	file:
DUMP_PREFIX_ADDRESS	src/kcompat.h	/^	DUMP_PREFIX_ADDRESS,$/;"	e	enum:__anon2
DUMP_PREFIX_NONE	src/kcompat.h	/^	DUMP_PREFIX_NONE,$/;"	e	enum:__anon2
DUMP_PREFIX_OFFSET	src/kcompat.h	/^	DUMP_PREFIX_OFFSET$/;"	e	enum:__anon2
DUPLEX_UNKNOWN	src/kcompat.h	3555;"	d
DYNAMIC_LTR_SUPPORT	src/kcompat.h	73;"	d
DYNAMIC_LTR_SUPPORT	src/kcompat.h	75;"	d
E1000E_INT_MODE_LEGACY	src/e1000.h	62;"	d
E1000E_INT_MODE_MSI	src/e1000.h	63;"	d
E1000E_INT_MODE_MSIX	src/e1000.h	64;"	d
E1000_82574_SYSTIM_EPSILON	src/e1000.h	449;"	d
E1000_AIT	src/regs.h	62;"	d
E1000_ALGNERRC	src/regs.h	133;"	d
E1000_ALL_100_SPEED	src/defines.h	260;"	d
E1000_ALL_10_SPEED	src/defines.h	261;"	d
E1000_ALL_HALF_DUPLEX	src/defines.h	262;"	d
E1000_ALL_NOT_GIG	src/defines.h	257;"	d
E1000_ALL_SPEED_DUPLEX	src/defines.h	254;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN0	src/hw.h	96;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN1	src/hw.h	97;"	d
E1000_BASE1000T_STATUS	src/82571.h	46;"	d
E1000_BLK_PHY_RESET	src/defines.h	491;"	d
E1000_BPRC	src/regs.h	159;"	d
E1000_BPTC	src/regs.h	187;"	d
E1000_CABLE_LENGTH_UNDEFINED	src/phy.h	200;"	d
E1000_CEXTERR	src/regs.h	145;"	d
E1000_CHECK_RESET_COUNT	src/e1000.h	101;"	d
E1000_COLC	src/regs.h	141;"	d
E1000_COLD_SHIFT	src/defines.h	331;"	d
E1000_COLLISION_DISTANCE	src/defines.h	330;"	d
E1000_COLLISION_THRESHOLD	src/defines.h	328;"	d
E1000_CONTEXT_DESC	src/e1000.h	511;"	d
E1000_CRCERRS	src/regs.h	132;"	d
E1000_CRC_OFFSET	src/regs.h	199;"	d
E1000_CTRL	src/regs.h	26;"	d
E1000_CTRL_ADVD3WUC	src/defines.h	215;"	d
E1000_CTRL_ASDE	src/defines.h	201;"	d
E1000_CTRL_EN_PHY_PWR_MGMT	src/defines.h	216;"	d
E1000_CTRL_EXT	src/regs.h	30;"	d
E1000_CTRL_EXT_DMA_DYN_CLK_EN	src/defines.h	60;"	d
E1000_CTRL_EXT_DRV_LOAD	src/defines.h	64;"	d
E1000_CTRL_EXT_EE_RST	src/defines.h	57;"	d
E1000_CTRL_EXT_EIAME	src/defines.h	63;"	d
E1000_CTRL_EXT_FORCE_SMBUS	src/defines.h	56;"	d
E1000_CTRL_EXT_IAME	src/defines.h	65;"	d
E1000_CTRL_EXT_LINK_MODE_MASK	src/defines.h	61;"	d
E1000_CTRL_EXT_LINK_MODE_PCIE_SERDES	src/defines.h	62;"	d
E1000_CTRL_EXT_LPCD	src/defines.h	54;"	d
E1000_CTRL_EXT_LSECCK	src/defines.h	67;"	d
E1000_CTRL_EXT_PBA_CLR	src/defines.h	66;"	d
E1000_CTRL_EXT_PHYPDEN	src/defines.h	68;"	d
E1000_CTRL_EXT_RO_DIS	src/defines.h	59;"	d
E1000_CTRL_EXT_SDP3_DATA	src/defines.h	55;"	d
E1000_CTRL_EXT_SPD_BYPS	src/defines.h	58;"	d
E1000_CTRL_FD	src/defines.h	198;"	d
E1000_CTRL_FRCDPX	src/defines.h	209;"	d
E1000_CTRL_FRCSPD	src/defines.h	208;"	d
E1000_CTRL_GIO_MASTER_DISABLE	src/defines.h	199;"	d
E1000_CTRL_ILOS	src/defines.h	203;"	d
E1000_CTRL_LANPHYPC_OVERRIDE	src/defines.h	210;"	d
E1000_CTRL_LANPHYPC_VALUE	src/defines.h	211;"	d
E1000_CTRL_LRST	src/defines.h	200;"	d
E1000_CTRL_MEHE	src/defines.h	212;"	d
E1000_CTRL_PHY_RST	src/defines.h	222;"	d
E1000_CTRL_RFCE	src/defines.h	219;"	d
E1000_CTRL_RST	src/defines.h	218;"	d
E1000_CTRL_SLU	src/defines.h	202;"	d
E1000_CTRL_SPD_10	src/defines.h	205;"	d
E1000_CTRL_SPD_100	src/defines.h	206;"	d
E1000_CTRL_SPD_1000	src/defines.h	207;"	d
E1000_CTRL_SPD_SEL	src/defines.h	204;"	d
E1000_CTRL_SWDPIN0	src/defines.h	213;"	d
E1000_CTRL_SWDPIN1	src/defines.h	214;"	d
E1000_CTRL_SWDPIO0	src/defines.h	217;"	d
E1000_CTRL_TFCE	src/defines.h	220;"	d
E1000_CTRL_VME	src/defines.h	221;"	d
E1000_CT_SHIFT	src/defines.h	329;"	d
E1000_DC	src/regs.h	142;"	d
E1000_DEFAULT_RXD	src/e1000.h	75;"	d
E1000_DEFAULT_TXD	src/e1000.h	71;"	d
E1000_DEV_ID_80003ES2LAN_COPPER_DPT	src/hw.h	50;"	d
E1000_DEV_ID_80003ES2LAN_COPPER_SPT	src/hw.h	52;"	d
E1000_DEV_ID_80003ES2LAN_SERDES_DPT	src/hw.h	51;"	d
E1000_DEV_ID_80003ES2LAN_SERDES_SPT	src/hw.h	53;"	d
E1000_DEV_ID_82571EB_COPPER	src/hw.h	31;"	d
E1000_DEV_ID_82571EB_FIBER	src/hw.h	32;"	d
E1000_DEV_ID_82571EB_QUAD_COPPER	src/hw.h	34;"	d
E1000_DEV_ID_82571EB_QUAD_COPPER_LP	src/hw.h	37;"	d
E1000_DEV_ID_82571EB_QUAD_FIBER	src/hw.h	36;"	d
E1000_DEV_ID_82571EB_SERDES	src/hw.h	33;"	d
E1000_DEV_ID_82571EB_SERDES_DUAL	src/hw.h	38;"	d
E1000_DEV_ID_82571EB_SERDES_QUAD	src/hw.h	39;"	d
E1000_DEV_ID_82571PT_QUAD_COPPER	src/hw.h	35;"	d
E1000_DEV_ID_82572EI	src/hw.h	43;"	d
E1000_DEV_ID_82572EI_COPPER	src/hw.h	40;"	d
E1000_DEV_ID_82572EI_FIBER	src/hw.h	41;"	d
E1000_DEV_ID_82572EI_SERDES	src/hw.h	42;"	d
E1000_DEV_ID_82573E	src/hw.h	44;"	d
E1000_DEV_ID_82573E_IAMT	src/hw.h	45;"	d
E1000_DEV_ID_82573L	src/hw.h	46;"	d
E1000_DEV_ID_82574L	src/hw.h	47;"	d
E1000_DEV_ID_82574LA	src/hw.h	48;"	d
E1000_DEV_ID_82583V	src/hw.h	49;"	d
E1000_DEV_ID_ICH10_D_BM_LF	src/hw.h	75;"	d
E1000_DEV_ID_ICH10_D_BM_LM	src/hw.h	74;"	d
E1000_DEV_ID_ICH10_D_BM_V	src/hw.h	76;"	d
E1000_DEV_ID_ICH10_R_BM_LF	src/hw.h	72;"	d
E1000_DEV_ID_ICH10_R_BM_LM	src/hw.h	71;"	d
E1000_DEV_ID_ICH10_R_BM_V	src/hw.h	73;"	d
E1000_DEV_ID_ICH8_82567V_3	src/hw.h	54;"	d
E1000_DEV_ID_ICH8_IFE	src/hw.h	58;"	d
E1000_DEV_ID_ICH8_IFE_G	src/hw.h	60;"	d
E1000_DEV_ID_ICH8_IFE_GT	src/hw.h	59;"	d
E1000_DEV_ID_ICH8_IGP_AMT	src/hw.h	56;"	d
E1000_DEV_ID_ICH8_IGP_C	src/hw.h	57;"	d
E1000_DEV_ID_ICH8_IGP_M	src/hw.h	61;"	d
E1000_DEV_ID_ICH8_IGP_M_AMT	src/hw.h	55;"	d
E1000_DEV_ID_ICH9_BM	src/hw.h	63;"	d
E1000_DEV_ID_ICH9_IFE	src/hw.h	68;"	d
E1000_DEV_ID_ICH9_IFE_G	src/hw.h	70;"	d
E1000_DEV_ID_ICH9_IFE_GT	src/hw.h	69;"	d
E1000_DEV_ID_ICH9_IGP_AMT	src/hw.h	62;"	d
E1000_DEV_ID_ICH9_IGP_C	src/hw.h	67;"	d
E1000_DEV_ID_ICH9_IGP_M	src/hw.h	65;"	d
E1000_DEV_ID_ICH9_IGP_M_AMT	src/hw.h	64;"	d
E1000_DEV_ID_ICH9_IGP_M_V	src/hw.h	66;"	d
E1000_DEV_ID_PCH2_LV_LM	src/hw.h	81;"	d
E1000_DEV_ID_PCH2_LV_V	src/hw.h	82;"	d
E1000_DEV_ID_PCH_D_HV_DC	src/hw.h	80;"	d
E1000_DEV_ID_PCH_D_HV_DM	src/hw.h	79;"	d
E1000_DEV_ID_PCH_I218_LM2	src/hw.h	87;"	d
E1000_DEV_ID_PCH_I218_LM3	src/hw.h	89;"	d
E1000_DEV_ID_PCH_I218_V2	src/hw.h	88;"	d
E1000_DEV_ID_PCH_I218_V3	src/hw.h	90;"	d
E1000_DEV_ID_PCH_LPTLP_I218_LM	src/hw.h	85;"	d
E1000_DEV_ID_PCH_LPTLP_I218_V	src/hw.h	86;"	d
E1000_DEV_ID_PCH_LPT_I217_LM	src/hw.h	83;"	d
E1000_DEV_ID_PCH_LPT_I217_V	src/hw.h	84;"	d
E1000_DEV_ID_PCH_M_HV_LC	src/hw.h	78;"	d
E1000_DEV_ID_PCH_M_HV_LM	src/hw.h	77;"	d
E1000_ECOL	src/regs.h	138;"	d
E1000_EECD	src/regs.h	28;"	d
E1000_EECD_ADDR_BITS	src/defines.h	577;"	d
E1000_EECD_AUPDEN	src/defines.h	583;"	d
E1000_EECD_AUTO_RD	src/defines.h	579;"	d
E1000_EECD_CS	src/defines.h	569;"	d
E1000_EECD_DI	src/defines.h	570;"	d
E1000_EECD_DO	src/defines.h	571;"	d
E1000_EECD_FLUPD	src/defines.h	582;"	d
E1000_EECD_GNT	src/defines.h	573;"	d
E1000_EECD_PRES	src/defines.h	574;"	d
E1000_EECD_REQ	src/defines.h	572;"	d
E1000_EECD_SEC1VAL	src/defines.h	584;"	d
E1000_EECD_SEC1VAL_VALID_MASK	src/defines.h	585;"	d
E1000_EECD_SIZE	src/defines.h	575;"	d
E1000_EECD_SIZE_EX_MASK	src/defines.h	580;"	d
E1000_EECD_SIZE_EX_SHIFT	src/defines.h	581;"	d
E1000_EECD_SK	src/defines.h	568;"	d
E1000_EEE_RX_LPI_RCVD	src/ich8lan.h	256;"	d
E1000_EEE_TX_LPI_RCVD	src/ich8lan.h	257;"	d
E1000_EEMNGCTL	src/regs.h	71;"	d
E1000_EEPROM_APME	src/e1000.h	89;"	d
E1000_EERD	src/regs.h	29;"	d
E1000_EEWR	src/regs.h	72;"	d
E1000_EIAC_82574	src/82571.h	38;"	d
E1000_EIAC_MASK_82574	src/82571.h	39;"	d
E1000_EITR_82574	src/82571.h	36;"	d
E1000_ERR_CONFIG	src/defines.h	484;"	d
E1000_ERR_HOST_INTERFACE_COMMAND	src/defines.h	490;"	d
E1000_ERR_INVALID_ARGUMENT	src/defines.h	494;"	d
E1000_ERR_MAC_INIT	src/defines.h	486;"	d
E1000_ERR_MASTER_REQUESTS_PENDING	src/defines.h	489;"	d
E1000_ERR_NO_SPACE	src/defines.h	495;"	d
E1000_ERR_NVM	src/defines.h	482;"	d
E1000_ERR_NVM_PBA_SECTION	src/defines.h	496;"	d
E1000_ERR_PARAM	src/defines.h	485;"	d
E1000_ERR_PHY	src/defines.h	483;"	d
E1000_ERR_PHY_TYPE	src/defines.h	487;"	d
E1000_ERR_RESET	src/defines.h	488;"	d
E1000_ERR_SWFW_SYNC	src/defines.h	492;"	d
E1000_ERT	src/regs.h	74;"	d
E1000_EXTCNF_CTRL	src/regs.h	64;"	d
E1000_EXTCNF_CTRL_EXT_CNF_POINTER_MASK	src/defines.h	356;"	d
E1000_EXTCNF_CTRL_EXT_CNF_POINTER_SHIFT	src/defines.h	357;"	d
E1000_EXTCNF_CTRL_GATE_PHY_CFG	src/defines.h	353;"	d
E1000_EXTCNF_CTRL_LCD_WRITE_ENABLE	src/defines.h	350;"	d
E1000_EXTCNF_CTRL_MDIO_SW_OWNERSHIP	src/defines.h	349;"	d
E1000_EXTCNF_CTRL_OEM_WRITE_ENABLE	src/defines.h	351;"	d
E1000_EXTCNF_CTRL_SWFLAG	src/defines.h	352;"	d
E1000_EXTCNF_SIZE	src/regs.h	65;"	d
E1000_EXTCNF_SIZE_EXT_PCIE_LENGTH_MASK	src/defines.h	354;"	d
E1000_EXTCNF_SIZE_EXT_PCIE_LENGTH_SHIFT	src/defines.h	355;"	d
E1000_FACTPS	src/regs.h	224;"	d
E1000_FACTPS_MNGCG	src/manage.h	39;"	d
E1000_FCAH	src/regs.h	35;"	d
E1000_FCAL	src/regs.h	34;"	d
E1000_FCRTH	src/regs.h	76;"	d
E1000_FCRTH_RTH	src/defines.h	513;"	d
E1000_FCRTL	src/regs.h	75;"	d
E1000_FCRTL_RTL	src/defines.h	514;"	d
E1000_FCRTL_XONE	src/defines.h	515;"	d
E1000_FCRTV_PCH	src/ich8lan.h	158;"	d
E1000_FCRUC	src/regs.h	151;"	d
E1000_FCT	src/regs.h	42;"	d
E1000_FCTTV	src/regs.h	55;"	d
E1000_FC_PAUSE_TIME	src/e1000.h	82;"	d
E1000_FEXT	src/regs.h	36;"	d
E1000_FEXTNVM	src/regs.h	37;"	d
E1000_FEXTNVM3	src/regs.h	38;"	d
E1000_FEXTNVM3_PHY_CFG_COUNTER_50MSEC	src/ich8lan.h	90;"	d
E1000_FEXTNVM3_PHY_CFG_COUNTER_MASK	src/ich8lan.h	89;"	d
E1000_FEXTNVM4	src/regs.h	39;"	d
E1000_FEXTNVM4_BEACON_DURATION_16USEC	src/ich8lan.h	94;"	d
E1000_FEXTNVM4_BEACON_DURATION_8USEC	src/ich8lan.h	93;"	d
E1000_FEXTNVM4_BEACON_DURATION_MASK	src/ich8lan.h	92;"	d
E1000_FEXTNVM6	src/regs.h	40;"	d
E1000_FEXTNVM6_ENABLE_K1_ENTRY_CONDITION	src/ich8lan.h	97;"	d
E1000_FEXTNVM6_REQ_PLL_CLK	src/ich8lan.h	96;"	d
E1000_FEXTNVM7	src/regs.h	41;"	d
E1000_FEXTNVM7_DISABLE_SMB_PERST	src/ich8lan.h	99;"	d
E1000_FEXTNVM_SW_CONFIG	src/ich8lan.h	86;"	d
E1000_FEXTNVM_SW_CONFIG_ICH8M	src/ich8lan.h	87;"	d
E1000_FEXT_PHY_CABLE_DISCONNECTED	src/ich8lan.h	84;"	d
E1000_FFLT	src/regs.h	214;"	d
E1000_FFLT_DBG	src/regs.h	229;"	d
E1000_FLA	src/regs.h	31;"	d
E1000_FLASH_UPDATES	src/defines.h	593;"	d
E1000_FLOP	src/regs.h	73;"	d
E1000_FUNC_1	src/hw.h	94;"	d
E1000_FWSM	src/regs.h	226;"	d
E1000_FWSM_MODE_MASK	src/manage.h	41;"	d
E1000_FWSM_MODE_SHIFT	src/manage.h	42;"	d
E1000_FWSM_ULP_CFG_DONE	src/ich8lan.h	61;"	d
E1000_FWSM_WLOCK_MAC_MASK	src/ich8lan.h	59;"	d
E1000_FWSM_WLOCK_MAC_SHIFT	src/ich8lan.h	60;"	d
E1000_GCR	src/regs.h	222;"	d
E1000_GCR2	src/regs.h	223;"	d
E1000_GCR_L1_ACT_WITHOUT_L0S_RX	src/82571.h	32;"	d
E1000_GCR_RXDSCR_NO_SNOOP	src/defines.h	555;"	d
E1000_GCR_RXDSCW_NO_SNOOP	src/defines.h	554;"	d
E1000_GCR_RXD_NO_SNOOP	src/defines.h	553;"	d
E1000_GCR_TXDSCR_NO_SNOOP	src/defines.h	558;"	d
E1000_GCR_TXDSCW_NO_SNOOP	src/defines.h	557;"	d
E1000_GCR_TXD_NO_SNOOP	src/defines.h	556;"	d
E1000_GEN_POLL_TIMEOUT	src/defines.h	796;"	d
E1000_GET_DESC	src/e1000.h	509;"	d
E1000_GLOBAL_STATS_LEN	src/ethtool.c	155;"	d	file:
E1000_GORCH	src/regs.h	163;"	d
E1000_GORCL	src/regs.h	162;"	d
E1000_GOTCH	src/regs.h	165;"	d
E1000_GOTCL	src/regs.h	164;"	d
E1000_GPRC	src/regs.h	158;"	d
E1000_GPTC	src/regs.h	161;"	d
E1000_H2ME	src/ich8lan.h	67;"	d
E1000_H2ME_ENFORCE_SETTINGS	src/ich8lan.h	69;"	d
E1000_H2ME_ULP	src/ich8lan.h	68;"	d
E1000_HICR	src/regs.h	230;"	d
E1000_HICR_C	src/manage.h	58;"	d
E1000_HICR_EN	src/manage.h	56;"	d
E1000_HICR_FW_RESET	src/manage.h	61;"	d
E1000_HICR_FW_RESET_ENABLE	src/manage.h	60;"	d
E1000_HICR_SV	src/manage.h	59;"	d
E1000_HI_MAX_DATA_LENGTH	src/hw.h	435;"	d
E1000_HI_MAX_MNG_DATA_LENGTH	src/hw.h	450;"	d
E1000_HOST_IF	src/regs.h	215;"	d
E1000_IAC	src/regs.h	190;"	d
E1000_IAM	src/regs.h	49;"	d
E1000_IAMT_SIGNATURE	src/manage.h	64;"	d
E1000_ICH8_LAN_INIT_TIMEOUT	src/ich8lan.h	81;"	d
E1000_ICH8_SHADOW_RAM_WORDS	src/hw.h	662;"	d
E1000_ICH_FWSM_FW_VALID	src/ich8lan.h	53;"	d
E1000_ICH_FWSM_PCIM2PCI	src/ich8lan.h	54;"	d
E1000_ICH_FWSM_PCIM2PCI_COUNT	src/ich8lan.h	55;"	d
E1000_ICH_FWSM_RSPCIPHY	src/ich8lan.h	51;"	d
E1000_ICH_MNG_IAMT_MODE	src/ich8lan.h	57;"	d
E1000_ICH_NVM_SIG_MASK	src/ich8lan.h	77;"	d
E1000_ICH_NVM_SIG_VALUE	src/ich8lan.h	79;"	d
E1000_ICH_NVM_SIG_WORD	src/ich8lan.h	76;"	d
E1000_ICH_NVM_VALID_SIG_MASK	src/ich8lan.h	78;"	d
E1000_ICH_RAR_ENTRIES	src/ich8lan.h	103;"	d
E1000_ICR	src/regs.h	44;"	d
E1000_ICRXATC	src/regs.h	192;"	d
E1000_ICRXDMTC	src/regs.h	197;"	d
E1000_ICRXOC	src/regs.h	198;"	d
E1000_ICRXPTC	src/regs.h	191;"	d
E1000_ICR_ECCER	src/defines.h	402;"	d
E1000_ICR_INT_ASSERTED	src/defines.h	404;"	d
E1000_ICR_LSC	src/defines.h	398;"	d
E1000_ICR_OTHER	src/defines.h	409;"	d
E1000_ICR_RXDMT0	src/defines.h	400;"	d
E1000_ICR_RXQ0	src/defines.h	405;"	d
E1000_ICR_RXQ1	src/defines.h	406;"	d
E1000_ICR_RXSEQ	src/defines.h	399;"	d
E1000_ICR_RXT0	src/defines.h	401;"	d
E1000_ICR_TXDW	src/defines.h	397;"	d
E1000_ICR_TXQ0	src/defines.h	407;"	d
E1000_ICR_TXQ1	src/defines.h	408;"	d
E1000_ICS	src/regs.h	46;"	d
E1000_ICS_LSC	src/defines.h	447;"	d
E1000_ICS_RXDMT0	src/defines.h	449;"	d
E1000_ICS_RXSEQ	src/defines.h	448;"	d
E1000_ICTXATC	src/regs.h	194;"	d
E1000_ICTXPTC	src/regs.h	193;"	d
E1000_ICTXQEC	src/regs.h	195;"	d
E1000_ICTXQMTC	src/regs.h	196;"	d
E1000_IDLE_ERROR_COUNT_MASK	src/82571.h	47;"	d
E1000_ID_INTERVAL	src/ethtool.c	2146;"	d	file:
E1000_IMC	src/regs.h	48;"	d
E1000_IMS	src/regs.h	47;"	d
E1000_IMS_ECCER	src/defines.h	439;"	d
E1000_IMS_LSC	src/defines.h	435;"	d
E1000_IMS_OTHER	src/defines.h	444;"	d
E1000_IMS_RXDMT0	src/defines.h	437;"	d
E1000_IMS_RXQ0	src/defines.h	440;"	d
E1000_IMS_RXQ1	src/defines.h	441;"	d
E1000_IMS_RXSEQ	src/defines.h	436;"	d
E1000_IMS_RXT0	src/defines.h	438;"	d
E1000_IMS_TXDW	src/defines.h	434;"	d
E1000_IMS_TXQ0	src/defines.h	442;"	d
E1000_IMS_TXQ1	src/defines.h	443;"	d
E1000_ITR	src/regs.h	45;"	d
E1000_IVAR	src/regs.h	50;"	d
E1000_IVAR_INT_ALLOC_VALID	src/82571.h	41;"	d
E1000_KABGTXD	src/regs.h	118;"	d
E1000_KABGTXD_BGSQLBIAS	src/defines.h	364;"	d
E1000_KMRNCTRLSTA	src/regs.h	217;"	d
E1000_KMRNCTRLSTA_CTRL_OFFSET	src/phy.h	205;"	d
E1000_KMRNCTRLSTA_DIAG_NELPBK	src/phy.h	210;"	d
E1000_KMRNCTRLSTA_DIAG_OFFSET	src/phy.h	206;"	d
E1000_KMRNCTRLSTA_FIFO_CTRL_RX_BYPASS	src/80003es2lan.h	31;"	d
E1000_KMRNCTRLSTA_FIFO_CTRL_TX_BYPASS	src/80003es2lan.h	32;"	d
E1000_KMRNCTRLSTA_HD_CTRL	src/phy.h	213;"	d
E1000_KMRNCTRLSTA_HD_CTRL_1000_DEFAULT	src/80003es2lan.h	36;"	d
E1000_KMRNCTRLSTA_HD_CTRL_10_100_DEFAULT	src/80003es2lan.h	35;"	d
E1000_KMRNCTRLSTA_IBIST_DISABLE	src/phy.h	209;"	d
E1000_KMRNCTRLSTA_INBAND_PARAM	src/phy.h	208;"	d
E1000_KMRNCTRLSTA_INB_CTRL_DIS_PADDING	src/80003es2lan.h	33;"	d
E1000_KMRNCTRLSTA_K1_CONFIG	src/phy.h	211;"	d
E1000_KMRNCTRLSTA_K1_ENABLE	src/phy.h	212;"	d
E1000_KMRNCTRLSTA_OFFSET	src/phy.h	202;"	d
E1000_KMRNCTRLSTA_OFFSET_FIFO_CTRL	src/80003es2lan.h	26;"	d
E1000_KMRNCTRLSTA_OFFSET_HD_CTRL	src/80003es2lan.h	28;"	d
E1000_KMRNCTRLSTA_OFFSET_INB_CTRL	src/80003es2lan.h	27;"	d
E1000_KMRNCTRLSTA_OFFSET_MAC2PHY_OPMODE	src/80003es2lan.h	29;"	d
E1000_KMRNCTRLSTA_OFFSET_SHIFT	src/phy.h	203;"	d
E1000_KMRNCTRLSTA_OPMODE_E_IDLE	src/80003es2lan.h	37;"	d
E1000_KMRNCTRLSTA_OPMODE_INBAND_MDIO	src/80003es2lan.h	40;"	d
E1000_KMRNCTRLSTA_OPMODE_MASK	src/80003es2lan.h	39;"	d
E1000_KMRNCTRLSTA_REN	src/phy.h	204;"	d
E1000_KMRNCTRLSTA_TIMEOUTS	src/phy.h	207;"	d
E1000_LATECOL	src/regs.h	140;"	d
E1000_LEDCTL	src/regs.h	63;"	d
E1000_LEDCTL_LED0_BLINK	src/defines.h	274;"	d
E1000_LEDCTL_LED0_IVRT	src/defines.h	273;"	d
E1000_LEDCTL_LED0_MODE_MASK	src/defines.h	271;"	d
E1000_LEDCTL_LED0_MODE_SHIFT	src/defines.h	272;"	d
E1000_LEDCTL_MODE_LED_OFF	src/defines.h	278;"	d
E1000_LEDCTL_MODE_LED_ON	src/defines.h	277;"	d
E1000_LEDCTL_MODE_LINK_UP	src/defines.h	276;"	d
E1000_LED_ON	src/ethtool.c	2149;"	d	file:
E1000_LPIC	src/regs.h	53;"	d
E1000_LPIC_LPIET_SHIFT	src/defines.h	367;"	d
E1000_LTRV	src/ich8lan.h	273;"	d
E1000_LTRV_NOSNOOP_SHIFT	src/ich8lan.h	277;"	d
E1000_LTRV_REQ_SHIFT	src/ich8lan.h	276;"	d
E1000_LTRV_SCALE_FACTOR	src/ich8lan.h	275;"	d
E1000_LTRV_SCALE_MAX	src/ich8lan.h	274;"	d
E1000_LTRV_SEND	src/ich8lan.h	278;"	d
E1000_MANC	src/regs.h	213;"	d
E1000_MANC2H	src/regs.h	218;"	d
E1000_MANC2H_PORT_623	src/defines.h	129;"	d
E1000_MANC2H_PORT_664	src/defines.h	130;"	d
E1000_MANC_ARP_EN	src/defines.h	121;"	d
E1000_MANC_ASF_EN	src/defines.h	120;"	d
E1000_MANC_BLK_PHY_RST_ON_IDE	src/defines.h	123;"	d
E1000_MANC_EN_MAC_ADDR_FILTER	src/defines.h	125;"	d
E1000_MANC_EN_MNG2HOST	src/defines.h	127;"	d
E1000_MANC_RCV_TCO_EN	src/defines.h	122;"	d
E1000_MANC_SMBUS_EN	src/defines.h	119;"	d
E1000_MAX_82574_SYSTIM_REREADS	src/e1000.h	448;"	d
E1000_MAX_INTR	src/e1000.h	67;"	d
E1000_MAX_ITR_USECS	src/e1000.h	80;"	d
E1000_MAX_NIC	src/param.c	32;"	d	file:
E1000_MAX_PHY_ADDR	src/phy.h	88;"	d
E1000_MAX_RXD	src/e1000.h	76;"	d
E1000_MAX_TXD	src/e1000.h	72;"	d
E1000_MCC	src/regs.h	139;"	d
E1000_MDEF	src/regs.h	220;"	d
E1000_MDEF_PORT_623	src/defines.h	131;"	d
E1000_MDEF_PORT_664	src/defines.h	132;"	d
E1000_MDIC	src/regs.h	32;"	d
E1000_MDIC_ERROR	src/defines.h	793;"	d
E1000_MDIC_OP_READ	src/defines.h	791;"	d
E1000_MDIC_OP_WRITE	src/defines.h	790;"	d
E1000_MDIC_PHY_SHIFT	src/defines.h	789;"	d
E1000_MDIC_READY	src/defines.h	792;"	d
E1000_MDIC_REG_MASK	src/defines.h	787;"	d
E1000_MDIC_REG_SHIFT	src/defines.h	788;"	d
E1000_MGTPDC	src/regs.h	172;"	d
E1000_MGTPRC	src/regs.h	171;"	d
E1000_MGTPTC	src/regs.h	173;"	d
E1000_MIN_ITR_USECS	src/e1000.h	79;"	d
E1000_MIN_RXD	src/e1000.h	77;"	d
E1000_MIN_TXD	src/e1000.h	73;"	d
E1000_MNG_DHCP_COMMAND_TIMEOUT	src/manage.h	47;"	d
E1000_MNG_DHCP_COOKIE_LENGTH	src/manage.h	45;"	d
E1000_MNG_DHCP_COOKIE_OFFSET	src/manage.h	46;"	d
E1000_MNG_DHCP_COOKIE_STATUS_PARSING	src/manage.h	49;"	d
E1000_MNG_DHCP_COOKIE_STATUS_VLAN	src/manage.h	50;"	d
E1000_MNG_DHCP_TX_PAYLOAD_CMD	src/manage.h	48;"	d
E1000_MNG_IAMT_MODE	src/manage.h	44;"	d
E1000_MNG_VLAN_NONE	src/e1000.h	91;"	d
E1000_MPC	src/regs.h	136;"	d
E1000_MPRC	src/regs.h	160;"	d
E1000_MPTC	src/regs.h	186;"	d
E1000_MRQC	src/regs.h	233;"	d
E1000_MRQC_RSS_FIELD_IPV4	src/defines.h	111;"	d
E1000_MRQC_RSS_FIELD_IPV4_TCP	src/defines.h	110;"	d
E1000_MRQC_RSS_FIELD_IPV6	src/defines.h	113;"	d
E1000_MRQC_RSS_FIELD_IPV6_TCP	src/defines.h	114;"	d
E1000_MRQC_RSS_FIELD_IPV6_TCP_EX	src/defines.h	112;"	d
E1000_MRQC_RSS_FIELD_MASK	src/defines.h	109;"	d
E1000_MTA	src/regs.h	207;"	d
E1000_NETDEV_STAT	src/ethtool.c	57;"	d	file:
E1000_NETDEV_STAT	src/ethtool.c	63;"	d	file:
E1000_NETDEV_STAT	src/ethtool.c	69;"	d	file:
E1000_NOT_IMPLEMENTED	src/defines.h	493;"	d
E1000_NVM_CFG_DONE_PORT_0	src/defines.h	610;"	d
E1000_NVM_CFG_DONE_PORT_1	src/defines.h	611;"	d
E1000_NVM_GRANT_ATTEMPTS	src/defines.h	578;"	d
E1000_NVM_INIT_CTRL2_MNGM	src/82571.h	44;"	d
E1000_NVM_K1_CONFIG	src/ich8lan.h	160;"	d
E1000_NVM_K1_ENABLE	src/ich8lan.h	161;"	d
E1000_NVM_POLL_READ	src/defines.h	592;"	d
E1000_NVM_POLL_WRITE	src/defines.h	591;"	d
E1000_NVM_RW_ADDR_SHIFT	src/defines.h	590;"	d
E1000_NVM_RW_REG_DATA	src/defines.h	587;"	d
E1000_NVM_RW_REG_DONE	src/defines.h	588;"	d
E1000_NVM_RW_REG_START	src/defines.h	589;"	d
E1000_PARAM	src/param.c	59;"	d	file:
E1000_PARAM	src/param.c	65;"	d	file:
E1000_PARAM	src/param.c	72;"	d	file:
E1000_PARAM_INIT	src/param.c	48;"	d	file:
E1000_PBA	src/regs.h	68;"	d
E1000_PBANUM_LENGTH	src/defines.h	625;"	d
E1000_PBA_16K	src/defines.h	371;"	d
E1000_PBA_8K	src/defines.h	370;"	d
E1000_PBA_ECC	src/regs.h	58;"	d
E1000_PBA_ECC_CORR_EN	src/defines.h	414;"	d
E1000_PBA_ECC_COUNTER_MASK	src/defines.h	412;"	d
E1000_PBA_ECC_COUNTER_SHIFT	src/defines.h	413;"	d
E1000_PBA_ECC_INT_EN	src/defines.h	416;"	d
E1000_PBA_ECC_STAT_CLR	src/defines.h	415;"	d
E1000_PBA_RXA_MASK	src/defines.h	373;"	d
E1000_PBECCSTS	src/regs.h	70;"	d
E1000_PBECCSTS_CORR_ERR_CNT_MASK	src/defines.h	378;"	d
E1000_PBECCSTS_ECC_ENABLE	src/defines.h	381;"	d
E1000_PBECCSTS_UNCORR_ERR_CNT_MASK	src/defines.h	379;"	d
E1000_PBECCSTS_UNCORR_ERR_CNT_SHIFT	src/defines.h	380;"	d
E1000_PBS	src/regs.h	69;"	d
E1000_PBS_16K	src/defines.h	375;"	d
E1000_PCH2_RAR_ENTRIES	src/ich8lan.h	104;"	d
E1000_PCH_LPT_RAR_ENTRIES	src/ich8lan.h	105;"	d
E1000_PCH_RAICC	src/ich8lan.h	270;"	d
E1000_PCI_LTR_CAP_LPT	src/ich8lan.h	281;"	d
E1000_PCI_REVISION_ID_REG	src/ich8lan.h	283;"	d
E1000_PCS_ANADV	src/regs.h	203;"	d
E1000_PCS_LCTL	src/regs.h	201;"	d
E1000_PCS_LCTL_FORCE_FCTRL	src/defines.h	224;"	d
E1000_PCS_LPAB	src/regs.h	204;"	d
E1000_PCS_LSTAT	src/regs.h	202;"	d
E1000_PCS_LSTS_AN_COMPLETE	src/defines.h	226;"	d
E1000_PHY_CTRL	src/regs.h	66;"	d
E1000_PHY_CTRL_D0A_LPLU	src/defines.h	359;"	d
E1000_PHY_CTRL_GBE_DISABLE	src/defines.h	362;"	d
E1000_PHY_CTRL_NOND0A_GBE_DISABLE	src/defines.h	361;"	d
E1000_PHY_CTRL_NOND0A_LPLU	src/defines.h	360;"	d
E1000_PHY_LED0_IVRT	src/defines.h	268;"	d
E1000_PHY_LED0_MASK	src/defines.h	269;"	d
E1000_PHY_LED0_MODE_MASK	src/defines.h	267;"	d
E1000_POEMB	src/regs.h	67;"	d
E1000_PRC1023	src/regs.h	156;"	d
E1000_PRC127	src/regs.h	153;"	d
E1000_PRC1522	src/regs.h	157;"	d
E1000_PRC255	src/regs.h	154;"	d
E1000_PRC511	src/regs.h	155;"	d
E1000_PRC64	src/regs.h	152;"	d
E1000_PSRCTL	src/regs.h	77;"	d
E1000_PSRCTL_BSIZE0_MASK	src/defines.h	181;"	d
E1000_PSRCTL_BSIZE0_SHIFT	src/defines.h	186;"	d
E1000_PSRCTL_BSIZE1_MASK	src/defines.h	182;"	d
E1000_PSRCTL_BSIZE1_SHIFT	src/defines.h	187;"	d
E1000_PSRCTL_BSIZE2_MASK	src/defines.h	183;"	d
E1000_PSRCTL_BSIZE2_SHIFT	src/defines.h	188;"	d
E1000_PSRCTL_BSIZE3_MASK	src/defines.h	184;"	d
E1000_PSRCTL_BSIZE3_SHIFT	src/defines.h	189;"	d
E1000_PTC1023	src/regs.h	184;"	d
E1000_PTC127	src/regs.h	181;"	d
E1000_PTC1522	src/regs.h	185;"	d
E1000_PTC255	src/regs.h	182;"	d
E1000_PTC511	src/regs.h	183;"	d
E1000_PTC64	src/regs.h	180;"	d
E1000_RA	src/regs.h	208;"	d
E1000_RADV	src/regs.h	85;"	d
E1000_RAH	src/regs.h	121;"	d
E1000_RAH_AV	src/defines.h	477;"	d
E1000_RAH_MAC_ADDR_LEN	src/defines.h	479;"	d
E1000_RAL	src/regs.h	119;"	d
E1000_RAL_MAC_ADDR_LEN	src/defines.h	478;"	d
E1000_RAR_ENTRIES	src/defines.h	476;"	d
E1000_RCTL	src/regs.h	54;"	d
E1000_RCTL_BAM	src/defines.h	147;"	d
E1000_RCTL_BSEX	src/defines.h	162;"	d
E1000_RCTL_CFI	src/defines.h	159;"	d
E1000_RCTL_CFIEN	src/defines.h	158;"	d
E1000_RCTL_DPF	src/defines.h	160;"	d
E1000_RCTL_DTYP_PS	src/defines.h	143;"	d
E1000_RCTL_EN	src/defines.h	135;"	d
E1000_RCTL_LBM_MAC	src/defines.h	141;"	d
E1000_RCTL_LBM_NO	src/defines.h	140;"	d
E1000_RCTL_LBM_TCVR	src/defines.h	142;"	d
E1000_RCTL_LPE	src/defines.h	139;"	d
E1000_RCTL_MO_3	src/defines.h	146;"	d
E1000_RCTL_MO_SHIFT	src/defines.h	145;"	d
E1000_RCTL_MPE	src/defines.h	138;"	d
E1000_RCTL_PMCF	src/defines.h	161;"	d
E1000_RCTL_RDMTS_HALF	src/defines.h	144;"	d
E1000_RCTL_SBP	src/defines.h	136;"	d
E1000_RCTL_SECRC	src/defines.h	163;"	d
E1000_RCTL_SZ_1024	src/defines.h	150;"	d
E1000_RCTL_SZ_16384	src/defines.h	154;"	d
E1000_RCTL_SZ_2048	src/defines.h	149;"	d
E1000_RCTL_SZ_256	src/defines.h	152;"	d
E1000_RCTL_SZ_4096	src/defines.h	156;"	d
E1000_RCTL_SZ_512	src/defines.h	151;"	d
E1000_RCTL_SZ_8192	src/defines.h	155;"	d
E1000_RCTL_UPE	src/defines.h	137;"	d
E1000_RCTL_VFE	src/defines.h	157;"	d
E1000_RDBAH	src/regs.h	95;"	d
E1000_RDBAL	src/regs.h	93;"	d
E1000_RDFH	src/regs.h	78;"	d
E1000_RDFHS	src/regs.h	80;"	d
E1000_RDFPC	src/regs.h	82;"	d
E1000_RDFT	src/regs.h	79;"	d
E1000_RDFTS	src/regs.h	81;"	d
E1000_RDH	src/regs.h	99;"	d
E1000_RDLEN	src/regs.h	97;"	d
E1000_RDT	src/regs.h	101;"	d
E1000_RDTR	src/regs.h	84;"	d
E1000_RDTR_FPD	src/e1000.h	127;"	d
E1000_READ_REG_ARRAY	src/e1000.h	692;"	d
E1000_RECEIVE_ERROR_COUNTER	src/82571.h	48;"	d
E1000_RECEIVE_ERROR_MAX	src/82571.h	49;"	d
E1000_REGS_LEN	src/ethtool.c	598;"	d	file:
E1000_RETA	src/regs.h	234;"	d
E1000_REVISION_4	src/hw.h	92;"	d
E1000_RFC	src/regs.h	168;"	d
E1000_RFCTL	src/regs.h	206;"	d
E1000_RFCTL_ACK_DIS	src/defines.h	322;"	d
E1000_RFCTL_EXTEN	src/defines.h	323;"	d
E1000_RFCTL_IPV6_EX_DIS	src/defines.h	324;"	d
E1000_RFCTL_NEW_IPV6_EXT_DIS	src/defines.h	325;"	d
E1000_RFCTL_NFSR_DIS	src/defines.h	321;"	d
E1000_RFCTL_NFSW_DIS	src/defines.h	320;"	d
E1000_RJC	src/regs.h	170;"	d
E1000_RLEC	src/regs.h	146;"	d
E1000_RNBC	src/regs.h	166;"	d
E1000_ROC	src/regs.h	169;"	d
E1000_RSSRK	src/regs.h	235;"	d
E1000_RUC	src/regs.h	167;"	d
E1000_RXCSUM	src/regs.h	205;"	d
E1000_RXCSUM_IPPCSE	src/defines.h	316;"	d
E1000_RXCSUM_PCSD	src/defines.h	317;"	d
E1000_RXCSUM_TUOFL	src/defines.h	315;"	d
E1000_RXCW	src/regs.h	57;"	d
E1000_RXCW_C	src/defines.h	527;"	d
E1000_RXCW_CW	src/defines.h	525;"	d
E1000_RXCW_IV	src/defines.h	526;"	d
E1000_RXCW_SYNCH	src/defines.h	528;"	d
E1000_RXDCTL	src/regs.h	103;"	d
E1000_RXDCTL_DMA_BURST_ENABLE	src/e1000.h	120;"	d
E1000_RXDEXT_ERR_FRAME_ERR_MASK	src/defines.h	102;"	d
E1000_RXDEXT_STATERR_CE	src/defines.h	87;"	d
E1000_RXDEXT_STATERR_CXE	src/defines.h	90;"	d
E1000_RXDEXT_STATERR_RXE	src/defines.h	91;"	d
E1000_RXDEXT_STATERR_SE	src/defines.h	88;"	d
E1000_RXDEXT_STATERR_SEQ	src/defines.h	89;"	d
E1000_RXDEXT_STATERR_TST	src/defines.h	86;"	d
E1000_RXDPS_HDRSTAT_HDRSP	src/defines.h	116;"	d
E1000_RXD_ERR_CE	src/defines.h	77;"	d
E1000_RXD_ERR_CXE	src/defines.h	80;"	d
E1000_RXD_ERR_FRAME_ERR_MASK	src/defines.h	94;"	d
E1000_RXD_ERR_IPE	src/defines.h	82;"	d
E1000_RXD_ERR_RXE	src/defines.h	83;"	d
E1000_RXD_ERR_SE	src/defines.h	78;"	d
E1000_RXD_ERR_SEQ	src/defines.h	79;"	d
E1000_RXD_ERR_TCPE	src/defines.h	81;"	d
E1000_RXD_SPC_VLAN_MASK	src/defines.h	84;"	d
E1000_RXD_STAT_DD	src/defines.h	71;"	d
E1000_RXD_STAT_EOP	src/defines.h	72;"	d
E1000_RXD_STAT_IXSM	src/defines.h	73;"	d
E1000_RXD_STAT_TCPCS	src/defines.h	76;"	d
E1000_RXD_STAT_UDPCS	src/defines.h	75;"	d
E1000_RXD_STAT_VP	src/defines.h	74;"	d
E1000_RXERRC	src/regs.h	135;"	d
E1000_RXMTRL	src/regs.h	245;"	d
E1000_RXMTRL_PTP_V1_DELAY_REQ_MESSAGE	src/defines.h	544;"	d
E1000_RXMTRL_PTP_V1_SYNC_MESSAGE	src/defines.h	543;"	d
E1000_RXMTRL_PTP_V2_DELAY_REQ_MESSAGE	src/defines.h	547;"	d
E1000_RXMTRL_PTP_V2_SYNC_MESSAGE	src/defines.h	546;"	d
E1000_RXSTMPH	src/regs.h	239;"	d
E1000_RXSTMPL	src/regs.h	238;"	d
E1000_RXUDP	src/regs.h	246;"	d
E1000_RX_BUFFER_WRITE	src/e1000.h	86;"	d
E1000_RX_DESC_EXT	src/e1000.h	507;"	d
E1000_RX_DESC_PS	src/e1000.h	505;"	d
E1000_SCC	src/regs.h	137;"	d
E1000_SCTL	src/regs.h	33;"	d
E1000_SCTL_DISABLE_SERDES_LOOPBACK	src/defines.h	311;"	d
E1000_SCTL_ENABLE_SERDES_LOOPBACK	src/defines.h	312;"	d
E1000_SEC	src/regs.h	144;"	d
E1000_SHRAH	src/regs.h	124;"	d
E1000_SHRAH_PCH_LPT	src/ich8lan.h	65;"	d
E1000_SHRAL	src/regs.h	123;"	d
E1000_SHRAL_PCH_LPT	src/ich8lan.h	64;"	d
E1000_STAT	src/ethtool.c	51;"	d	file:
E1000_STATS	src/ethtool.c	/^enum { NETDEV_STATS, E1000_STATS };$/;"	e	enum:__anon38	file:
E1000_STATS_LEN	src/ethtool.c	156;"	d	file:
E1000_STATUS	src/regs.h	27;"	d
E1000_STATUS_FD	src/defines.h	229;"	d
E1000_STATUS_FUNC_1	src/defines.h	233;"	d
E1000_STATUS_FUNC_MASK	src/defines.h	231;"	d
E1000_STATUS_FUNC_SHIFT	src/defines.h	232;"	d
E1000_STATUS_GIO_MASTER_ENABLE	src/defines.h	241;"	d
E1000_STATUS_LAN_INIT_DONE	src/defines.h	239;"	d
E1000_STATUS_LU	src/defines.h	230;"	d
E1000_STATUS_PHYRA	src/defines.h	240;"	d
E1000_STATUS_SPEED_10	src/defines.h	236;"	d
E1000_STATUS_SPEED_100	src/defines.h	237;"	d
E1000_STATUS_SPEED_1000	src/defines.h	238;"	d
E1000_STATUS_SPEED_MASK	src/defines.h	235;"	d
E1000_STATUS_TXOFF	src/defines.h	234;"	d
E1000_STM_OPCODE	src/nvm.h	39;"	d
E1000_STRAP	src/ich8lan.h	187;"	d
E1000_STRAP_SMBUS_ADDRESS_MASK	src/ich8lan.h	188;"	d
E1000_STRAP_SMBUS_ADDRESS_SHIFT	src/ich8lan.h	189;"	d
E1000_STRAP_SMT_FREQ_MASK	src/ich8lan.h	190;"	d
E1000_STRAP_SMT_FREQ_SHIFT	src/ich8lan.h	191;"	d
E1000_SVCR	src/regs.h	51;"	d
E1000_SVT	src/regs.h	52;"	d
E1000_SWFW_CSR_SM	src/defines.h	195;"	d
E1000_SWFW_EEP_SM	src/defines.h	192;"	d
E1000_SWFW_PHY0_SM	src/defines.h	193;"	d
E1000_SWFW_PHY1_SM	src/defines.h	194;"	d
E1000_SWSM	src/regs.h	225;"	d
E1000_SWSM2	src/regs.h	228;"	d
E1000_SWSM2_LOCK	src/defines.h	394;"	d
E1000_SWSM_DRV_LOAD	src/defines.h	392;"	d
E1000_SWSM_SMBI	src/defines.h	390;"	d
E1000_SWSM_SWESMBI	src/defines.h	391;"	d
E1000_SW_FW_SYNC	src/regs.h	221;"	d
E1000_SYMERRS	src/regs.h	134;"	d
E1000_SYSTIMH	src/regs.h	243;"	d
E1000_SYSTIML	src/regs.h	242;"	d
E1000_SYSTIM_OVERFLOW_PERIOD	src/e1000.h	447;"	d
E1000_TADV	src/regs.h	131;"	d
E1000_TARC	src/regs.h	117;"	d
E1000_TCTL	src/regs.h	59;"	d
E1000_TCTL_COLD	src/defines.h	306;"	d
E1000_TCTL_CT	src/defines.h	305;"	d
E1000_TCTL_EN	src/defines.h	303;"	d
E1000_TCTL_EXT	src/regs.h	60;"	d
E1000_TCTL_EXT_GCEX_MASK	src/80003es2lan.h	42;"	d
E1000_TCTL_MULR	src/defines.h	308;"	d
E1000_TCTL_PSP	src/defines.h	304;"	d
E1000_TCTL_RTLC	src/defines.h	307;"	d
E1000_TDBAH	src/regs.h	107;"	d
E1000_TDBAL	src/regs.h	105;"	d
E1000_TDFH	src/regs.h	125;"	d
E1000_TDFHS	src/regs.h	127;"	d
E1000_TDFPC	src/regs.h	129;"	d
E1000_TDFT	src/regs.h	126;"	d
E1000_TDFTS	src/regs.h	128;"	d
E1000_TDH	src/regs.h	111;"	d
E1000_TDLEN	src/regs.h	109;"	d
E1000_TDT	src/regs.h	113;"	d
E1000_TEST_LEN	src/ethtool.c	163;"	d	file:
E1000_TIDV	src/regs.h	130;"	d
E1000_TIDV_FPD	src/e1000.h	126;"	d
E1000_TIMINCA	src/regs.h	244;"	d
E1000_TIMINCA_INCPERIOD_SHIFT	src/defines.h	549;"	d
E1000_TIMINCA_INCVALUE_MASK	src/defines.h	550;"	d
E1000_TIPG	src/regs.h	61;"	d
E1000_TIPG_IPGR1_SHIFT	src/defines.h	339;"	d
E1000_TIPG_IPGR2_SHIFT	src/defines.h	343;"	d
E1000_TIPG_IPGT_MASK	src/defines.h	336;"	d
E1000_TNCRS	src/regs.h	143;"	d
E1000_TORH	src/regs.h	175;"	d
E1000_TORL	src/regs.h	174;"	d
E1000_TOTH	src/regs.h	177;"	d
E1000_TOTL	src/regs.h	176;"	d
E1000_TPR	src/regs.h	178;"	d
E1000_TPT	src/regs.h	179;"	d
E1000_TSCTC	src/regs.h	188;"	d
E1000_TSCTFC	src/regs.h	189;"	d
E1000_TSYNCRXCTL	src/regs.h	236;"	d
E1000_TSYNCRXCTL_ENABLED	src/defines.h	540;"	d
E1000_TSYNCRXCTL_SYSCFI	src/defines.h	541;"	d
E1000_TSYNCRXCTL_TYPE_ALL	src/defines.h	538;"	d
E1000_TSYNCRXCTL_TYPE_EVENT_V2	src/defines.h	539;"	d
E1000_TSYNCRXCTL_TYPE_L2_L4_V2	src/defines.h	537;"	d
E1000_TSYNCRXCTL_TYPE_L2_V2	src/defines.h	535;"	d
E1000_TSYNCRXCTL_TYPE_L4_V1	src/defines.h	536;"	d
E1000_TSYNCRXCTL_TYPE_MASK	src/defines.h	534;"	d
E1000_TSYNCRXCTL_VALID	src/defines.h	533;"	d
E1000_TSYNCTXCTL	src/regs.h	237;"	d
E1000_TSYNCTXCTL_ENABLED	src/defines.h	531;"	d
E1000_TSYNCTXCTL_VALID	src/defines.h	530;"	d
E1000_TXCW	src/regs.h	56;"	d
E1000_TXCW_ANE	src/defines.h	522;"	d
E1000_TXCW_ASM_DIR	src/defines.h	520;"	d
E1000_TXCW_FD	src/defines.h	518;"	d
E1000_TXCW_PAUSE	src/defines.h	519;"	d
E1000_TXCW_PAUSE_MASK	src/defines.h	521;"	d
E1000_TXDCTL	src/regs.h	115;"	d
E1000_TXDCTL_COUNT_DESC	src/defines.h	459;"	d
E1000_TXDCTL_DMA_BURST_ENABLE	src/e1000.h	113;"	d
E1000_TXDCTL_FULL_TX_DESC_WB	src/defines.h	456;"	d
E1000_TXDCTL_GRAN	src/defines.h	455;"	d
E1000_TXDCTL_HTHRESH	src/defines.h	453;"	d
E1000_TXDCTL_MAX_TX_DESC_PREFETCH	src/defines.h	457;"	d
E1000_TXDCTL_PTHRESH	src/defines.h	452;"	d
E1000_TXDCTL_WTHRESH	src/defines.h	454;"	d
E1000_TXD_CMD_DEXT	src/defines.h	289;"	d
E1000_TXD_CMD_EOP	src/defines.h	284;"	d
E1000_TXD_CMD_IC	src/defines.h	286;"	d
E1000_TXD_CMD_IDE	src/defines.h	291;"	d
E1000_TXD_CMD_IFCS	src/defines.h	285;"	d
E1000_TXD_CMD_IP	src/defines.h	297;"	d
E1000_TXD_CMD_RPS	src/defines.h	288;"	d
E1000_TXD_CMD_RS	src/defines.h	287;"	d
E1000_TXD_CMD_TCP	src/defines.h	296;"	d
E1000_TXD_CMD_TSE	src/defines.h	298;"	d
E1000_TXD_CMD_VLE	src/defines.h	290;"	d
E1000_TXD_DTYP_D	src/defines.h	281;"	d
E1000_TXD_EXTCMD_TSTAMP	src/defines.h	300;"	d
E1000_TXD_POPTS_IXSM	src/defines.h	282;"	d
E1000_TXD_POPTS_TXSM	src/defines.h	283;"	d
E1000_TXD_STAT_DD	src/defines.h	292;"	d
E1000_TXD_STAT_EC	src/defines.h	293;"	d
E1000_TXD_STAT_LC	src/defines.h	294;"	d
E1000_TXD_STAT_TC	src/defines.h	299;"	d
E1000_TXD_STAT_TU	src/defines.h	295;"	d
E1000_TXSTMPH	src/regs.h	241;"	d
E1000_TXSTMPL	src/regs.h	240;"	d
E1000_TX_DESC	src/e1000.h	510;"	d
E1000_TX_FLAGS_CSUM	src/netdev.c	5768;"	d	file:
E1000_TX_FLAGS_HWTSTAMP	src/netdev.c	5773;"	d	file:
E1000_TX_FLAGS_IPV4	src/netdev.c	5771;"	d	file:
E1000_TX_FLAGS_NO_FCS	src/netdev.c	5772;"	d	file:
E1000_TX_FLAGS_TSO	src/netdev.c	5770;"	d	file:
E1000_TX_FLAGS_VLAN	src/netdev.c	5769;"	d	file:
E1000_TX_FLAGS_VLAN_MASK	src/netdev.c	5774;"	d	file:
E1000_TX_FLAGS_VLAN_SHIFT	src/netdev.c	5775;"	d	file:
E1000_TX_PTR_GAP	src/defines.h	346;"	d
E1000_VET	src/regs.h	43;"	d
E1000_VFTA	src/regs.h	209;"	d
E1000_VFTA_ENTRY_BIT_SHIFT_MASK	src/manage.h	54;"	d
E1000_VFTA_ENTRY_MASK	src/manage.h	53;"	d
E1000_VFTA_ENTRY_SHIFT	src/manage.h	52;"	d
E1000_VLAN_FILTER_TBL_SIZE	src/defines.h	467;"	d
E1000_WRITE_REG_ARRAY	src/e1000.h	689;"	d
E1000_WUC	src/regs.h	210;"	d
E1000_WUC_APME	src/defines.h	32;"	d
E1000_WUC_APMPME	src/defines.h	35;"	d
E1000_WUC_PHY_WAKE	src/defines.h	36;"	d
E1000_WUC_PME_EN	src/defines.h	33;"	d
E1000_WUC_PME_STATUS	src/defines.h	34;"	d
E1000_WUFC	src/regs.h	211;"	d
E1000_WUFC_ARP	src/defines.h	44;"	d
E1000_WUFC_BC	src/defines.h	43;"	d
E1000_WUFC_EX	src/defines.h	41;"	d
E1000_WUFC_LNKC	src/defines.h	39;"	d
E1000_WUFC_MAG	src/defines.h	40;"	d
E1000_WUFC_MC	src/defines.h	42;"	d
E1000_WUS	src/regs.h	212;"	d
E1000_WUS_BC	src/defines.h	51;"	d
E1000_WUS_EX	src/defines.h	49;"	d
E1000_WUS_LNKC	src/defines.h	47;"	d
E1000_WUS_MAG	src/defines.h	48;"	d
E1000_WUS_MC	src/defines.h	50;"	d
E1000_XOFFRXC	src/regs.h	149;"	d
E1000_XOFFTXC	src/regs.h	150;"	d
E1000_XONRXC	src/regs.h	147;"	d
E1000_XONTXC	src/regs.h	148;"	d
ESTATUS_1000_TFULL	src/kcompat.h	1767;"	d
ESTATUS_1000_THALF	src/kcompat.h	1768;"	d
ETHTOOL_BUSINFO_LEN	src/kcompat.h	674;"	d
ETHTOOL_GCOALESCE	src/kcompat.h	477;"	d
ETHTOOL_GEEPROM	src/kcompat.h	414;"	d
ETHTOOL_GEEPROM	src/kcompat.h	471;"	d
ETHTOOL_GLINK	src/kcompat.h	431;"	d
ETHTOOL_GLINK	src/kcompat.h	468;"	d
ETHTOOL_GMSGLVL	src/kcompat.h	459;"	d
ETHTOOL_GPAUSEPARAM	src/kcompat.h	609;"	d
ETHTOOL_GREGS	src/kcompat.h	415;"	d
ETHTOOL_GREGS	src/kcompat.h	447;"	d
ETHTOOL_GRINGPARAM	src/kcompat.h	580;"	d
ETHTOOL_GRXCSUM	src/kcompat.h	635;"	d
ETHTOOL_GSG	src/kcompat.h	647;"	d
ETHTOOL_GSTATS	src/kcompat.h	356;"	d
ETHTOOL_GSTATS	src/kcompat.h	664;"	d
ETHTOOL_GSTRINGS	src/kcompat.h	385;"	d
ETHTOOL_GSTRINGS	src/kcompat.h	658;"	d
ETHTOOL_GTSO	src/kcompat.h	667;"	d
ETHTOOL_GTXCSUM	src/kcompat.h	641;"	d
ETHTOOL_GWOL	src/kcompat.h	435;"	d
ETHTOOL_NWAY_RST	src/kcompat.h	465;"	d
ETHTOOL_OPS_COMPAT	src/kcompat.h	1115;"	d
ETHTOOL_OPS_COMPAT	src/kcompat_ethtool.c	775;"	d	file:
ETHTOOL_PHYS_ID	src/kcompat.h	381;"	d
ETHTOOL_PHYS_ID	src/kcompat.h	661;"	d
ETHTOOL_RXNTUPLE_ACTION_CLEAR	src/kcompat.h	3235;"	d
ETHTOOL_SCOALESCE	src/kcompat.h	577;"	d
ETHTOOL_SEEPROM	src/kcompat.h	474;"	d
ETHTOOL_SMSGLVL	src/kcompat.h	462;"	d
ETHTOOL_SPAUSEPARAM	src/kcompat.h	632;"	d
ETHTOOL_SRINGPARAM	src/kcompat.h	606;"	d
ETHTOOL_SRXCSUM	src/kcompat.h	638;"	d
ETHTOOL_SRXNTUPLE	src/kcompat.h	3599;"	d
ETHTOOL_SSG	src/kcompat.h	651;"	d
ETHTOOL_STSO	src/kcompat.h	670;"	d
ETHTOOL_STXCSUM	src/kcompat.h	644;"	d
ETHTOOL_SWOL	src/kcompat.h	436;"	d
ETHTOOL_TEST	src/kcompat.h	399;"	d
ETHTOOL_TEST	src/kcompat.h	655;"	d
ETH_FCS_LEN	src/kcompat.h	2168;"	d
ETH_FLAG_LRO	src/kcompat.h	2237;"	d
ETH_FLAG_NTUPLE	src/kcompat.h	2921;"	d
ETH_FLAG_RXHASH	src/kcompat.h	3140;"	d
ETH_FLAG_RXVLAN	src/kcompat.h	3244;"	d
ETH_FLAG_TXVLAN	src/kcompat.h	3241;"	d
ETH_GSTRING_LEN	src/kcompat.h	352;"	d
ETH_P_1588	src/kcompat.h	2690;"	d
ETH_P_8021AD	src/kcompat.h	3470;"	d
ETH_P_8021Q	src/kcompat.h	130;"	d
ETH_P_FIP	src/kcompat.h	2691;"	d
ETH_SS_STATS	src/kcompat.h	/^	ETH_SS_STATS,$/;"	e	enum:ethtool_stringset
ETH_SS_TEST	src/kcompat.h	/^	ETH_SS_TEST = 0,$/;"	e	enum:ethtool_stringset
ETH_TEST_FL_FAILED	src/kcompat.h	/^	ETH_TEST_FL_FAILED = (1 << 1),$/;"	e	enum:ethtool_test_flags
ETH_TEST_FL_OFFLINE	src/kcompat.h	/^	ETH_TEST_FL_OFFLINE = (1 << 0),$/;"	e	enum:ethtool_test_flags
ETH_TYPE_TRANS_SETS_DEV	src/kcompat.h	2208;"	d
EXPANSION_ENABLENPAGE	src/kcompat.h	817;"	d
FALSE	src/kcompat.h	117;"	d
FALSE	src/kcompat.h	119;"	d
FAMILYC	src/Makefile	/^FAMILYC = 82571.c ich8lan.c 80003es2lan.c$/;"	m
FAMILYH	src/Makefile	/^FAMILYH = 82571.h ich8lan.h 80003es2lan.h$/;"	m
FIBER_LINK_UP_LIMIT	src/defines.h	499;"	d
FIELD_SIZEOF	src/kcompat.h	1899;"	d
FLAG2_CHECK_PHY_HANG	src/e1000.h	499;"	d
FLAG2_CHECK_RX_HWTSTAMP	src/e1000.h	503;"	d
FLAG2_CRC_STRIPPING	src/e1000.h	490;"	d
FLAG2_DFLT_CRC_STRIPPING	src/e1000.h	502;"	d
FLAG2_DISABLE_AIM	src/e1000.h	498;"	d
FLAG2_DISABLE_ASPM_L0S	src/e1000.h	497;"	d
FLAG2_DISABLE_ASPM_L1	src/e1000.h	493;"	d
FLAG2_DMA_BURST	src/e1000.h	496;"	d
FLAG2_HAS_EEE	src/e1000.h	495;"	d
FLAG2_HAS_PHY_STATS	src/e1000.h	494;"	d
FLAG2_HAS_PHY_WAKEUP	src/e1000.h	491;"	d
FLAG2_IS_DISCARDING	src/e1000.h	492;"	d
FLAG2_NO_DISABLE_RX	src/e1000.h	500;"	d
FLAG2_PCIM2PCI_ARBITER_WA	src/e1000.h	501;"	d
FLAG_APME_CHECK_PORT_B	src/e1000.h	470;"	d
FLAG_APME_IN_CTRL3	src/e1000.h	469;"	d
FLAG_APME_IN_WUC	src/e1000.h	468;"	d
FLAG_DISABLE_FC_PAUSE_TIME	src/e1000.h	471;"	d
FLAG_HAS_AMT	src/e1000.h	453;"	d
FLAG_HAS_CTRLEXT_ON_LOAD	src/e1000.h	458;"	d
FLAG_HAS_FLASH	src/e1000.h	454;"	d
FLAG_HAS_HW_TIMESTAMP	src/e1000.h	467;"	d
FLAG_HAS_HW_VLAN_FILTER	src/e1000.h	455;"	d
FLAG_HAS_JUMBO_FRAMES	src/e1000.h	460;"	d
FLAG_HAS_MSIX	src/e1000.h	463;"	d
FLAG_HAS_SMART_POWER_DOWN	src/e1000.h	464;"	d
FLAG_HAS_SWSM_ON_LOAD	src/e1000.h	459;"	d
FLAG_HAS_WOL	src/e1000.h	456;"	d
FLAG_IS_ICH	src/e1000.h	462;"	d
FLAG_IS_QUAD_PORT	src/e1000.h	466;"	d
FLAG_IS_QUAD_PORT_A	src/e1000.h	465;"	d
FLAG_LSC_GIG_SPEED_DROP	src/e1000.h	478;"	d
FLAG_MNG_PT_ENABLED	src/e1000.h	473;"	d
FLAG_MSI_ENABLED	src/e1000.h	480;"	d
FLAG_MSI_TEST_FAILED	src/e1000.h	488;"	d
FLAG_NO_WAKE_UCAST	src/e1000.h	472;"	d
FLAG_RESET_OVERWRITES_LAA	src/e1000.h	474;"	d
FLAG_RESTART_NOW	src/e1000.h	487;"	d
FLAG_RX_CSUM_ENABLED	src/e1000.h	482;"	d
FLAG_RX_NEEDS_RESTART	src/e1000.h	477;"	d
FLAG_SMART_POWER_DOWN	src/e1000.h	479;"	d
FLAG_TARC_SET_BIT_ZERO	src/e1000.h	476;"	d
FLAG_TARC_SPEED_MODE_BIT	src/e1000.h	475;"	d
FLAG_TSO_FORCE	src/e1000.h	486;"	d
FLASH_GFPREG_BASE_MASK	src/ich8lan.h	43;"	d
FLASH_SECTOR_ADDR_SHIFT	src/ich8lan.h	44;"	d
FLOW_CONTROL_ADDRESS_HIGH	src/defines.h	463;"	d
FLOW_CONTROL_ADDRESS_LOW	src/defines.h	462;"	d
FLOW_CONTROL_TYPE	src/defines.h	464;"	d
FLOW_EXT	src/kcompat.h	3401;"	d
FULL_DUPLEX	src/defines.h	244;"	d
GG82563_CABLE_LENGTH_TABLE_SIZE	src/80003es2lan.c	37;"	d	file:
GG82563_DSPD_CABLE_LENGTH	src/80003es2lan.h	74;"	d
GG82563_E_PHY_ID	src/defines.h	689;"	d
GG82563_ICR_DIS_PADDING	src/80003es2lan.h	87;"	d
GG82563_KMCR_PASS_FALSE_CARRIER	src/80003es2lan.h	77;"	d
GG82563_MAX_KMRN_RETRY	src/80003es2lan.h	80;"	d
GG82563_MIN_ALT_REG	src/defines.h	765;"	d
GG82563_MSCR_ASSERT_CRS_ON_TX	src/80003es2lan.h	65;"	d
GG82563_MSCR_TX_CLK_1000MBPS_25	src/80003es2lan.h	63;"	d
GG82563_MSCR_TX_CLK_100MBPS_25	src/80003es2lan.h	62;"	d
GG82563_MSCR_TX_CLK_10MBPS_2_5	src/80003es2lan.h	61;"	d
GG82563_MSCR_TX_CLK_MASK	src/80003es2lan.h	60;"	d
GG82563_PAGE_SHIFT	src/defines.h	762;"	d
GG82563_PHY_DSP_DISTANCE	src/defines.h	776;"	d
GG82563_PHY_INBAND_CTRL	src/defines.h	784;"	d
GG82563_PHY_KMRN_MODE_CTRL	src/defines.h	780;"	d
GG82563_PHY_MAC_SPEC_CTRL	src/defines.h	774;"	d
GG82563_PHY_PAGE_SELECT	src/defines.h	769;"	d
GG82563_PHY_PAGE_SELECT_ALT	src/defines.h	771;"	d
GG82563_PHY_PWR_MGMT_CTRL	src/defines.h	781;"	d
GG82563_PHY_SPEC_CTRL	src/defines.h	768;"	d
GG82563_PHY_SPEC_CTRL_2	src/defines.h	770;"	d
GG82563_PMCR_ENABLE_ELECTRICAL_IDLE	src/80003es2lan.h	84;"	d
GG82563_PSCR2_REVERSE_AUTO_NEG	src/80003es2lan.h	56;"	d
GG82563_PSCR_CROSSOVER_MODE_AUTO	src/80003es2lan.h	53;"	d
GG82563_PSCR_CROSSOVER_MODE_MASK	src/80003es2lan.h	50;"	d
GG82563_PSCR_CROSSOVER_MODE_MDI	src/80003es2lan.h	51;"	d
GG82563_PSCR_CROSSOVER_MODE_MDIX	src/80003es2lan.h	52;"	d
GG82563_PSCR_POLARITY_REVERSAL_DISABLE	src/80003es2lan.h	49;"	d
GG82563_REG	src/defines.h	763;"	d
HALF_DUPLEX	src/defines.h	243;"	d
HAVE_8021P_SUPPORT	src/kcompat.h	3212;"	d
HAVE_8021P_SUPPORT	src/kcompat.h	3218;"	d
HAVE_ASPM_QUIRKS	src/kcompat.h	2685;"	d
HAVE_BRIDGE_ATTRIBS	src/kcompat.h	3949;"	d
HAVE_BRIDGE_FILTER	src/kcompat.h	3981;"	d
HAVE_CONFIG_HOTPLUG	src/kcompat.h	3903;"	d
HAVE_CONST_STRUCT_PCI_ERROR_HANDLERS	src/kcompat.h	3882;"	d
HAVE_DCBNL_IEEE	src/kcompat.h	3385;"	d
HAVE_DCBNL_IEEE_DELAPP	src/kcompat.h	3474;"	d
HAVE_DCBNL_OPS_GETAPP	src/kcompat.h	2813;"	d
HAVE_DEVICE_NUMA_NODE	src/kcompat.h	2099;"	d
HAVE_EARLY_VMALLOC_NODE	src/kcompat.h	2072;"	d
HAVE_ENCAP_CSUM_OFFLOAD	src/kcompat.h	3942;"	d
HAVE_ENCAP_TSO_OFFLOAD	src/kcompat.h	4015;"	d
HAVE_ETHTOOL_GET_PERM_ADDR	src/kcompat.h	2230;"	d
HAVE_ETHTOOL_GET_RXNFC_VOID_RULE_LOCS	src/kcompat.h	3492;"	d
HAVE_ETHTOOL_GET_SSET_COUNT	src/kcompat.h	2373;"	d
HAVE_ETHTOOL_GET_TS_INFO	src/kcompat.h	2900;"	d
HAVE_ETHTOOL_GET_TS_INFO	src/kcompat.h	3676;"	d
HAVE_ETHTOOL_GRXFHINDIR_SIZE	src/kcompat.h	2898;"	d
HAVE_ETHTOOL_GRXFHINDIR_SIZE	src/kcompat.h	3593;"	d
HAVE_ETHTOOL_GRXFHINDIR_SIZE	src/kcompat.h	3596;"	d
HAVE_ETHTOOL_SET_PHYS_ID	src/kcompat.h	2899;"	d
HAVE_ETHTOOL_SET_PHYS_ID	src/kcompat.h	3438;"	d
HAVE_FDB_OPS	src/kcompat.h	3675;"	d
HAVE_I2C_SUPPORT	src/kcompat.h	1412;"	d
HAVE_IGB_DEBUG_FS	src/kcompat.h	2581;"	d
HAVE_IGB_DEBUG_FS	src/kcompat.h	2587;"	d
HAVE_INCLUDE_LINUX_MDIO_H	src/kcompat.h	2743;"	d
HAVE_INT_NDO_VLAN_RX_ADD_VID	src/kcompat.h	3597;"	d
HAVE_IRQ_AFFINITY_HINT	src/kcompat.h	3143;"	d
HAVE_IRQ_AFFINITY_HINT	src/kcompat.h	3147;"	d
HAVE_IXGBE_DEBUG_FS	src/kcompat.h	2580;"	d
HAVE_IXGBE_DEBUG_FS	src/kcompat.h	2586;"	d
HAVE_MQPRIO	src/kcompat.h	3378;"	d
HAVE_NDO_DFWD_OPS	src/kcompat.h	4099;"	d
HAVE_NDO_GET_PHYS_PORT_ID	src/kcompat.h	4031;"	d
HAVE_NDO_GET_STATS64	src/kcompat.h	3219;"	d
HAVE_NDO_SELECT_QUEUE_ACCEL	src/kcompat.h	4040;"	d
HAVE_NDO_SELECT_QUEUE_ACCEL_FALLBACK	src/kcompat.h	4028;"	d
HAVE_NDO_SELECT_QUEUE_ACCEL_FALLBACK	src/kcompat.h	4101;"	d
HAVE_NDO_SET_FEATURES	src/kcompat.h	3389;"	d
HAVE_NDO_SET_VF_LINK_STATE	src/kcompat.h	4021;"	d
HAVE_NDO_SET_VF_MIN_MAX_TX_RATE	src/kcompat.h	4208;"	d
HAVE_NETDEV_HW_ADDR	src/kcompat.h	2737;"	d
HAVE_NETDEV_NAPI_LIST	src/kcompat.h	2374;"	d
HAVE_NETDEV_OPS_FCOE_DDP_TARGET	src/kcompat.h	3374;"	d
HAVE_NETDEV_OPS_FCOE_ENABLE	src/kcompat.h	2808;"	d
HAVE_NETDEV_OPS_FCOE_GETWWN	src/kcompat.h	2837;"	d
HAVE_NETDEV_OPS_FCOE_GETWWN	src/kcompat.h	2906;"	d
HAVE_NETDEV_SELECT_QUEUE	src/kcompat.h	2584;"	d
HAVE_NETDEV_STATS_IN_NETDEV	src/kcompat.h	2209;"	d
HAVE_NETDEV_STORAGE_ADDRESS	src/kcompat.h	2734;"	d
HAVE_NETDEV_VLAN_FEATURES	src/kcompat.h	2466;"	d
HAVE_NETIF_MSG	src/kcompat.h	918;"	d
HAVE_NET_DEVICE_OPS	src/kcompat.h	2642;"	d
HAVE_PCIE_TYPE	src/kcompat.h	2818;"	d
HAVE_PCI_DEV_FLAGS_ASSIGNED	src/kcompat.h	3560;"	d
HAVE_PCI_DEV_FLAGS_ASSIGNED	src/kcompat.h	3565;"	d
HAVE_PCI_ERS	src/kcompat.h	1846;"	d
HAVE_PCI_ERS	src/kcompat.h	1848;"	d
HAVE_PCI_ERS	src/kcompat.h	1849;"	d
HAVE_PFC_MODE_ENABLE	src/kcompat.h	2645;"	d
HAVE_PM_QOS_REQUEST_ACTIVE	src/kcompat.h	3217;"	d
HAVE_PM_QOS_REQUEST_LIST	src/kcompat.h	3146;"	d
HAVE_PTP_1588_CLOCK	src/kcompat.h	3657;"	d
HAVE_RHEL6_ETHTOOL_OPS_EXT_STRUCT	src/kcompat.h	2897;"	d
HAVE_SCTP	src/kcompat.h	1107;"	d
HAVE_SETUP_TC	src/kcompat.h	3381;"	d
HAVE_SET_RX_MODE	src/kcompat.h	3109;"	d
HAVE_SKB_L4_RXHASH	src/kcompat.h	3569;"	d
HAVE_SRIOV_CONFIGURE	src/kcompat.h	3946;"	d
HAVE_SYSTEM_SLEEP_PM_OPS	src/kcompat.h	3055;"	d
HAVE_SYSTEM_SLEEP_PM_OPS	src/kcompat.h	3107;"	d
HAVE_TRANS_START_IN_QUEUE	src/kcompat.h	2740;"	d
HAVE_TX_MQ	src/kcompat.h	2583;"	d
HAVE_VF_SPOOFCHK_CONFIGURE	src/kcompat.h	3566;"	d
HAVE_VLAN_RX_REGISTER	src/kcompat.h	3301;"	d
HAVE_VXLAN_CHECKS	src/kcompat.h	4039;"	d
HAVE_VXLAN_RX_OFFLOAD	src/kcompat.h	4030;"	d
HFILES	src/Makefile	/^HFILES = e1000.h hw.h regs.h defines.h \\$/;"	m
HLIST_HEAD	src/kcompat.h	1278;"	d
HLIST_HEAD_INIT	src/kcompat.h	1277;"	d
HV_COLC_LOWER	src/ich8lan.h	152;"	d
HV_COLC_UPPER	src/ich8lan.h	151;"	d
HV_DC_LOWER	src/ich8lan.h	154;"	d
HV_DC_UPPER	src/ich8lan.h	153;"	d
HV_ECOL_LOWER	src/ich8lan.h	146;"	d
HV_ECOL_UPPER	src/ich8lan.h	145;"	d
HV_INTC_FC_PAGE_START	src/phy.h	124;"	d
HV_KMRN_FIFO_CTRLSTA	src/ich8lan.h	204;"	d
HV_KMRN_FIFO_CTRLSTA_PREAMBLE_MASK	src/ich8lan.h	205;"	d
HV_KMRN_FIFO_CTRLSTA_PREAMBLE_SHIFT	src/ich8lan.h	206;"	d
HV_KMRN_MDIO_SLOW	src/ich8lan.h	201;"	d
HV_KMRN_MODE_CTRL	src/ich8lan.h	200;"	d
HV_LATECOL_LOWER	src/ich8lan.h	150;"	d
HV_LATECOL_UPPER	src/ich8lan.h	149;"	d
HV_LED_CONFIG	src/ich8lan.h	137;"	d
HV_MCC_LOWER	src/ich8lan.h	148;"	d
HV_MCC_UPPER	src/ich8lan.h	147;"	d
HV_MUX_DATA_CTRL	src/ich8lan.h	138;"	d
HV_MUX_DATA_CTRL_FORCE_SPEED	src/ich8lan.h	140;"	d
HV_MUX_DATA_CTRL_GEN_TO_MAC	src/ich8lan.h	139;"	d
HV_M_STATUS	src/phy.h	164;"	d
HV_M_STATUS_AUTONEG_COMPLETE	src/phy.h	165;"	d
HV_M_STATUS_LINK_UP	src/phy.h	169;"	d
HV_M_STATUS_SPEED_100	src/phy.h	168;"	d
HV_M_STATUS_SPEED_1000	src/phy.h	167;"	d
HV_M_STATUS_SPEED_MASK	src/phy.h	166;"	d
HV_OEM_BITS	src/ich8lan.h	194;"	d
HV_OEM_BITS_GBE_DIS	src/ich8lan.h	196;"	d
HV_OEM_BITS_LPLU	src/ich8lan.h	195;"	d
HV_OEM_BITS_RESTART_AN	src/ich8lan.h	197;"	d
HV_PM_CTRL	src/ich8lan.h	209;"	d
HV_PM_CTRL_K1_ENABLE	src/ich8lan.h	211;"	d
HV_PM_CTRL_PLL_STOP_IN_K1_GIGA	src/ich8lan.h	210;"	d
HV_SCC_LOWER	src/ich8lan.h	144;"	d
HV_SCC_UPPER	src/ich8lan.h	143;"	d
HV_SMB_ADDR	src/ich8lan.h	178;"	d
HV_SMB_ADDR_FREQ_HIGH_SHIFT	src/ich8lan.h	184;"	d
HV_SMB_ADDR_FREQ_LOW_SHIFT	src/ich8lan.h	183;"	d
HV_SMB_ADDR_FREQ_MASK	src/ich8lan.h	182;"	d
HV_SMB_ADDR_MASK	src/ich8lan.h	179;"	d
HV_SMB_ADDR_PEC_EN	src/ich8lan.h	180;"	d
HV_SMB_ADDR_VALID	src/ich8lan.h	181;"	d
HV_STATS_PAGE	src/ich8lan.h	141;"	d
HV_TNCRS_LOWER	src/ich8lan.h	156;"	d
HV_TNCRS_UPPER	src/ich8lan.h	155;"	d
I217_CGFREG	src/ich8lan.h	264;"	d
I217_CGFREG_ENABLE_MTA_RESET	src/ich8lan.h	265;"	d
I217_EEE_ADVERTISEMENT	src/ich8lan.h	252;"	d
I217_EEE_CAPABILITY	src/ich8lan.h	251;"	d
I217_EEE_LP_ABILITY	src/ich8lan.h	253;"	d
I217_EEE_PCS_STATUS	src/ich8lan.h	250;"	d
I217_E_PHY_ID	src/defines.h	699;"	d
I217_INBAND_CTRL	src/ich8lan.h	216;"	d
I217_INBAND_CTRL_LINK_STAT_TX_TIMEOUT_MASK	src/ich8lan.h	217;"	d
I217_INBAND_CTRL_LINK_STAT_TX_TIMEOUT_SHIFT	src/ich8lan.h	218;"	d
I217_LPI_GPIO_CTRL	src/ich8lan.h	221;"	d
I217_LPI_GPIO_CTRL_AUTO_EN_LPI	src/ich8lan.h	222;"	d
I217_MEMPWR	src/ich8lan.h	266;"	d
I217_MEMPWR_DISABLE_SMB_RELEASE	src/ich8lan.h	267;"	d
I217_PROXY_CTRL	src/ich8lan.h	260;"	d
I217_PROXY_CTRL_AUTO_DISABLE	src/ich8lan.h	261;"	d
I217_RX_CONFIG	src/ich8lan.h	254;"	d
I217_SxCTRL	src/ich8lan.h	262;"	d
I217_SxCTRL_ENABLE_LPI_RESET	src/ich8lan.h	263;"	d
I218_ULP_CONFIG1	src/ich8lan.h	168;"	d
I218_ULP_CONFIG1_DISABLE_SMB_PERST	src/ich8lan.h	175;"	d
I218_ULP_CONFIG1_INBAND_EXIT	src/ich8lan.h	172;"	d
I218_ULP_CONFIG1_IND	src/ich8lan.h	170;"	d
I218_ULP_CONFIG1_RESET_TO_SMBUS	src/ich8lan.h	174;"	d
I218_ULP_CONFIG1_START	src/ich8lan.h	169;"	d
I218_ULP_CONFIG1_STICKY_ULP	src/ich8lan.h	171;"	d
I218_ULP_CONFIG1_WOL_HOST	src/ich8lan.h	173;"	d
I82577_ADDR_REG	src/phy.h	126;"	d
I82577_CFG_ASSERT_CRS_ON_TX	src/phy.h	128;"	d
I82577_CFG_ENABLE_DOWNSHIFT	src/phy.h	129;"	d
I82577_CFG_REG	src/phy.h	127;"	d
I82577_CTRL_REG	src/phy.h	130;"	d
I82577_DSTATUS_CABLE_LENGTH	src/phy.h	150;"	d
I82577_DSTATUS_CABLE_LENGTH_SHIFT	src/phy.h	151;"	d
I82577_E_PHY_ID	src/defines.h	696;"	d
I82577_MSE_THRESHOLD	src/ich8lan.h	239;"	d
I82577_PHY_CTRL2_AUTO_MDI_MDIX	src/phy.h	146;"	d
I82577_PHY_CTRL2_MANUAL_MDIX	src/phy.h	145;"	d
I82577_PHY_CTRL2_MDIX_CFG_MASK	src/phy.h	147;"	d
I82577_PHY_CTRL_2	src/phy.h	133;"	d
I82577_PHY_DIAG_STATUS	src/phy.h	136;"	d
I82577_PHY_LBK_CTRL	src/phy.h	134;"	d
I82577_PHY_STATUS2_MDIX	src/phy.h	140;"	d
I82577_PHY_STATUS2_REV_POLARITY	src/phy.h	139;"	d
I82577_PHY_STATUS2_SPEED_1000MBPS	src/phy.h	142;"	d
I82577_PHY_STATUS2_SPEED_MASK	src/phy.h	141;"	d
I82577_PHY_STATUS_2	src/phy.h	135;"	d
I82578_ADDR_REG	src/phy.h	125;"	d
I82578_EPSCR_DOWNSHIFT_COUNTER_MASK	src/defines.h	753;"	d
I82578_EPSCR_DOWNSHIFT_ENABLE	src/defines.h	752;"	d
I82578_E_PHY_ID	src/defines.h	697;"	d
I82579_DFT_CTRL	src/ich8lan.h	231;"	d
I82579_DFT_CTRL_GATE_PHY_RESET	src/ich8lan.h	232;"	d
I82579_EEE_1000_SUPPORTED	src/ich8lan.h	248;"	d
I82579_EEE_100_SUPPORTED	src/ich8lan.h	247;"	d
I82579_EEE_ADVERTISEMENT	src/ich8lan.h	245;"	d
I82579_EEE_CAPABILITY	src/ich8lan.h	244;"	d
I82579_EEE_LP_ABILITY	src/ich8lan.h	246;"	d
I82579_EEE_PCS_STATUS	src/ich8lan.h	243;"	d
I82579_EMI_ADDR	src/ich8lan.h	235;"	d
I82579_EMI_DATA	src/ich8lan.h	236;"	d
I82579_E_PHY_ID	src/defines.h	698;"	d
I82579_LPI_100_PLL_SHUT	src/ich8lan.h	249;"	d
I82579_LPI_CTRL	src/ich8lan.h	225;"	d
I82579_LPI_CTRL_1000_ENABLE	src/ich8lan.h	227;"	d
I82579_LPI_CTRL_100_ENABLE	src/ich8lan.h	226;"	d
I82579_LPI_CTRL_ENABLE_MASK	src/ich8lan.h	228;"	d
I82579_LPI_PLL_SHUT	src/ich8lan.h	242;"	d
I82579_LPI_UPDATE_TIMER	src/ich8lan.h	237;"	d
I82579_MSE_LINK_DOWN	src/ich8lan.h	240;"	d
I82579_MSE_THRESHOLD	src/ich8lan.h	238;"	d
I82579_RX_CONFIG	src/ich8lan.h	241;"	d
ICH_CYCLE_ERASE	src/ich8lan.h	41;"	d
ICH_CYCLE_READ	src/ich8lan.h	39;"	d
ICH_CYCLE_WRITE	src/ich8lan.h	40;"	d
ICH_FLASH_CYCLE_REPEAT_COUNT	src/ich8lan.h	37;"	d
ICH_FLASH_ERASE_COMMAND_TIMEOUT	src/ich8lan.h	35;"	d
ICH_FLASH_FADDR	src/ich8lan.h	29;"	d
ICH_FLASH_FDATA0	src/ich8lan.h	30;"	d
ICH_FLASH_GFPREG	src/ich8lan.h	26;"	d
ICH_FLASH_HSFCTL	src/ich8lan.h	28;"	d
ICH_FLASH_HSFSTS	src/ich8lan.h	27;"	d
ICH_FLASH_LINEAR_ADDR_MASK	src/ich8lan.h	36;"	d
ICH_FLASH_READ_COMMAND_TIMEOUT	src/ich8lan.h	33;"	d
ICH_FLASH_SEG_SIZE_256	src/ich8lan.h	46;"	d
ICH_FLASH_SEG_SIZE_4K	src/ich8lan.h	47;"	d
ICH_FLASH_SEG_SIZE_64K	src/ich8lan.h	49;"	d
ICH_FLASH_SEG_SIZE_8K	src/ich8lan.h	48;"	d
ICH_FLASH_WRITE_COMMAND_TIMEOUT	src/ich8lan.h	34;"	d
ID_LED_DEF1_DEF2	src/defines.h	654;"	d
ID_LED_DEF1_OFF2	src/defines.h	656;"	d
ID_LED_DEF1_ON2	src/defines.h	655;"	d
ID_LED_DEFAULT	src/defines.h	650;"	d
ID_LED_DEFAULT_82573	src/82571.h	27;"	d
ID_LED_DEFAULT_ICH8LAN	src/ich8lan.h	71;"	d
ID_LED_OFF1_DEF2	src/defines.h	660;"	d
ID_LED_OFF1_OFF2	src/defines.h	662;"	d
ID_LED_OFF1_ON2	src/defines.h	661;"	d
ID_LED_ON1_DEF2	src/defines.h	657;"	d
ID_LED_ON1_OFF2	src/defines.h	659;"	d
ID_LED_ON1_ON2	src/defines.h	658;"	d
ID_LED_RESERVED_0000	src/defines.h	648;"	d
ID_LED_RESERVED_F746	src/82571.h	26;"	d
ID_LED_RESERVED_FFFF	src/defines.h	649;"	d
IEEE_8021QAZ_MAX_TCS	src/kcompat.h	3320;"	d
IFE_C_E_PHY_ID	src/defines.h	693;"	d
IFE_E_PHY_ID	src/defines.h	691;"	d
IFE_PESC_POLARITY_REVERSED	src/phy.h	221;"	d
IFE_PHY_EXTENDED_STATUS_CONTROL	src/phy.h	215;"	d
IFE_PHY_MDIX_CONTROL	src/phy.h	218;"	d
IFE_PHY_SPECIAL_CONTROL	src/phy.h	216;"	d
IFE_PHY_SPECIAL_CONTROL_LED	src/phy.h	217;"	d
IFE_PLUS_E_PHY_ID	src/defines.h	692;"	d
IFE_PMC_AUTO_MDIX	src/phy.h	235;"	d
IFE_PMC_FORCE_MDIX	src/phy.h	234;"	d
IFE_PMC_MDIX_STATUS	src/phy.h	233;"	d
IFE_PSCL_PROBE_LEDS_OFF	src/phy.h	229;"	d
IFE_PSCL_PROBE_LEDS_ON	src/phy.h	230;"	d
IFE_PSCL_PROBE_MODE	src/phy.h	228;"	d
IFE_PSC_AUTO_POLARITY_DISABLE	src/phy.h	224;"	d
IFE_PSC_FORCE_POLARITY	src/phy.h	225;"	d
IFS_MAX	src/defines.h	383;"	d
IFS_MIN	src/defines.h	384;"	d
IFS_RATIO	src/defines.h	385;"	d
IFS_STEP	src/defines.h	386;"	d
IGP01E1000_I_PHY_ID	src/defines.h	687;"	d
IGP01E1000_PHY_LINK_HEALTH	src/phy.h	94;"	d
IGP01E1000_PHY_PAGE_SELECT	src/phy.h	96;"	d
IGP01E1000_PHY_PCS_INIT_REG	src/phy.h	171;"	d
IGP01E1000_PHY_POLARITY_MASK	src/phy.h	172;"	d
IGP01E1000_PHY_PORT_CONFIG	src/phy.h	91;"	d
IGP01E1000_PHY_PORT_CTRL	src/phy.h	93;"	d
IGP01E1000_PHY_PORT_STATUS	src/phy.h	92;"	d
IGP01E1000_PLHR_SS_DOWNGRADE	src/phy.h	183;"	d
IGP01E1000_PSCFR_SMART_SPEED	src/phy.h	177;"	d
IGP01E1000_PSCR_AUTO_MDIX	src/phy.h	174;"	d
IGP01E1000_PSCR_FORCE_MDI_MDIX	src/phy.h	175;"	d
IGP01E1000_PSSR_MDIX	src/phy.h	186;"	d
IGP01E1000_PSSR_POLARITY_REVERSED	src/phy.h	185;"	d
IGP01E1000_PSSR_SPEED_1000MBPS	src/phy.h	188;"	d
IGP01E1000_PSSR_SPEED_MASK	src/phy.h	187;"	d
IGP02E1000_AGC_LENGTH_MASK	src/phy.h	197;"	d
IGP02E1000_AGC_LENGTH_SHIFT	src/phy.h	196;"	d
IGP02E1000_AGC_RANGE	src/phy.h	198;"	d
IGP02E1000_CABLE_LENGTH_TABLE_SIZE	src/phy.c	52;"	d	file:
IGP02E1000_PHY_AGC_A	src/phy.h	191;"	d
IGP02E1000_PHY_AGC_B	src/phy.h	192;"	d
IGP02E1000_PHY_AGC_C	src/phy.h	193;"	d
IGP02E1000_PHY_AGC_D	src/phy.h	194;"	d
IGP02E1000_PHY_CHANNEL_NUM	src/phy.h	190;"	d
IGP02E1000_PHY_POWER_MGMT	src/phy.h	95;"	d
IGP02E1000_PM_D0_LPLU	src/phy.h	180;"	d
IGP02E1000_PM_D3_LPLU	src/phy.h	181;"	d
IGP02E1000_PM_SPD	src/phy.h	179;"	d
IGP03E1000_E_PHY_ID	src/defines.h	690;"	d
IGP3_KMRN_DIAG	src/ich8lan.h	110;"	d
IGP3_KMRN_DIAG_PCS_LOCK_LOSS	src/ich8lan.h	113;"	d
IGP3_VR_CTRL	src/ich8lan.h	111;"	d
IGP3_VR_CTRL_DEV_POWERDOWN_MODE_MASK	src/ich8lan.h	114;"	d
IGP3_VR_CTRL_MODE_SHUTDOWN	src/ich8lan.h	115;"	d
IGP_ACTIVITY_LED_ENABLE	src/defines.h	665;"	d
IGP_ACTIVITY_LED_MASK	src/defines.h	664;"	d
IGP_LED3_MODE	src/defines.h	666;"	d
IGP_PAGE_SHIFT	src/phy.h	98;"	d
IMS_ENABLE_MASK	src/defines.h	426;"	d
INCPERIOD_25MHz	src/e1000.h	436;"	d
INCPERIOD_96MHz	src/e1000.h	432;"	d
INCPERIOD_SHIFT_96MHz	src/e1000.h	431;"	d
INCVALUE_25MHz	src/e1000.h	434;"	d
INCVALUE_96MHz	src/e1000.h	429;"	d
INCVALUE_SHIFT_25MHz	src/e1000.h	435;"	d
INCVALUE_SHIFT_96MHz	src/e1000.h	430;"	d
INIT_HLIST_HEAD	src/kcompat.h	1279;"	d
INIT_HLIST_NODE	src/kcompat.h	/^static inline void INIT_HLIST_NODE(struct hlist_node *h)$/;"	f
INIT_TQUEUE	src/kcompat.h	777;"	d
INIT_WORK	src/kcompat.h	1302;"	d
INIT_WORK	src/kcompat.h	1303;"	d
INIT_WORK	src/kcompat.h	2045;"	d
INIT_WORK	src/kcompat.h	2046;"	d
INSTDIR	src/Makefile	/^INSTDIR := \/lib\/modules\/$(KVER)\/kernel\/drivers\/net\/$(DRIVER_NAME)$/;"	m
INSTDIR	src/Makefile	/^INSTDIR := \/lib\/modules\/$(KVER)\/kernel\/drivers\/net\/ethernet\/intel\/$(DRIVER_NAME)$/;"	m
IPPROTO_SCTP	src/kcompat.h	210;"	d
IPV4_FLOW	src/kcompat.h	2827;"	d
IPV6_FLOW	src/kcompat.h	2830;"	d
IRQF_PROBE_SHARED	src/kcompat.h	1884;"	d
IRQF_PROBE_SHARED	src/kcompat.h	1886;"	d
IRQF_SHARED	src/kcompat.h	1891;"	d
IRQ_HANDLED	src/kcompat.h	1878;"	d
IRQ_NONE	src/kcompat.h	1879;"	d
IS_ALIGNED	src/kcompat.h	296;"	d
IS_ENABLED	src/kcompat.h	300;"	d
IS_ENABLED	src/kcompat.h	314;"	d
KC_USEC_PER_SEC	src/kcompat.h	1673;"	d
KERNEL_VERSION	src/kcompat.h	29;"	d
KERN_CONT	src/kcompat.h	2357;"	d
KMRNCTRLSTA_OPMODE	src/ethtool.c	1676;"	d	file:
KMRNCTRLSTA_OPMODE_1GB_FD_GMII	src/ethtool.c	1677;"	d	file:
KOBJ	src/Makefile	/^  KOBJ :=  $(KSRC)$/;"	m
KOBJ	src/Makefile	/^  KOBJ :=  \/lib\/modules\/$(BUILD_KERNEL)\/build$/;"	m
KOBJ	src/Makefile	/^  KOBJ=\/lib\/modules\/$(KVER)\/build$/;"	m
KSP	src/Makefile	/^KSP :=  \/lib\/modules\/$(BUILD_KERNEL)\/build \\$/;"	m
KSP	src/Makefile	/^KSP := $(foreach dir, $(KSP), $(test_dir))$/;"	m
KSRC	src/Makefile	/^  KSRC := $(firstword $(KSP))$/;"	m
KVER	src/Makefile	/^KVER := $(shell $(CC) $(EXTRA_CFLAGS) -E -dM $(VERSION_FILE) | grep UTS_RELEASE | \\$/;"	m
KVER_CODE	src/Makefile	/^KVER_CODE := $(shell $(CC) $(EXTRA_CFLAGS) -E -dM $(VSP) 2>\/dev\/null |\\$/;"	m
LINK_TIMEOUT	src/e1000.h	96;"	d
LPA_1000LOCALRXOK	src/kcompat.h	1727;"	d
LPA_1000REMRXOK	src/kcompat.h	1728;"	d
LPA_PAUSE_ASYM	src/kcompat.h	1722;"	d
LPA_PAUSE_CAP	src/kcompat.h	1721;"	d
M88E1000_CABLE_LENGTH_TABLE_SIZE	src/phy.c	37;"	d	file:
M88E1000_EPSCR_MASTER_DOWNSHIFT_1X	src/defines.h	740;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_MASK	src/defines.h	739;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_1X	src/defines.h	745;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_MASK	src/defines.h	744;"	d
M88E1000_EPSCR_TX_CLK_25	src/defines.h	746;"	d
M88E1000_EXT_PHY_SPEC_CTRL	src/defines.h	704;"	d
M88E1000_E_PHY_ID	src/defines.h	684;"	d
M88E1000_I_PHY_ID	src/defines.h	685;"	d
M88E1000_PHY_GEN_CONTROL	src/defines.h	707;"	d
M88E1000_PHY_PAGE_SELECT	src/defines.h	706;"	d
M88E1000_PHY_SPEC_CTRL	src/defines.h	702;"	d
M88E1000_PHY_SPEC_STATUS	src/defines.h	703;"	d
M88E1000_PSCR_ASSERT_CRS_ON_TX	src/defines.h	718;"	d
M88E1000_PSCR_AUTO_X_1000T	src/defines.h	715;"	d
M88E1000_PSCR_AUTO_X_MODE	src/defines.h	717;"	d
M88E1000_PSCR_MDIX_MANUAL_MODE	src/defines.h	713;"	d
M88E1000_PSCR_MDI_MANUAL_MODE	src/defines.h	712;"	d
M88E1000_PSCR_POLARITY_REVERSAL	src/defines.h	710;"	d
M88E1000_PSSR_1000MBS	src/defines.h	732;"	d
M88E1000_PSSR_CABLE_LENGTH	src/defines.h	730;"	d
M88E1000_PSSR_CABLE_LENGTH_SHIFT	src/defines.h	734;"	d
M88E1000_PSSR_DOWNSHIFT	src/defines.h	722;"	d
M88E1000_PSSR_MDIX	src/defines.h	723;"	d
M88E1000_PSSR_REV_POLARITY	src/defines.h	721;"	d
M88E1000_PSSR_SPEED	src/defines.h	731;"	d
M88E1011_I_PHY_ID	src/defines.h	686;"	d
M88E1111_I_PHY_ID	src/defines.h	688;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_5X	src/defines.h	750;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_MASK	src/defines.h	749;"	d
MANDIR	src/Makefile	/^  MANDIR := $(firstword $(MANDIR))$/;"	m
MANDIR	src/Makefile	/^  MANDIR := $(foreach dir, $(MANDIR), $(test_dir))$/;"	m
MANDIR	src/Makefile	/^  MANDIR := \/usr\/man$/;"	m
MANDIR	src/Makefile	/^  MANDIR := \/usr\/share\/man \/usr\/man$/;"	m
MANFILE	src/Makefile	/^MANFILE = $(TARGET:.ko=.$(MANSECTION))$/;"	m
MANFILE	src/Makefile	/^MANFILE = $(TARGET:.o=.$(MANSECTION))$/;"	m
MANPATH	src/Makefile	/^  MANPATH := $(shell (manpath 2>\/dev\/null || echo $MANPATH) | sed 's\/:\/ \/g')$/;"	m
MANSECTION	src/Makefile	/^MANSECTION = 7$/;"	m
MASTER_DISABLE_TIMEOUT	src/defines.h	504;"	d
MAX_INTMODE	src/param.c	139;"	d	file:
MAX_ITR	src/param.c	121;"	d	file:
MAX_JUMBO_FRAME_SIZE	src/defines.h	345;"	d
MAX_MTA_REG	src/hw.h	563;"	d
MAX_NUMNODES	src/kcompat.h	1350;"	d
MAX_NUMNODES	src/kcompat.h	1352;"	d
MAX_PHY_MULTI_PAGE_REG	src/defines.h	678;"	d
MAX_PHY_REG_ADDRESS	src/defines.h	677;"	d
MAX_PS_BUFFERS	src/hw.h	237;"	d
MAX_RXABSDELAY	src/param.c	112;"	d	file:
MAX_RXDELAY	src/param.c	104;"	d	file:
MAX_TXABSDELAY	src/param.c	95;"	d	file:
MAX_TXDELAY	src/param.c	86;"	d	file:
MDIO_EEE_1000KX	src/kcompat.h	3693;"	d
MDIO_EEE_1000T	src/kcompat.h	3687;"	d
MDIO_EEE_100TX	src/kcompat.h	3684;"	d
MDIO_EEE_10GKR	src/kcompat.h	3699;"	d
MDIO_EEE_10GKX4	src/kcompat.h	3696;"	d
MDIO_EEE_10GT	src/kcompat.h	3690;"	d
MDIO_OWNERSHIP_TIMEOUT	src/defines.h	508;"	d
MDIO_PHY_ID_DEVAD	src/kcompat.h	2706;"	d
MDIO_PHY_ID_PRTAD	src/kcompat.h	2703;"	d
MII_ADVERTISE	src/kcompat.h	795;"	d
MII_BMCR	src/kcompat.h	791;"	d
MII_BMSR	src/kcompat.h	792;"	d
MII_CTRL1000	src/kcompat.h	1715;"	d
MII_ESTATUS	src/kcompat.h	1763;"	d
MII_EXPANSION	src/kcompat.h	797;"	d
MII_LPA	src/kcompat.h	796;"	d
MII_PHYSID1	src/kcompat.h	793;"	d
MII_PHYSID2	src/kcompat.h	794;"	d
MII_RESV1	src/kcompat.h	223;"	d
MII_STAT1000	src/kcompat.h	1716;"	d
MINIMUM_DHCP_PACKET_SIZE	src/netdev.c	6093;"	d	file:
MIN_INTMODE	src/param.c	140;"	d	file:
MIN_ITR	src/param.c	122;"	d	file:
MIN_NUM_XMITS	src/defines.h	387;"	d
MIN_RXABSDELAY	src/param.c	113;"	d	file:
MIN_RXDELAY	src/param.c	105;"	d	file:
MIN_TXABSDELAY	src/param.c	96;"	d	file:
MIN_TXDELAY	src/param.c	87;"	d	file:
MODULE_INFO	src/kcompat.h	1323;"	d
MODULE_LICENSE	src/kcompat.h	859;"	d
MODULE_VERSION	src/kcompat.h	1430;"	d
MSEC_PER_SEC	src/kcompat.h	1521;"	d
NAPI	src/kcompat.h	1053;"	d
NAPI	src/kcompat.h	54;"	d
NAPI	src/kcompat.h	56;"	d
NAPI_POLL_WEIGHT	src/kcompat.h	3988;"	d
NETDEV_CLASS_DEV	src/kcompat.h	2105;"	d
NETDEV_STATS	src/ethtool.c	/^enum { NETDEV_STATS, E1000_STATS };$/;"	e	enum:__anon38	file:
NETDEV_TX_BUSY	src/kcompat.h	1616;"	d
NETDEV_TX_LOCKED	src/kcompat.h	1619;"	d
NETDEV_TX_OK	src/kcompat.h	1613;"	d
NETIF_F_FCOE_MTU	src/kcompat.h	2754;"	d
NETIF_F_LLTX	src/kcompat.h	1663;"	d
NETIF_F_LRO	src/kcompat.h	202;"	d
NETIF_F_MULTI_QUEUE	src/kcompat.h	2560;"	d
NETIF_F_NTUPLE	src/kcompat.h	206;"	d
NETIF_F_RXALL	src/kcompat.h	3609;"	d
NETIF_F_RXCSUM	src/kcompat.h	3349;"	d
NETIF_F_RXFCS	src/kcompat.h	3606;"	d
NETIF_F_SCTP_CSUM	src/kcompat.h	198;"	d
NETIF_MSG_DRV	src/kcompat.h	/^	NETIF_MSG_DRV = 0x0001,$/;"	e	enum:__anon1
NETIF_MSG_HW	src/kcompat.h	/^	NETIF_MSG_HW = 0x2000,$/;"	e	enum:__anon1
NETIF_MSG_HW	src/kcompat.h	1011;"	d
NETIF_MSG_IFDOWN	src/kcompat.h	/^	NETIF_MSG_IFDOWN = 0x0010,$/;"	e	enum:__anon1
NETIF_MSG_IFUP	src/kcompat.h	/^	NETIF_MSG_IFUP = 0x0020,$/;"	e	enum:__anon1
NETIF_MSG_INTR	src/kcompat.h	/^	NETIF_MSG_INTR = 0x0200,$/;"	e	enum:__anon1
NETIF_MSG_LINK	src/kcompat.h	/^	NETIF_MSG_LINK = 0x0004,$/;"	e	enum:__anon1
NETIF_MSG_PKTDATA	src/kcompat.h	/^	NETIF_MSG_PKTDATA = 0x1000,$/;"	e	enum:__anon1
NETIF_MSG_PROBE	src/kcompat.h	/^	NETIF_MSG_PROBE = 0x0002,$/;"	e	enum:__anon1
NETIF_MSG_RX_ERR	src/kcompat.h	/^	NETIF_MSG_RX_ERR = 0x0040,$/;"	e	enum:__anon1
NETIF_MSG_RX_STATUS	src/kcompat.h	/^	NETIF_MSG_RX_STATUS = 0x0800,$/;"	e	enum:__anon1
NETIF_MSG_TIMER	src/kcompat.h	/^	NETIF_MSG_TIMER = 0x0008,$/;"	e	enum:__anon1
NETIF_MSG_TX_DONE	src/kcompat.h	/^	NETIF_MSG_TX_DONE = 0x0400,$/;"	e	enum:__anon1
NETIF_MSG_TX_ERR	src/kcompat.h	/^	NETIF_MSG_TX_ERR = 0x0080,$/;"	e	enum:__anon1
NETIF_MSG_TX_QUEUED	src/kcompat.h	/^	NETIF_MSG_TX_QUEUED = 0x0100,$/;"	e	enum:__anon1
NETIF_MSG_WOL	src/kcompat.h	/^	NETIF_MSG_WOL = 0x4000,$/;"	e	enum:__anon1
NETIF_MSG_WOL	src/kcompat.h	1012;"	d
NET_IP_ALIGN	src/kcompat.h	1670;"	d
NET_IP_ALIGN	src/kcompat.h	3159;"	d
NET_IP_ALIGN	src/kcompat.h	3161;"	d
NET_SKB_PAD	src/kcompat.h	1869;"	d
NET_SKB_PAD	src/kcompat.h	3165;"	d
NET_SKB_PAD	src/kcompat.h	3169;"	d
NET_SKB_PAD	src/kcompat.h	3171;"	d
NEWER_PM	src/kcompat.h	2496;"	d
NSEC_PER_SEC	src/kcompat.h	1409;"	d
NUMTCS_RETURNS_U8	src/kcompat.h	3613;"	d
NVM_A8_OPCODE_SPI	src/defines.h	640;"	d
NVM_ALT_MAC_ADDR_PTR	src/defines.h	607;"	d
NVM_CFG	src/defines.h	606;"	d
NVM_CHECKSUM_REG	src/defines.h	608;"	d
NVM_COMPAT	src/defines.h	596;"	d
NVM_COMPAT_LOM	src/defines.h	622;"	d
NVM_COMPAT_VALID_CSUM	src/defines.h	599;"	d
NVM_FUTURE_INIT_WORD1	src/defines.h	598;"	d
NVM_FUTURE_INIT_WORD1_VALID_CSUM	src/defines.h	600;"	d
NVM_ID_LED_SETTINGS	src/defines.h	597;"	d
NVM_INIT_3GIO_3	src/defines.h	604;"	d
NVM_INIT_CONTROL2_REG	src/defines.h	602;"	d
NVM_INIT_CONTROL3_PORT_A	src/defines.h	605;"	d
NVM_INIT_CONTROL3_PORT_B	src/defines.h	603;"	d
NVM_MAX_RETRY_SPI	src/defines.h	637;"	d
NVM_PBA_OFFSET_0	src/defines.h	631;"	d
NVM_PBA_OFFSET_1	src/defines.h	632;"	d
NVM_PBA_PTR_GUARD	src/defines.h	633;"	d
NVM_RDSR_OPCODE_SPI	src/defines.h	642;"	d
NVM_READ_OPCODE_SPI	src/defines.h	638;"	d
NVM_STATUS_RDY_SPI	src/defines.h	645;"	d
NVM_SUM	src/defines.h	628;"	d
NVM_WORD0F_ASM_DIR	src/defines.h	616;"	d
NVM_WORD0F_PAUSE	src/defines.h	615;"	d
NVM_WORD0F_PAUSE_MASK	src/defines.h	614;"	d
NVM_WORD1A_ASPM_MASK	src/defines.h	619;"	d
NVM_WORD_SIZE_BASE_SHIFT	src/defines.h	634;"	d
NVM_WREN_OPCODE_SPI	src/defines.h	641;"	d
NVM_WRITE_OPCODE_SPI	src/defines.h	639;"	d
OPTION_DISABLED	src/param.c	35;"	d	file:
OPTION_ENABLED	src/param.c	36;"	d	file:
OPTION_UNSET	src/param.c	34;"	d	file:
PAGE_USE_COUNT	src/netdev.c	3398;"	d	file:
PCIE_CONFIG_SPACE_LEN	src/kcompat.h	2002;"	d
PCIE_ICH8_SNOOP_ALL	src/ich8lan.h	101;"	d
PCIE_LINK_STATE_L0S	src/kcompat.h	154;"	d
PCIE_LINK_STATE_L1	src/kcompat.h	157;"	d
PCIE_LINK_STATUS	src/defines.h	670;"	d
PCIE_LINK_STATUS	src/kcompat.h	2004;"	d
PCIE_LINK_WIDTH_MASK	src/defines.h	673;"	d
PCIE_LINK_WIDTH_SHIFT	src/defines.h	674;"	d
PCIE_NO_SNOOP_ALL	src/defines.h	560;"	d
PCI_CAP_ID_EXP	src/kcompat.h	146;"	d
PCI_CONFIG_SPACE_LEN	src/kcompat.h	2003;"	d
PCI_D0	src/kcompat.h	1653;"	d
PCI_D1	src/kcompat.h	1654;"	d
PCI_D2	src/kcompat.h	1655;"	d
PCI_D3cold	src/kcompat.h	1657;"	d
PCI_D3hot	src/kcompat.h	1656;"	d
PCI_DEVICE	src/kcompat.h	236;"	d
PCI_DEVID	src/kcompat.h	4012;"	d
PCI_DRAM_OFFSET	src/kcompat.c	397;"	d	file:
PCI_EXP_DEVCAP	src/kcompat.h	1504;"	d
PCI_EXP_DEVCAP2	src/kcompat.h	2610;"	d
PCI_EXP_DEVCTL	src/kcompat.h	1491;"	d
PCI_EXP_DEVCTL2	src/kcompat.h	2611;"	d
PCI_EXP_DEVCTL_CERE	src/kcompat.h	1494;"	d
PCI_EXP_DEVSTA	src/kcompat.h	1505;"	d
PCI_EXP_FLAGS	src/kcompat.h	1496;"	d
PCI_EXP_FLAGS_SLOT	src/kcompat.h	1503;"	d
PCI_EXP_FLAGS_TYPE	src/kcompat.h	1498;"	d
PCI_EXP_FLAGS_VERS	src/kcompat.h	1497;"	d
PCI_EXP_LNKCAP	src/kcompat.h	1699;"	d
PCI_EXP_LNKCAP2	src/kcompat.h	3681;"	d
PCI_EXP_LNKCAP_ASPMS	src/kcompat.h	2468;"	d
PCI_EXP_LNKCTL	src/kcompat.h	1661;"	d
PCI_EXP_LNKCTL2	src/kcompat.h	2677;"	d
PCI_EXP_LNKCTL_ASPMC	src/kcompat.h	2638;"	d
PCI_EXP_LNKCTL_ASPM_L0S	src/kcompat.h	3898;"	d
PCI_EXP_LNKCTL_ASPM_L1	src/kcompat.h	3901;"	d
PCI_EXP_LNKSTA	src/kcompat.h	1700;"	d
PCI_EXP_LNKSTA2	src/kcompat.h	3874;"	d
PCI_EXP_RTCAP	src/kcompat.h	1705;"	d
PCI_EXP_RTCTL	src/kcompat.h	1704;"	d
PCI_EXP_RTSTA	src/kcompat.h	1706;"	d
PCI_EXP_SLTCAP	src/kcompat.h	1701;"	d
PCI_EXP_SLTCTL	src/kcompat.h	1702;"	d
PCI_EXP_SLTSTA	src/kcompat.h	1703;"	d
PCI_EXP_SLTSTA_PDS	src/kcompat.h	2630;"	d
PCI_EXP_TYPE_DOWNSTREAM	src/kcompat.h	1502;"	d
PCI_EXP_TYPE_ENDPOINT	src/kcompat.h	1499;"	d
PCI_EXP_TYPE_LEG_END	src/kcompat.h	1500;"	d
PCI_EXP_TYPE_RC_EC	src/kcompat.h	3582;"	d
PCI_EXP_TYPE_RC_EC	src/kcompat.h	3583;"	d
PCI_EXP_TYPE_ROOT_PORT	src/kcompat.h	1501;"	d
PCI_HEADER_TYPE_MULTIFUNC	src/defines.h	672;"	d
PCI_HEADER_TYPE_REGISTER	src/defines.h	669;"	d
PCI_LTR_SCALE_MASK	src/kcompat.h	3431;"	d
PCI_LTR_SCALE_SHIFT	src/kcompat.h	3434;"	d
PCI_LTR_VALUE_MASK	src/kcompat.h	3428;"	d
PCI_VDEVICE	src/kcompat.h	2057;"	d
PCI_VENDOR_ID_INTEL	src/kcompat.h	2063;"	d
PHY_AUTO_NEG_LIMIT	src/defines.h	501;"	d
PHY_CFG_TIMEOUT	src/defines.h	506;"	d
PHY_FORCE_LIMIT	src/defines.h	502;"	d
PHY_PAGE_SHIFT	src/ich8lan.h	107;"	d
PHY_REG	src/ich8lan.h	108;"	d
PHY_REG_MASK	src/phy.h	99;"	d
PHY_REVISION_MASK	src/defines.h	676;"	d
PHY_UPPER_SHIFT	src/phy.h	112;"	d
PKT_HASH_TYPE_L2	src/kcompat.h	4052;"	d
PKT_HASH_TYPE_L3	src/kcompat.h	4053;"	d
PKT_HASH_TYPE_L4	src/kcompat.h	4054;"	d
PKT_HASH_TYPE_NONE	src/kcompat.h	4051;"	d
PMSG_SUSPEND	src/kcompat.h	112;"	d
PMSG_SUSPEND	src/kcompat.h	1660;"	d
PM_QOS_CPU_DMA_LATENCY	src/kcompat.h	2388;"	d
PM_QOS_DEFAULT_VALUE	src/kcompat.h	2392;"	d
PM_QOS_DEFAULT_VALUE	src/kcompat.h	2400;"	d
PORT_DA	src/kcompat.h	2845;"	d
PORT_NONE	src/kcompat.h	2848;"	d
PORT_OTHER	src/kcompat.h	2700;"	d
PS_PAGE_BUFFERS	src/hw.h	240;"	d
PTR_ALIGN	src/kcompat.h	2222;"	d
REG_PATTERN_TEST	src/ethtool.c	984;"	d	file:
REG_PATTERN_TEST_ARRAY	src/ethtool.c	979;"	d	file:
REG_SET_AND_CHECK	src/ethtool.c	987;"	d	file:
REQ_RX_DESCRIPTOR_MULTIPLE	src/defines.h	28;"	d
REQ_TX_DESCRIPTOR_MULTIPLE	src/defines.h	27;"	d
RHC	src/Makefile	/^RHC := $(KSRC)\/include\/linux\/rhconfig.h$/;"	m
RHEL_CODE	src/Makefile	/^RHEL_CODE := $(shell $(CC) $(EXTRA_CFLAGS) -E -dM $(VSP) 2>\/dev\/null |\\$/;"	m
RHEL_RELEASE_CODE	src/kcompat.h	689;"	d
RHEL_RELEASE_CODE	src/kcompat.h	691;"	d
RHEL_RELEASE_CODE	src/kcompat.h	693;"	d
RHEL_RELEASE_CODE	src/kcompat.h	698;"	d
RHEL_RELEASE_VERSION	src/kcompat.h	678;"	d
SET_ETHTOOL_OPS	src/kcompat_ethtool.c	103;"	d	file:
SET_ETHTOOL_OPS	src/kcompat_ethtool.c	104;"	d	file:
SET_MODULE_OWNER	src/kcompat.h	2214;"	d
SET_MODULE_OWNER	src/kcompat.h	2215;"	d
SET_NETDEV_DEV	src/kcompat.h	169;"	d
SKBTX_HW_TSTAMP	src/kcompat.h	3290;"	d
SKBTX_IN_PROGRESS	src/kcompat.h	3291;"	d
SKB_SHARED_TX_IS_UNION	src/kcompat.h	3292;"	d
SLE_VERSION	src/kcompat.h	703;"	d
SLE_VERSION_CODE	src/kcompat.h	708;"	d
SLE_VERSION_CODE	src/kcompat.h	711;"	d
SLE_VERSION_CODE	src/kcompat.h	714;"	d
SLE_VERSION_CODE	src/kcompat.h	717;"	d
SLE_VERSION_CODE	src/kcompat.h	724;"	d
SLE_VERSION_CODE	src/kcompat.h	728;"	d
SMP	src/Makefile	/^  SMP := 0$/;"	m
SMP	src/Makefile	/^SMP := $(shell $(CC) $(EXTRA_CFLAGS) -E -dM $(CONFIG_FILE) | \\$/;"	m
SOPASS_MAX	src/kcompat.h	437;"	d
SPEED_10000	src/kcompat_ethtool.c	58;"	d	file:
SPEED_MODE_BIT	src/netdev.c	3364;"	d	file:
SPEED_UNKNOWN	src/kcompat.h	3552;"	d
SUPPORTED_10000baseKR_Full	src/kcompat.h	2719;"	d
SUPPORTED_10000baseKX4_Full	src/kcompat.h	2716;"	d
SUPPORTED_10000baseT_Full	src/kcompat.h	1065;"	d
SUPPORTED_10000baseT_Full	src/kcompat_ethtool.c	54;"	d	file:
SUPPORTED_10000baseT_Full	src/kcompat_ethtool.c	55;"	d	file:
SUPPORTED_1000baseKX_Full	src/kcompat.h	2713;"	d
SUPPORTED_20000baseKR2_Full	src/kcompat.h	3450;"	d
SUPPORTED_20000baseMLD2_Full	src/kcompat.h	3449;"	d
SUPPORTED_2500baseX_Full	src/kcompat.h	2204;"	d
SUPPORTED_40000baseCR4_Full	src/kcompat.h	3720;"	d
SUPPORTED_40000baseKR4_Full	src/kcompat.h	3719;"	d
SUPPORTED_40000baseLR4_Full	src/kcompat.h	3722;"	d
SUPPORTED_40000baseSR4_Full	src/kcompat.h	3721;"	d
SUPPORTED_Asym_Pause	src/kcompat.h	1771;"	d
SUPPORTED_Pause	src/kcompat.h	1770;"	d
SW_FLAG_TIMEOUT	src/ich8lan.h	213;"	d
TARGET	src/Makefile	/^TARGET = $(DRIVER_NAME).ko$/;"	m
TARGET	src/Makefile	/^TARGET = $(DRIVER_NAME).o$/;"	m
TC_BITMASK	src/kcompat.h	3346;"	d
TRUE	src/kcompat.h	116;"	d
TRUE	src/kcompat.h	118;"	d
TX_WAKE_THRESHOLD	src/netdev.c	1344;"	d	file:
USE_CONST_DEV_UC_CHAR	src/kcompat.h	3878;"	d
USE_CONST_DEV_UC_CHAR	src/kcompat.h	3883;"	d
USE_DEFAULT_FDB_DEL_DUMP	src/kcompat.h	3982;"	d
USE_LEGACY_PM_SUPPORT	src/kcompat.h	3443;"	d
USE_REBOOT_NOTIFIER	src/kcompat.h	1712;"	d
VERSION_FILE	src/Makefile	/^  VERSION_FILE := $(firstword $(VSP))$/;"	m
VLAN_ETH_FRAME_LEN	src/kcompat.h	273;"	d
VLAN_ETH_HLEN	src/kcompat.h	269;"	d
VLAN_HLEN	src/kcompat.h	265;"	d
VLAN_N_VID	src/kcompat.h	3238;"	d
VLAN_PRIO_SHIFT	src/kcompat.h	336;"	d
VSP	src/Makefile	/^VSP :=  $(KOBJ)\/include\/generated\/utsrelease.h \\$/;"	m
VSP	src/Makefile	/^VSP := $(foreach file, $(VSP), $(test_file))$/;"	m
WAKE_ARP	src/kcompat.h	1590;"	d
WAKE_BCAST	src/kcompat.h	1589;"	d
WAKE_MAGIC	src/kcompat.h	1591;"	d
WAKE_MAGICSECURE	src/kcompat.h	1592;"	d
WAKE_MCAST	src/kcompat.h	1588;"	d
WAKE_PHY	src/kcompat.h	1586;"	d
WAKE_UCAST	src/kcompat.h	1587;"	d
WARN	src/kcompat.h	2573;"	d
WARN_ON	src/kcompat.h	232;"	d
_Bool	src/kcompat.h	122;"	d
_Bool	src/kcompat.h	125;"	d
_E1000E_80003ES2LAN_H_	src/80003es2lan.h	24;"	d
_E1000E_82571_H_	src/82571.h	24;"	d
_E1000E_DEFINES_H_	src/defines.h	24;"	d
_E1000E_HW_H_	src/hw.h	24;"	d
_E1000E_ICH8LAN_H_	src/ich8lan.h	24;"	d
_E1000E_MAC_H_	src/mac.h	24;"	d
_E1000E_MANAGE_H_	src/manage.h	24;"	d
_E1000E_NVM_H_	src/nvm.h	24;"	d
_E1000E_PHY_H_	src/phy.h	24;"	d
_E1000E_REGS_H_	src/regs.h	24;"	d
_E1000_H_	src/e1000.h	26;"	d
_KCOMPAT_H_	src/kcompat.h	24;"	d
__ALIGN_MASK	src/kcompat.h	1962;"	d
__ARG_PLACEHOLDER_1	src/kcompat.h	301;"	d
__ARG_PLACEHOLDER_1	src/kcompat.h	308;"	d
__E1000_ACCESS_SHARED_RESOURCE	src/e1000.h	/^	__E1000_ACCESS_SHARED_RESOURCE,$/;"	e	enum:e1000_state_t
__E1000_DOWN	src/e1000.h	/^	__E1000_DOWN$/;"	e	enum:e1000_state_t
__E1000_OBFF_DISABLED	src/e1000.h	/^	__E1000_OBFF_DISABLED,$/;"	e	enum:e1000_state_t
__E1000_RESETTING	src/e1000.h	/^	__E1000_RESETTING,$/;"	e	enum:e1000_state_t
__E1000_TESTING	src/e1000.h	/^	__E1000_TESTING,$/;"	e	enum:e1000_state_t
__GFP_COLD	src/kcompat.h	340;"	d
__GFP_COMP	src/kcompat.h	344;"	d
__WARN_printf	src/kcompat.h	2569;"	d
____cacheline_aligned_in_smp	src/e1000.h	/^			  int work_to_do) ____cacheline_aligned_in_smp;$/;"	m	struct:e1000_adapter
____cacheline_aligned_in_smp	src/e1000.h	/^	bool (*clean_rx)(struct e1000_ring *ring) ____cacheline_aligned_in_smp;$/;"	m	struct:e1000_adapter
____cacheline_aligned_in_smp	src/e1000.h	/^	struct e1000_ring *tx_ring ____cacheline_aligned_in_smp;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::tx_ring
____cacheline_aligned_in_smp	src/kcompat.h	897;"	d
____cacheline_aligned_in_smp	src/kcompat.h	899;"	d
____cacheline_internodealigned_in_smp	src/kcompat.h	1841;"	d
____cacheline_internodealigned_in_smp	src/kcompat.h	1843;"	d
___config_enabled	src/kcompat.h	305;"	d
___config_enabled	src/kcompat.h	312;"	d
__aligned	src/kcompat.h	2120;"	d
__always_unused	src/kcompat.h	2882;"	d
__be16	src/kcompat.h	1571;"	d
__be32	src/kcompat.h	1574;"	d
__be64	src/kcompat.h	1577;"	d
__bitwise	src/kcompat.h	1624;"	d
__config_enabled	src/kcompat.h	304;"	d
__config_enabled	src/kcompat.h	311;"	d
__dev_mc_sync	src/kcompat.h	4190;"	d
__dev_mc_unsync	src/kcompat.h	4205;"	d
__dev_uc_sync	src/kcompat.h	4156;"	d
__dev_uc_unsync	src/kcompat.h	4171;"	d
__devexit	src/kcompat.h	3934;"	d
__devexit_p	src/kcompat.h	1004;"	d
__devexit_p	src/kcompat.h	3938;"	d
__devinit	src/kcompat.h	3922;"	d
__devinitconst	src/kcompat.h	3930;"	d
__devinitdata	src/kcompat.h	3926;"	d
__e1000_access_emi_reg_locked	src/ich8lan.c	/^static s32 __e1000_access_emi_reg_locked(struct e1000_hw *hw, u16 address,$/;"	f	file:
__e1000_maybe_stop_tx	src/netdev.c	/^static int __e1000_maybe_stop_tx(struct e1000_ring *tx_ring, int size)$/;"	f	file:
__e1000_read_kmrn_reg	src/phy.c	/^static s32 __e1000_read_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 *data,$/;"	f	file:
__e1000_read_phy_reg_hv	src/phy.c	/^static s32 __e1000_read_phy_reg_hv(struct e1000_hw *hw, u32 offset, u16 *data,$/;"	f	file:
__e1000_resume	src/netdev.c	/^static int __e1000_resume(struct pci_dev *pdev)$/;"	f	file:
__e1000_shutdown	src/netdev.c	/^static int __e1000_shutdown(struct pci_dev *pdev, bool runtime)$/;"	f	file:
__e1000_write_kmrn_reg	src/phy.c	/^static s32 __e1000_write_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 data,$/;"	f	file:
__e1000_write_phy_reg_hv	src/phy.c	/^static s32 __e1000_write_phy_reg_hv(struct e1000_hw *hw, u32 offset, u16 data,$/;"	f	file:
__e1000e_disable_aspm	src/netdev.c	/^static void __e1000e_disable_aspm(struct pci_dev *pdev, u16 state)$/;"	f	file:
__e1000e_read_phy_reg_igp	src/phy.c	/^static s32 __e1000e_read_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 *data,$/;"	f	file:
__e1000e_write_phy_reg_igp	src/phy.c	/^static s32 __e1000e_write_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 data,$/;"	f	file:
__er16flash	src/ich8lan.c	/^static inline u16 __er16flash(struct e1000_hw *hw, unsigned long reg)$/;"	f	file:
__er32	src/e1000.h	/^static inline u32 __er32(struct e1000_hw *hw, unsigned long reg)$/;"	f
__er32flash	src/ich8lan.c	/^static inline u32 __er32flash(struct e1000_hw *hw, unsigned long reg)$/;"	f	file:
__ew16flash	src/ich8lan.c	/^static inline void __ew16flash(struct e1000_hw *hw, unsigned long reg, u16 val)$/;"	f	file:
__ew32	src/e1000.h	/^static inline void __ew32(struct e1000_hw *hw, unsigned long reg, u32 val)$/;"	f
__ew32_prepare	src/e1000.h	/^static inline s32 __ew32_prepare(struct e1000_hw *hw)$/;"	f
__ew32flash	src/ich8lan.c	/^static inline void __ew32flash(struct e1000_hw *hw, unsigned long reg, u32 val)$/;"	f	file:
__force	src/kcompat.h	1484;"	d
__hlist_del	src/kcompat.h	/^static inline void __hlist_del(struct hlist_node *n)$/;"	f
__iomem	src/kcompat.h	1515;"	d
__kc__vlan_hwaccel_put_tag	src/kcompat.h	/^static inline struct sk_buff *__kc__vlan_hwaccel_put_tag(struct sk_buff *skb,$/;"	f
__kc_adapter_clean	src/kcompat.c	/^int __kc_adapter_clean(struct net_device *netdev, int *budget)$/;"	f
__kc_dev_addr_sync_dev	src/kcompat.c	/^int __kc_dev_addr_sync_dev(struct dev_addr_list **list, int *count,$/;"	f
__kc_dev_addr_unsync_dev	src/kcompat.c	/^void __kc_dev_addr_unsync_dev(struct dev_addr_list **list, int *count,$/;"	f
__kc_dev_mc_sync	src/kcompat.h	/^static inline int __kc_dev_mc_sync(struct net_device *dev,$/;"	f
__kc_dev_mc_unsync	src/kcompat.h	/^static inline void __kc_dev_mc_unsync(struct net_device *dev,$/;"	f
__kc_dev_uc_sync	src/kcompat.h	/^static inline int __kc_dev_uc_sync(struct net_device *dev,$/;"	f
__kc_dev_uc_unsync	src/kcompat.h	/^static inline void __kc_dev_uc_unsync(struct net_device *dev,$/;"	f
__kc_dma_set_mask_and_coherent	src/kcompat.c	/^int __kc_dma_set_mask_and_coherent(struct device *dev, u64 mask)$/;"	f
__kc_ether_addr_copy	src/kcompat.h	/^static inline void __kc_ether_addr_copy(u8 *dst, const u8 *src)$/;"	f
__kc_ether_addr_equal	src/kcompat.h	/^static inline bool __kc_ether_addr_equal(const u8 *addr1, const u8 *addr2)$/;"	f
__kc_ethtool_adv_to_mmd_eee_adv_t	src/kcompat.h	/^static inline u16 __kc_ethtool_adv_to_mmd_eee_adv_t(u32 adv)$/;"	f
__kc_hw_addr_sync_dev	src/kcompat.c	/^int __kc_hw_addr_sync_dev(struct netdev_hw_addr_list *list,$/;"	f
__kc_hw_addr_unsync_dev	src/kcompat.c	/^void __kc_hw_addr_unsync_dev(struct netdev_hw_addr_list *list,$/;"	f
__kc_is_link_local_ether_addr	src/kcompat.h	/^static inline bool __kc_is_link_local_ether_addr(const u8 *addr)$/;"	f
__kc_mmd_eee_adv_to_ethtool_adv_t	src/kcompat.h	/^static inline u32 __kc_mmd_eee_adv_to_ethtool_adv_t(u16 eee_adv)$/;"	f
__kc_mmd_eee_cap_to_ethtool_sup_t	src/kcompat.h	/^static inline u32 __kc_mmd_eee_cap_to_ethtool_sup_t(u16 eee_cap)$/;"	f
__kc_netif_set_real_num_rx_queues	src/kcompat.h	/^static inline int __kc_netif_set_real_num_rx_queues(struct net_device *dev,$/;"	f
__kc_pci_enable_msix_range	src/kcompat.c	/^int __kc_pci_enable_msix_range(struct pci_dev *dev, struct msix_entry *entries,$/;"	f
__kc_pci_set_master	src/kcompat.c	/^static void __kc_pci_set_master(struct pci_dev *pdev, bool enable)$/;"	f	file:
__kc_pci_sriov_set_totalvfs	src/kcompat.h	/^static inline int __kc_pci_sriov_set_totalvfs(struct pci_dev __always_unused$/;"	f
__kc_pcie_cap_has_devctl	src/kcompat.c	/^static inline bool __kc_pcie_cap_has_devctl(const struct pci_dev __always_unused$/;"	f	file:
__kc_pcie_cap_has_lnkctl	src/kcompat.c	/^static inline bool __kc_pcie_cap_has_lnkctl(struct pci_dev *dev)$/;"	f	file:
__kc_pcie_cap_has_rtctl	src/kcompat.c	/^static inline bool __kc_pcie_cap_has_rtctl(struct pci_dev *dev)$/;"	f	file:
__kc_pcie_cap_has_sltctl	src/kcompat.c	/^static inline bool __kc_pcie_cap_has_sltctl(struct pci_dev *dev)$/;"	f	file:
__kc_pcie_cap_version	src/kcompat.c	/^static inline int __kc_pcie_cap_version(struct pci_dev *dev)$/;"	f	file:
__kc_pcie_capability_clear_and_set_word	src/kcompat.c	/^int __kc_pcie_capability_clear_and_set_word(struct pci_dev *dev, int pos,$/;"	f
__kc_pcie_capability_clear_word	src/kcompat.c	/^int __kc_pcie_capability_clear_word(struct pci_dev *dev, int pos, u16 clear)$/;"	f
__kc_pcie_capability_read_word	src/kcompat.c	/^int __kc_pcie_capability_read_word(struct pci_dev *dev, int pos, u16 *val)$/;"	f
__kc_pcie_capability_reg_implemented	src/kcompat.c	/^static bool __kc_pcie_capability_reg_implemented(struct pci_dev *dev, int pos)$/;"	f	file:
__kc_pcie_capability_write_word	src/kcompat.c	/^int __kc_pcie_capability_write_word(struct pci_dev *dev, int pos, u16 val)$/;"	f
__kc_skb_frag_unref	src/kcompat.h	/^static inline void __kc_skb_frag_unref(skb_frag_t * frag)$/;"	f
__kc_skb_queue_head_init	src/kcompat.h	/^static inline void __kc_skb_queue_head_init(struct sk_buff_head *list)$/;"	f
__kc_skb_set_hash	src/kcompat.h	/^static inline void __kc_skb_set_hash(struct sk_buff *skb, u32 hash,$/;"	f
__kc_udp_csum	src/kcompat.h	/^static inline __wsum __kc_udp_csum(struct sk_buff *skb)$/;"	f
__kc_vlan_get_protocol	src/kcompat.h	/^static inline __be16 __kc_vlan_get_protocol(const struct sk_buff *skb)$/;"	f
__kc_warn_slowpath	src/kcompat.c	/^void __kc_warn_slowpath(const char *file, int line, const char *fmt, ...)$/;"	f
__le16	src/hw.h	204;"	d
__le16	src/kcompat.h	1562;"	d
__le32	src/hw.h	207;"	d
__le32	src/kcompat.h	1565;"	d
__le64	src/hw.h	210;"	d
__le64	src/kcompat.h	1568;"	d
__maybe_unused	src/kcompat.h	2885;"	d
__napi_schedule	src/kcompat.h	2318;"	d
__netdev_alloc_skb_ip_align	src/kcompat.h	3458;"	d
__netif_subqueue_stopped	src/kcompat.h	2343;"	d
__percpu	src/kcompat.h	2842;"	d
__read_mostly	src/kcompat.h	219;"	d
__skb_frag_unref	src/kcompat.h	3544;"	d
__skb_queue_head_init	src/kcompat.h	2607;"	d
__sum16	src/kcompat.h	/^typedef __u16 __bitwise __sum16;$/;"	t
__user	src/kcompat.h	1120;"	d
__vlan_hwaccel_put_tag	src/kcompat.h	4007;"	d
__wsum	src/kcompat.h	/^typedef __u32 __bitwise __wsum;$/;"	t
_config_enabled	src/kcompat.h	303;"	d
_config_enabled	src/kcompat.h	310;"	d
_kc_LARGE	src/kcompat.c	46;"	d	file:
_kc_LEFT	src/kcompat.c	44;"	d	file:
_kc_PLUS	src/kcompat.c	42;"	d	file:
_kc_SIGN	src/kcompat.c	41;"	d	file:
_kc_SPACE	src/kcompat.c	43;"	d	file:
_kc_SPECIAL	src/kcompat.c	45;"	d	file:
_kc_ZEROPAD	src/kcompat.c	40;"	d	file:
_kc__div64_32	src/kcompat.c	/^uint32_t __attribute__ ((weak)) _kc__div64_32(uint64_t * n, uint32_t base)$/;"	f
_kc_alloc_etherdev	src/kcompat.c	/^struct net_device *_kc_alloc_etherdev(int sizeof_priv)$/;"	f
_kc_bitmap_zero	src/kcompat.h	/^static inline void _kc_bitmap_zero(unsigned long *dst, int nbits)$/;"	f
_kc_compare_ether_addr	src/kcompat.h	/^static inline unsigned _kc_compare_ether_addr(const u8 *addr1, const u8 *addr2)$/;"	f
_kc_dma_zalloc_coherent	src/kcompat.h	/^static inline void *_kc_dma_zalloc_coherent(struct device *dev, size_t size,$/;"	f
_kc_eth_random_addr	src/kcompat.h	/^static inline void _kc_eth_random_addr(u8 *addr)$/;"	f
_kc_ether_crc_le	src/kcompat.h	/^static inline unsigned _kc_ether_crc_le(int length, unsigned char *data)$/;"	f
_kc_ethtool_cmd_speed	src/kcompat.h	/^static inline __u32 _kc_ethtool_cmd_speed(struct ethtool_cmd *ep)$/;"	f
_kc_ethtool_cmd_speed_set	src/kcompat.h	/^static inline void _kc_ethtool_cmd_speed_set(struct ethtool_cmd *ep,$/;"	f
_kc_ethtool_coalesce	src/kcompat.h	/^struct _kc_ethtool_coalesce {$/;"	s
_kc_ethtool_flow_ext	src/kcompat.h	/^struct _kc_ethtool_flow_ext {$/;"	s
_kc_ethtool_flow_union	src/kcompat.h	/^union _kc_ethtool_flow_union {$/;"	u
_kc_ethtool_op_get_flags	src/kcompat.c	/^u32 _kc_ethtool_op_get_flags(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_link	src/kcompat_ethtool.c	/^u32 _kc_ethtool_op_get_link(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_sg	src/kcompat_ethtool.c	/^u32 _kc_ethtool_op_get_sg(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_tso	src/kcompat_ethtool.c	/^u32 _kc_ethtool_op_get_tso(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_tx_csum	src/kcompat_ethtool.c	/^u32 _kc_ethtool_op_get_tx_csum(struct net_device *dev)$/;"	f
_kc_ethtool_op_set_flags	src/kcompat.c	/^int _kc_ethtool_op_set_flags(struct net_device *dev, u32 data, u32 supported)$/;"	f
_kc_ethtool_op_set_sg	src/kcompat_ethtool.c	/^int _kc_ethtool_op_set_sg(struct net_device *dev, u32 data)$/;"	f
_kc_ethtool_op_set_tso	src/kcompat_ethtool.c	/^int _kc_ethtool_op_set_tso(struct net_device *dev, u32 data)$/;"	f
_kc_ethtool_op_set_tx_csum	src/kcompat_ethtool.c	/^int _kc_ethtool_op_set_tx_csum(struct net_device *dev, u32 data)$/;"	f
_kc_ethtool_ops	src/kcompat_ethtool.c	/^struct _kc_ethtool_ops {$/;"	s	file:
_kc_ethtool_pauseparam	src/kcompat.h	/^struct _kc_ethtool_pauseparam {$/;"	s
_kc_ethtool_regs	src/kcompat.h	/^struct _kc_ethtool_regs {$/;"	s
_kc_ethtool_ringparam	src/kcompat.h	/^struct _kc_ethtool_ringparam {$/;"	s
_kc_ethtool_rx_flow_spec	src/kcompat.h	/^struct _kc_ethtool_rx_flow_spec {$/;"	s
_kc_flags_dup_features	src/kcompat.c	/^static const u32 _kc_flags_dup_features =$/;"	v	file:
_kc_free_netdev	src/kcompat.c	/^void _kc_free_netdev(struct net_device *netdev)$/;"	f
_kc_generic_mii_ioctl	src/kcompat_ethtool.c	/^int _kc_generic_mii_ioctl(struct mii_if_info *mii_if,$/;"	f
_kc_hex_dump_to_buffer	src/kcompat.c	/^static void _kc_hex_dump_to_buffer(const void *buf, size_t len, int rowsize,$/;"	f	file:
_kc_if_mii	src/kcompat.h	/^static inline struct mii_ioctl_data *_kc_if_mii(struct ifreq *rq)$/;"	f
_kc_is_multicast_ether_addr	src/kcompat.h	/^static inline int _kc_is_multicast_ether_addr(const u8 *addr)$/;"	f
_kc_is_valid_ether_addr	src/kcompat.c	/^int _kc_is_valid_ether_addr(u8 *addr)$/;"	f
_kc_is_zero_ether_addr	src/kcompat.h	/^static inline int _kc_is_zero_ether_addr(const u8 *addr)$/;"	f
_kc_jiffies_to_msecs	src/kcompat.h	/^static inline unsigned int _kc_jiffies_to_msecs(const unsigned long j)$/;"	f
_kc_jiffies_to_usecs	src/kcompat.h	/^static inline unsigned int _kc_jiffies_to_usecs(const unsigned long j)$/;"	f
_kc_kmap_atomic	src/kcompat.h	/^static inline void *_kc_kmap_atomic(struct page *page)$/;"	f
_kc_kmemdup	src/kcompat.c	/^void *_kc_kmemdup(const void *src, size_t len, unsigned gfp)$/;"	f
_kc_kstrdup	src/kcompat.c	/^char *_kc_kstrdup(const char *s, unsigned int gfp)$/;"	f
_kc_kunmap_atomic	src/kcompat.h	/^static inline void _kc_kunmap_atomic(void *addr)$/;"	f
_kc_kzalloc	src/kcompat.c	/^void *_kc_kzalloc(size_t size, int flags)$/;"	f
_kc_mii_check_link	src/kcompat_ethtool.c	/^void _kc_mii_check_link(struct mii_if_info *mii)$/;"	f
_kc_mii_ethtool_gset	src/kcompat_ethtool.c	/^int _kc_mii_ethtool_gset(struct mii_if_info *mii, struct ethtool_cmd *ecmd)$/;"	f
_kc_mii_ethtool_sset	src/kcompat_ethtool.c	/^int _kc_mii_ethtool_sset(struct mii_if_info *mii, struct ethtool_cmd *ecmd)$/;"	f
_kc_mii_if_info	src/kcompat_ethtool.c	/^struct _kc_mii_if_info {$/;"	s	file:
_kc_mii_link_ok	src/kcompat_ethtool.c	/^int _kc_mii_link_ok(struct mii_if_info *mii)$/;"	f
_kc_mii_nway_restart	src/kcompat_ethtool.c	/^int _kc_mii_nway_restart(struct mii_if_info *mii)$/;"	f
_kc_msecs_to_jiffies	src/kcompat.h	/^static inline unsigned long _kc_msecs_to_jiffies(const unsigned int m)$/;"	f
_kc_msleep_interruptible	src/kcompat.h	/^static inline unsigned long _kc_msleep_interruptible(unsigned int msecs)$/;"	f
_kc_net_dev_ext	src/kcompat_ethtool.c	/^struct _kc_net_dev_ext {$/;"	s	file:
_kc_netdev_alloc_skb_ip_align	src/kcompat.h	/^static inline struct sk_buff *_kc_netdev_alloc_skb_ip_align(struct net_device$/;"	f
_kc_netdev_name	src/kcompat.h	/^static inline const char *_kc_netdev_name(const struct net_device *dev)$/;"	f
_kc_netdev_to_pdev	src/kcompat.c	/^struct pci_dev *_kc_netdev_to_pdev(struct net_device *netdev)$/;"	f
_kc_netif_msg_init	src/kcompat.h	/^static inline u32 _kc_netif_msg_init(int debug_value,$/;"	f
_kc_netif_poll_disable	src/kcompat.h	/^static inline void _kc_netif_poll_disable(struct net_device *netdev)$/;"	f
_kc_netif_poll_enable	src/kcompat.h	/^static inline void _kc_netif_poll_enable(struct net_device *netdev)$/;"	f
_kc_netif_set_real_num_tx_queues	src/kcompat.c	/^void _kc_netif_set_real_num_tx_queues(struct net_device *dev, unsigned int txq)$/;"	f
_kc_netif_tx_disable	src/kcompat.h	/^static inline void _kc_netif_tx_disable(struct net_device *dev)$/;"	f
_kc_netif_tx_start_all_queues	src/kcompat.c	/^void _kc_netif_tx_start_all_queues(struct net_device *netdev)$/;"	f
_kc_netif_tx_stop_all_queues	src/kcompat.c	/^void _kc_netif_tx_stop_all_queues(struct net_device *netdev)$/;"	f
_kc_netif_tx_wake_all_queues	src/kcompat.c	/^void _kc_netif_tx_wake_all_queues(struct net_device *netdev)$/;"	f
_kc_pci_clear_master	src/kcompat.c	/^void _kc_pci_clear_master(struct pci_dev *dev)$/;"	f
_kc_pci_dev_ext	src/kcompat_ethtool.c	/^struct _kc_pci_dev_ext {$/;"	s	file:
_kc_pci_disable_link_state	src/kcompat.c	/^void _kc_pci_disable_link_state(struct pci_dev *pdev, int state)$/;"	f
_kc_pci_dma_mapping_error	src/kcompat.h	/^static inline int _kc_pci_dma_mapping_error(dma_addr_t dma_addr)$/;"	f
_kc_pci_enable_wake	src/kcompat.c	/^int _kc_pci_enable_wake(struct pci_dev *pdev, u32 state, int enable)$/;"	f
_kc_pci_map_page	src/kcompat.c	/^_kc_pci_map_page(struct pci_dev *dev, struct page *page, unsigned long offset,$/;"	f
_kc_pci_num_vf	src/kcompat.c	/^int _kc_pci_num_vf(struct pci_dev *dev)$/;"	f
_kc_pci_prepare_to_sleep	src/kcompat.c	/^int _kc_pci_prepare_to_sleep(struct pci_dev *dev)$/;"	f
_kc_pci_release_regions	src/kcompat.c	/^void _kc_pci_release_regions(struct pci_dev *dev)$/;"	f
_kc_pci_request_regions	src/kcompat.c	/^int _kc_pci_request_regions(struct pci_dev *dev, char *res_name)$/;"	f
_kc_pci_restore_state	src/kcompat.c	/^void _kc_pci_restore_state(struct pci_dev *pdev)$/;"	f
_kc_pci_save_state	src/kcompat.c	/^int _kc_pci_save_state(struct pci_dev *pdev)$/;"	f
_kc_pci_set_dma_mask	src/kcompat.c	/^int _kc_pci_set_dma_mask(struct pci_dev *dev, dma_addr_t mask)$/;"	f
_kc_pci_set_power_state	src/kcompat.c	/^int _kc_pci_set_power_state(struct pci_dev *dev, int state)$/;"	f
_kc_pci_unmap_page	src/kcompat.c	/^_kc_pci_unmap_page(struct pci_dev *dev, u64 dma_addr, size_t size,$/;"	f
_kc_pci_wake_from_d3	src/kcompat.c	/^int _kc_pci_wake_from_d3(struct pci_dev *dev, bool enable)$/;"	f
_kc_pm_runtime_get_sync	src/kcompat.h	/^static inline int _kc_pm_runtime_get_sync()$/;"	f
_kc_pm_runtime_get_sync	src/kcompat.h	/^static inline int _kc_pm_runtime_get_sync(struct device *dev)$/;"	f
_kc_pm_runtime_suspended	src/kcompat.h	/^static inline bool _kc_pm_runtime_suspended()$/;"	f
_kc_pm_runtime_suspended	src/kcompat.h	/^static inline bool _kc_pm_runtime_suspended(struct device *dev)$/;"	f
_kc_print_hex_dump	src/kcompat.c	/^void _kc_print_hex_dump(const char *level,$/;"	f
_kc_request_irq	src/kcompat.h	/^static inline irqreturn_t _kc_request_irq(unsigned int irq,$/;"	f
_kc_scnprintf	src/kcompat.c	/^int _kc_scnprintf(char *buf, size_t size, const char *fmt, ...)$/;"	f
_kc_simple_open	src/kcompat.c	/^int _kc_simple_open(struct inode *inode, struct file *file)$/;"	f
_kc_simple_write_to_buffer	src/kcompat.c	/^ssize_t _kc_simple_write_to_buffer(void *to, size_t available, loff_t * ppos,$/;"	f
_kc_skb_add_rx_frag	src/kcompat.c	/^void _kc_skb_add_rx_frag(struct sk_buff *skb, int i, struct page *page,$/;"	f
_kc_skb_checksum_none_assert	src/kcompat.h	/^static inline void _kc_skb_checksum_none_assert(struct sk_buff *skb)$/;"	f
_kc_skb_checksum_start_offset	src/kcompat.h	/^static inline int _kc_skb_checksum_start_offset(const struct sk_buff *skb)$/;"	f
_kc_skb_fill_page_desc	src/kcompat.c	/^void _kc_skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page,$/;"	f
_kc_skb_frag_address	src/kcompat.h	/^static inline void *_kc_skb_frag_address(const skb_frag_t * frag)$/;"	f
_kc_skb_frag_dma_map	src/kcompat.h	/^static inline dma_addr_t _kc_skb_frag_dma_map(struct device *dev,$/;"	f
_kc_skb_frag_page	src/kcompat.h	/^static inline struct page *_kc_skb_frag_page(const skb_frag_t * frag)$/;"	f
_kc_skb_frag_size	src/kcompat.h	/^static inline unsigned int _kc_skb_frag_size(const skb_frag_t * frag)$/;"	f
_kc_skb_frag_size_sub	src/kcompat.h	/^static inline void _kc_skb_frag_size_sub(skb_frag_t * frag, int delta)$/;"	f
_kc_skb_header_pointer	src/kcompat.h	/^static inline void *_kc_skb_header_pointer(const struct sk_buff *skb,$/;"	f
_kc_skb_is_gso	src/kcompat.h	/^static inline int _kc_skb_is_gso(const struct sk_buff *skb)$/;"	f
_kc_skb_is_gso_v6	src/kcompat.h	/^static inline int _kc_skb_is_gso_v6(const struct sk_buff *skb)$/;"	f
_kc_skb_pad	src/kcompat.c	/^int _kc_skb_pad(struct sk_buff *skb, int pad)$/;"	f
_kc_skb_padto	src/kcompat.h	/^static inline int _kc_skb_padto(struct sk_buff *skb, unsigned int len)$/;"	f
_kc_snprintf	src/kcompat.c	/^int _kc_snprintf(char *buf, size_t size, const char *fmt, ...)$/;"	f
_kc_strict_strtol	src/kcompat.h	/^static inline int _kc_strict_strtol(const char *buf, unsigned int base,$/;"	f
_kc_strlcpy	src/kcompat.c	/^size_t _kc_strlcpy(char *dest, const char *src, size_t size)$/;"	f
_kc_synchronize_irq	src/kcompat.h	/^static inline void _kc_synchronize_irq(unsigned int a)$/;"	f
_kc_usecs_to_jiffies	src/kcompat.h	/^static inline unsigned long _kc_usecs_to_jiffies(const unsigned int m)$/;"	f
_kc_vlan_ethhdr	src/kcompat.h	/^struct _kc_vlan_ethhdr {$/;"	s
_kc_vlan_hdr	src/kcompat.h	/^struct _kc_vlan_hdr {$/;"	s
_kc_vsnprintf	src/kcompat.c	/^int _kc_vsnprintf(char *buf, size_t size, const char *fmt, va_list args)$/;"	f
_kc_vzalloc	src/kcompat.h	/^static inline void *_kc_vzalloc(unsigned long size)$/;"	f
_kc_vzalloc_node	src/kcompat.h	/^static inline void *_kc_vzalloc_node(unsigned long size, int node)$/;"	f
_udp_hdr	src/kcompat.h	/^static inline struct udphdr *_udp_hdr(const struct sk_buff *skb)$/;"	f
acquire	src/hw.h	/^	s32 (*acquire) (struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
acquire	src/hw.h	/^	s32 (*acquire) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
active_vlans	src/e1000.h	/^	unsigned long active_vlans[BITS_TO_LONGS(VLAN_N_VID)];$/;"	m	struct:e1000_adapter
adapter	src/e1000.h	/^	struct e1000_adapter *adapter;	\/* back pointer to adapter *\/$/;"	m	struct:e1000_ring	typeref:struct:e1000_ring::e1000_adapter
adapter	src/hw.h	/^	struct e1000_adapter *adapter;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_adapter
adapter_struct	src/kcompat.h	59;"	d
adaptive_ifs	src/hw.h	/^	bool adaptive_ifs;$/;"	m	struct:e1000_mac_info
addr	src/hw.h	/^	u32 addr;$/;"	m	struct:e1000_phy_info
addr	src/hw.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:e1000_mac_info
address_bits	src/hw.h	/^	u16 address_bits;$/;"	m	struct:e1000_nvm_info
advertise	src/e1000.h	/^	u16 advertise;		\/* auto-negotiation advertisement *\/$/;"	m	struct:e1000_phy_regs
advertising	src/kcompat_ethtool.c	/^	int advertising;$/;"	m	struct:_kc_mii_if_info	file:
algnerrc	src/hw.h	/^	u64 algnerrc;$/;"	m	struct:e1000_hw_stats
alloc_etherdev	src/kcompat.h	764;"	d
alloc_etherdev_mq	src/kcompat.h	2163;"	d
alloc_rx_buf	src/e1000.h	/^	void (*alloc_rx_buf)(struct e1000_ring *ring, int cleaned_count,$/;"	m	struct:e1000_adapter
alloc_rx_buff_failed	src/e1000.h	/^	u32 alloc_rx_buff_failed;$/;"	m	struct:e1000_adapter
arc_subsystem_valid	src/hw.h	/^	bool arc_subsystem_valid;$/;"	m	struct:e1000_mac_info
arg	src/param.c	/^	} arg;$/;"	m	struct:e1000_option	typeref:union:e1000_option::__anon4	file:
autoneg	src/hw.h	/^	bool autoneg;$/;"	m	struct:e1000_mac_info
autoneg	src/kcompat.h	/^	u32 autoneg;$/;"	m	struct:_kc_ethtool_pauseparam
autoneg_advertised	src/hw.h	/^	u16 autoneg_advertised;$/;"	m	struct:e1000_phy_info
autoneg_failed	src/hw.h	/^	bool autoneg_failed;$/;"	m	struct:e1000_mac_info
autoneg_mask	src/hw.h	/^	u16 autoneg_mask;$/;"	m	struct:e1000_phy_info
autoneg_wait_to_complete	src/hw.h	/^	bool autoneg_wait_to_complete;$/;"	m	struct:e1000_phy_info
bd_number	src/e1000.h	/^	u32 bd_number;$/;"	m	struct:e1000_adapter
berasesz	src/ich8lan.c	/^		u16 berasesz:2;	\/* bit 4:3 Sector Erase Size *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
bitmap_zero	src/kcompat.h	1458;"	d
bitmap_zero	src/kcompat.h	1459;"	d
blink_led	src/hw.h	/^	s32 (*blink_led) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
blink_timer	src/e1000.h	/^	struct timer_list blink_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
bmcr	src/e1000.h	/^	u16 bmcr;		\/* basic mode control register    *\/$/;"	m	struct:e1000_phy_regs
bmsr	src/e1000.h	/^	u16 bmsr;		\/* basic mode status register     *\/$/;"	m	struct:e1000_phy_regs
board_80003es2lan	src/e1000.h	/^	board_80003es2lan,$/;"	e	enum:e1000_boards
board_82571	src/e1000.h	/^	board_82571,$/;"	e	enum:e1000_boards
board_82572	src/e1000.h	/^	board_82572,$/;"	e	enum:e1000_boards
board_82573	src/e1000.h	/^	board_82573,$/;"	e	enum:e1000_boards
board_82574	src/e1000.h	/^	board_82574,$/;"	e	enum:e1000_boards
board_82583	src/e1000.h	/^	board_82583,$/;"	e	enum:e1000_boards
board_ich10lan	src/e1000.h	/^	board_ich10lan,$/;"	e	enum:e1000_boards
board_ich8lan	src/e1000.h	/^	board_ich8lan,$/;"	e	enum:e1000_boards
board_ich9lan	src/e1000.h	/^	board_ich9lan,$/;"	e	enum:e1000_boards
board_pch2lan	src/e1000.h	/^	board_pch2lan,$/;"	e	enum:e1000_boards
board_pch_lpt	src/e1000.h	/^	board_pch_lpt,$/;"	e	enum:e1000_boards
board_pchlan	src/e1000.h	/^	board_pchlan,$/;"	e	enum:e1000_boards
bool	src/kcompat.h	2033;"	d
bprc	src/hw.h	/^	u64 bprc;$/;"	m	struct:e1000_hw_stats
bptc	src/hw.h	/^	u64 bptc;$/;"	m	struct:e1000_hw_stats
buffer_addr	src/hw.h	/^		__le64 buffer_addr;$/;"	m	struct:e1000_rx_desc_extended::__anon7
buffer_addr	src/hw.h	/^		__le64 buffer_addr[MAX_PS_BUFFERS];$/;"	m	struct:e1000_rx_desc_packet_split::__anon13
buffer_addr	src/hw.h	/^	__le64 buffer_addr;	\/* Address of the descriptor's buffer address *\/$/;"	m	struct:e1000_data_desc
buffer_addr	src/hw.h	/^	__le64 buffer_addr;	\/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_tx_desc
buffer_info	src/e1000.h	/^	struct e1000_buffer *buffer_info;$/;"	m	struct:e1000_ring	typeref:struct:e1000_ring::e1000_buffer
bulk_latency	src/e1000.h	/^	bulk_latency = 2,$/;"	e	enum:latency_range
bus	src/hw.h	/^	struct e1000_bus_info bus;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_bus_info
bus_info	src/kcompat.h	/^	char bus_info[32];$/;"	m	struct:k_ethtool_drvinfo
bytecount	src/e1000.h	/^			unsigned int bytecount;$/;"	m	struct:e1000_buffer::__anon35::__anon36
c10_demote_ltr	src/e1000.h	/^	bool c10_demote_ltr;	\/* is\/should LTR be demoted *\/$/;"	m	struct:e1000_adapter
c10_mpc_count	src/e1000.h	/^	u64 c10_mpc_count;	\/* frequently updated MPC count *\/$/;"	m	struct:e1000_adapter
c10_pba_bytes	src/e1000.h	/^	u32 c10_pba_bytes;	\/* current PBA RXA converted to bytes*\/$/;"	m	struct:e1000_adapter
c10_rx_bytes	src/e1000.h	/^	u64 c10_rx_bytes;	\/* frequently updated RX bytes count *\/$/;"	m	struct:e1000_adapter
cable_length	src/hw.h	/^	u16 cable_length;$/;"	m	struct:e1000_phy_info
cable_polarity	src/hw.h	/^	enum e1000_rev_polarity cable_polarity;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_rev_polarity
cancel_work_sync	src/kcompat.h	1308;"	d
cancel_work_sync	src/kcompat.h	2170;"	d
carrier	src/kcompat_ethtool.c	/^	unsigned int carrier;$/;"	m	struct:_kc_net_dev_ext	file:
cc	src/e1000.h	/^	struct cyclecounter cc;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::cyclecounter
cexterr	src/hw.h	/^	u64 cexterr;$/;"	m	struct:e1000_hw_stats
cfg_on_link_up	src/hw.h	/^	s32 (*cfg_on_link_up) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
check_for_link	src/hw.h	/^	s32 (*check_for_link) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
check_mng_mode	src/hw.h	/^	bool (*check_mng_mode) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
check_polarity	src/hw.h	/^	s32 (*check_polarity) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
check_reset_block	src/hw.h	/^	s32 (*check_reset_block) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
checksum	src/hw.h	/^	u8 checksum;$/;"	m	struct:e1000_host_command_header
checksum	src/hw.h	/^	u8 checksum;$/;"	m	struct:e1000_host_mng_command_header
checksum	src/hw.h	/^	u8 checksum;$/;"	m	struct:e1000_host_mng_dhcp_cookie
clamp_t	src/kcompat.h	2452;"	d
cleanup_led	src/hw.h	/^	s32 (*cleanup_led) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
clear_hw_cntrs	src/hw.h	/^	void (*clear_hw_cntrs) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
clear_vfta	src/hw.h	/^	void (*clear_vfta) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
cmd	src/hw.h	/^			u8 cmd;	\/* Descriptor control *\/$/;"	m	struct:e1000_tx_desc::__anon20::__anon21
cmd	src/hw.h	/^			u8 cmd;$/;"	m	struct:e1000_data_desc::__anon30::__anon31
cmd	src/kcompat.h	/^	u32 cmd;		\/* ETHTOOL_GSTRINGS *\/$/;"	m	struct:ethtool_gstrings
cmd	src/kcompat.h	/^	u32 cmd;		\/* ETHTOOL_{G,S}COALESCE *\/$/;"	m	struct:_kc_ethtool_coalesce
cmd	src/kcompat.h	/^	u32 cmd;		\/* ETHTOOL_{G,S}PAUSEPARAM *\/$/;"	m	struct:_kc_ethtool_pauseparam
cmd	src/kcompat.h	/^	u32 cmd;		\/* ETHTOOL_{G,S}RINGPARAM *\/$/;"	m	struct:_kc_ethtool_ringparam
cmd	src/kcompat.h	/^	u32 cmd;$/;"	m	struct:_kc_ethtool_regs
cmd	src/kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_eeprom
cmd	src/kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_stats
cmd	src/kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_test
cmd	src/kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_value
cmd	src/kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_wolinfo
cmd	src/kcompat.h	/^	u32 cmd;$/;"	m	struct:k_ethtool_drvinfo
cmd_and_length	src/hw.h	/^	__le32 cmd_and_length;$/;"	m	struct:e1000_context_desc
colc	src/hw.h	/^	u64 colc;$/;"	m	struct:e1000_hw_stats
colc_old	src/e1000.h	/^	u64 colc_old;$/;"	m	struct:e1000_adapter
collision_delta	src/hw.h	/^	u32 collision_delta;$/;"	m	struct:e1000_mac_info
command_data	src/hw.h	/^	u8 command_data[E1000_HI_MAX_DATA_LENGTH];$/;"	m	struct:e1000_host_command_info
command_data	src/hw.h	/^	u8 command_data[E1000_HI_MAX_MNG_DATA_LENGTH];$/;"	m	struct:e1000_host_mng_command_info
command_header	src/hw.h	/^	struct e1000_host_command_header command_header;$/;"	m	struct:e1000_host_command_info	typeref:struct:e1000_host_command_info::e1000_host_command_header
command_header	src/hw.h	/^	struct e1000_host_mng_command_header command_header;$/;"	m	struct:e1000_host_mng_command_info	typeref:struct:e1000_host_mng_command_info::e1000_host_mng_command_header
command_id	src/hw.h	/^	u8 command_id;$/;"	m	struct:e1000_host_command_header
command_id	src/hw.h	/^	u8 command_id;$/;"	m	struct:e1000_host_mng_command_header
command_length	src/hw.h	/^	u16 command_length;$/;"	m	struct:e1000_host_mng_command_header
command_length	src/hw.h	/^	u8 command_length;$/;"	m	struct:e1000_host_command_header
command_options	src/hw.h	/^	u8 command_options;$/;"	m	struct:e1000_host_command_header
commit	src/hw.h	/^	s32 (*commit) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
compare_ether_addr	src/kcompat.h	1828;"	d
compare_ether_addr	src/kcompat.h	1829;"	d
config_collision_dist	src/hw.h	/^	void (*config_collision_dist) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
config_enabled	src/kcompat.h	302;"	d
config_enabled	src/kcompat.h	309;"	d
config_space	src/e1000.h	/^	u32 *config_space;$/;"	m	struct:e1000_adapter
container_of	src/kcompat.h	1304;"	d
container_of	src/kcompat.h	1305;"	d
copybreak	src/param.c	/^unsigned int copybreak = COPYBREAK_DEFAULT;$/;"	v
corr_errors	src/e1000.h	/^	unsigned int corr_errors;	\/* correctable ECC errors *\/$/;"	m	struct:e1000_adapter
count	src/e1000.h	/^	unsigned int count;		\/* number of desc. in ring *\/$/;"	m	struct:e1000_ring
cpu_online	src/kcompat.h	250;"	d
cpu_relax	src/kcompat.h	987;"	d
cpu_to_be16	src/kcompat.h	2180;"	d
cpu_to_be16	src/kcompat.h	2182;"	d
crcerrs	src/hw.h	/^	u64 crcerrs;$/;"	m	struct:e1000_hw_stats
cso	src/hw.h	/^			u8 cso;	\/* Checksum offset *\/$/;"	m	struct:e1000_tx_desc::__anon20::__anon21
css	src/hw.h	/^			u8 css;	\/* Checksum start *\/$/;"	m	struct:e1000_tx_desc::__anon22::__anon23
csum	src/hw.h	/^					__le16 csum;	\/* Packet Checksum *\/$/;"	m	struct:e1000_rx_desc_extended::__anon8::__anon9::__anon10::__anon11
csum	src/hw.h	/^					__le16 csum;	\/* Packet Checksum *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon14::__anon15::__anon16::__anon17
csum_ip	src/hw.h	/^				} csum_ip;$/;"	m	union:e1000_rx_desc_extended::__anon8::__anon9::__anon10	typeref:struct:e1000_rx_desc_extended::__anon8::__anon9::__anon10::__anon11
csum_ip	src/hw.h	/^				} csum_ip;$/;"	m	union:e1000_rx_desc_packet_split::__anon14::__anon15::__anon16	typeref:struct:e1000_rx_desc_packet_split::__anon14::__anon15::__anon16::__anon17
csum_offset	src/kcompat.h	2070;"	d
csum_unfold	src/kcompat.h	/^static inline __wsum csum_unfold(__sum16 n)$/;"	f
ctrl1000	src/e1000.h	/^	u16 ctrl1000;		\/* 1000BASE-T control register    *\/$/;"	m	struct:e1000_phy_regs
current_ifs_val	src/hw.h	/^	u16 current_ifs_val;$/;"	m	struct:e1000_mac_info
current_mode	src/hw.h	/^	enum e1000_fc_mode current_mode;	\/* FC mode in effect *\/$/;"	m	struct:e1000_fc_info	typeref:enum:e1000_fc_info::e1000_fc_mode
dael	src/ich8lan.c	/^		u16 dael:1;	\/* bit 2 Direct Access error Log *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
data	src/hw.h	/^		__le32 data;$/;"	m	union:e1000_context_desc::__anon28
data	src/hw.h	/^		__le32 data;$/;"	m	union:e1000_data_desc::__anon30
data	src/hw.h	/^		__le32 data;$/;"	m	union:e1000_data_desc::__anon32
data	src/hw.h	/^		__le32 data;$/;"	m	union:e1000_tx_desc::__anon20
data	src/hw.h	/^		__le32 data;$/;"	m	union:e1000_tx_desc::__anon22
data	src/kcompat.h	/^	__be32 data[2];$/;"	m	struct:_kc_ethtool_flow_ext
data	src/kcompat.h	/^	u32 data;$/;"	m	struct:ethtool_value
data	src/kcompat.h	/^	u64 data[0];$/;"	m	struct:ethtool_stats
data	src/kcompat.h	/^	u64 data[0];$/;"	m	struct:ethtool_test
data	src/kcompat.h	/^	u8 data[0];$/;"	m	struct:_kc_ethtool_regs
data	src/kcompat.h	/^	u8 data[0];$/;"	m	struct:ethtool_eeprom
data	src/kcompat.h	/^	u8 data[0];$/;"	m	struct:ethtool_gstrings
dc	src/hw.h	/^	u64 dc;$/;"	m	struct:e1000_hw_stats
dca3_get_tag	src/kcompat.h	285;"	d
dca_add_requester	src/kcompat.h	278;"	d
dca_get_tag	src/kcompat.h	277;"	d
dca_remove_requester	src/kcompat.h	279;"	d
dcb_ieee_delapp	src/kcompat.h	3461;"	d
dcb_ieee_getapp_mask	src/kcompat.h	3462;"	d
dcb_ieee_setapp	src/kcompat.h	3460;"	d
debug	src/netdev.c	/^static int debug = -1;$/;"	v	file:
def	src/param.c	/^	int def;$/;"	m	struct:e1000_option	file:
delay_usec	src/hw.h	/^	u16 delay_usec;$/;"	m	struct:e1000_nvm_info
desc	src/e1000.h	/^	void *desc;			\/* pointer to ring memory  *\/$/;"	m	struct:e1000_ring
detect_tx_hung	src/e1000.h	/^	bool detect_tx_hung;$/;"	m	struct:e1000_adapter
dev	src/kcompat.h	/^	struct net_device *dev;$/;"	m	struct:napi_struct	typeref:struct:napi_struct::net_device
dev	src/kcompat_ethtool.c	/^	struct net_device *dev;$/;"	m	struct:_kc_mii_if_info	typeref:struct:_kc_mii_if_info::net_device	file:
dev	src/kcompat_ethtool.c	/^	struct net_device *dev;$/;"	m	struct:_kc_net_dev_ext	typeref:struct:_kc_net_dev_ext::net_device	file:
dev	src/kcompat_ethtool.c	/^	struct pci_dev *dev;$/;"	m	struct:_kc_pci_dev_ext	typeref:struct:_kc_pci_dev_ext::pci_dev	file:
dev_dbg	src/kcompat.h	1203;"	d
dev_err	src/kcompat.h	1195;"	d
dev_get_by_name	src/kcompat.h	2341;"	d
dev_get_by_name	src/kcompat.h	2342;"	d
dev_info	src/kcompat.h	1197;"	d
dev_notice	src/kcompat.h	1201;"	d
dev_notice	src/kcompat.h	1861;"	d
dev_put	src/kcompat.h	1333;"	d
dev_put	src/kcompat.h	1334;"	d
dev_spec	src/hw.h	/^	} dev_spec;$/;"	m	struct:e1000_hw	typeref:union:e1000_hw::__anon34
dev_to_node	src/kcompat.h	2073;"	d
dev_warn	src/kcompat.h	1199;"	d
device	src/kcompat.h	/^struct device {$/;"	s
device_can_wakeup	src/kcompat.h	1812;"	d
device_can_wakeup	src/kcompat.h	1852;"	d
device_can_wakeup	src/kcompat.h	1854;"	d
device_init_wakeup	src/kcompat.h	1818;"	d
device_set_wakeup_enable	src/kcompat.h	1815;"	d
device_set_wakeup_enable	src/kcompat.h	2499;"	d
device_set_wakeup_enable	src/kcompat.h	2500;"	d
device_wakeup_enable	src/kcompat.h	3296;"	d
disable_polarity_correction	src/hw.h	/^	bool disable_polarity_correction;$/;"	m	struct:e1000_phy_info
dma	src/e1000.h	/^	dma_addr_t dma;			\/* phys address of ring    *\/$/;"	m	struct:e1000_ring
dma	src/e1000.h	/^	dma_addr_t dma;$/;"	m	struct:e1000_buffer
dma	src/e1000.h	/^	u64 dma; \/* must be u64 - written to hw *\/$/;"	m	struct:e1000_ps_page
dma_alloc_coherent	src/kcompat.h	1207;"	d
dma_data_direction	src/kcompat.h	/^enum dma_data_direction {$/;"	g
dma_free_coherent	src/kcompat.h	1209;"	d
dma_map_page	src/kcompat.h	1212;"	d
dma_map_sg	src/kcompat.h	1222;"	d
dma_map_single	src/kcompat.h	1217;"	d
dma_mapping_error	src/kcompat.h	2523;"	d
dma_mapping_error	src/kcompat.h	2525;"	d
dma_pool	src/kcompat.h	1418;"	d
dma_pool_alloc	src/kcompat.h	1420;"	d
dma_pool_create	src/kcompat.h	1423;"	d
dma_pool_destroy	src/kcompat.h	1419;"	d
dma_pool_free	src/kcompat.h	1421;"	d
dma_set_coherent_mask	src/kcompat.h	1331;"	d
dma_set_coherent_mask	src/kcompat.h	2945;"	d
dma_set_mask	src/kcompat.h	1234;"	d
dma_set_mask_and_coherent	src/kcompat.h	4036;"	d
dma_sync_single	src/kcompat.h	1227;"	d
dma_sync_single_for_cpu	src/kcompat.h	1436;"	d
dma_sync_single_for_device	src/kcompat.h	1437;"	d
dma_sync_single_range	src/kcompat.h	1231;"	d
dma_sync_single_range_for_cpu	src/kcompat.h	1438;"	d
dma_sync_single_range_for_cpu	src/kcompat.h	1787;"	d
dma_sync_single_range_for_device	src/kcompat.h	1439;"	d
dma_sync_single_range_for_device	src/kcompat.h	1789;"	d
dma_unmap_addr	src/kcompat.h	2859;"	d
dma_unmap_addr	src/kcompat.h	2860;"	d
dma_unmap_addr	src/kcompat.h	3068;"	d
dma_unmap_addr_set	src/kcompat.h	2861;"	d
dma_unmap_addr_set	src/kcompat.h	2862;"	d
dma_unmap_addr_set	src/kcompat.h	3069;"	d
dma_unmap_len	src/kcompat.h	2863;"	d
dma_unmap_len	src/kcompat.h	2864;"	d
dma_unmap_len	src/kcompat.h	3070;"	d
dma_unmap_len_set	src/kcompat.h	2865;"	d
dma_unmap_len_set	src/kcompat.h	2866;"	d
dma_unmap_len_set	src/kcompat.h	3071;"	d
dma_unmap_page	src/kcompat.h	1214;"	d
dma_unmap_sg	src/kcompat.h	1224;"	d
dma_unmap_single	src/kcompat.h	1219;"	d
dma_zalloc_coherent	src/kcompat.h	3481;"	d
do_div	src/kcompat.h	1384;"	d
do_div	src/kcompat.h	1393;"	d
downshift_task	src/e1000.h	/^	struct work_struct downshift_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
driver	src/kcompat.h	/^	char driver[32];$/;"	m	struct:k_ethtool_drvinfo
driver	src/kcompat_ethtool.c	/^	struct pci_driver *driver;$/;"	m	struct:_kc_pci_dev_ext	typeref:struct:_kc_pci_dev_ext::pci_driver	file:
e1000_1000t_rx_status	src/hw.h	/^enum e1000_1000t_rx_status {$/;"	g
e1000_1000t_rx_status_not_ok	src/hw.h	/^	e1000_1000t_rx_status_not_ok = 0,$/;"	e	enum:e1000_1000t_rx_status
e1000_1000t_rx_status_ok	src/hw.h	/^	e1000_1000t_rx_status_ok,$/;"	e	enum:e1000_1000t_rx_status
e1000_1000t_rx_status_undefined	src/hw.h	/^	e1000_1000t_rx_status_undefined = 0xFF$/;"	e	enum:e1000_1000t_rx_status
e1000_80003es2lan	src/hw.h	/^	e1000_80003es2lan,$/;"	e	enum:e1000_mac_type
e1000_82571	src/hw.h	/^	e1000_82571,$/;"	e	enum:e1000_mac_type
e1000_82571_info	src/82571.c	/^const struct e1000_info e1000_82571_info = {$/;"	v	typeref:struct:e1000_info
e1000_82572	src/hw.h	/^	e1000_82572,$/;"	e	enum:e1000_mac_type
e1000_82572_info	src/82571.c	/^const struct e1000_info e1000_82572_info = {$/;"	v	typeref:struct:e1000_info
e1000_82573	src/hw.h	/^	e1000_82573,$/;"	e	enum:e1000_mac_type
e1000_82573_info	src/82571.c	/^const struct e1000_info e1000_82573_info = {$/;"	v	typeref:struct:e1000_info
e1000_82574	src/hw.h	/^	e1000_82574,$/;"	e	enum:e1000_mac_type
e1000_82574_info	src/82571.c	/^const struct e1000_info e1000_82574_info = {$/;"	v	typeref:struct:e1000_info
e1000_82583	src/hw.h	/^	e1000_82583,$/;"	e	enum:e1000_mac_type
e1000_82583_info	src/82571.c	/^const struct e1000_info e1000_82583_info = {$/;"	v	typeref:struct:e1000_info
e1000_access_phy_debug_regs_hv	src/phy.c	/^static s32 e1000_access_phy_debug_regs_hv(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_access_phy_wakeup_reg_bm	src/phy.c	/^static s32 e1000_access_phy_wakeup_reg_bm(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_acquire_mac_csr_80003es2lan	src/80003es2lan.c	/^static s32 e1000_acquire_mac_csr_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_nvm_80003es2lan	src/80003es2lan.c	/^static s32 e1000_acquire_nvm_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_nvm_82571	src/82571.c	/^static s32 e1000_acquire_nvm_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_nvm_ich8lan	src/ich8lan.c	/^static s32 e1000_acquire_nvm_ich8lan(struct e1000_hw __always_unused *hw)$/;"	f	file:
e1000_acquire_phy_80003es2lan	src/80003es2lan.c	/^static s32 e1000_acquire_phy_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_swflag_ich8lan	src/ich8lan.c	/^static s32 e1000_acquire_swflag_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_swfw_sync_80003es2lan	src/80003es2lan.c	/^static s32 e1000_acquire_swfw_sync_80003es2lan(struct e1000_hw *hw, u16 mask)$/;"	f	file:
e1000_adapter	src/e1000.h	/^struct e1000_adapter {$/;"	s
e1000_alloc_jumbo_rx_buffers	src/netdev.c	/^static void e1000_alloc_jumbo_rx_buffers(struct e1000_ring *rx_ring,$/;"	f	file:
e1000_alloc_queues	src/netdev.c	/^static int __devinit e1000_alloc_queues(struct e1000_adapter *adapter)$/;"	f	file:
e1000_alloc_ring_dma	src/netdev.c	/^static int e1000_alloc_ring_dma(struct e1000_adapter *adapter,$/;"	f	file:
e1000_alloc_rx_buffers	src/netdev.c	/^static void e1000_alloc_rx_buffers(struct e1000_ring *rx_ring,$/;"	f	file:
e1000_alloc_rx_buffers_ps	src/netdev.c	/^static void e1000_alloc_rx_buffers_ps(struct e1000_ring *rx_ring,$/;"	f	file:
e1000_boards	src/e1000.h	/^enum e1000_boards {$/;"	g
e1000_buffer	src/e1000.h	/^struct e1000_buffer {$/;"	s
e1000_bus_info	src/hw.h	/^struct e1000_bus_info {$/;"	s
e1000_bus_width	src/hw.h	/^enum e1000_bus_width {$/;"	g
e1000_bus_width_32	src/hw.h	/^	e1000_bus_width_32,$/;"	e	enum:e1000_bus_width
e1000_bus_width_64	src/hw.h	/^	e1000_bus_width_64,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x1	src/hw.h	/^	e1000_bus_width_pcie_x1,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x2	src/hw.h	/^	e1000_bus_width_pcie_x2,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x4	src/hw.h	/^	e1000_bus_width_pcie_x4 = 4,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x8	src/hw.h	/^	e1000_bus_width_pcie_x8 = 8,$/;"	e	enum:e1000_bus_width
e1000_bus_width_reserved	src/hw.h	/^	e1000_bus_width_reserved$/;"	e	enum:e1000_bus_width
e1000_bus_width_unknown	src/hw.h	/^	e1000_bus_width_unknown = 0,$/;"	e	enum:e1000_bus_width
e1000_calculate_checksum	src/manage.c	/^static u8 e1000_calculate_checksum(u8 *buffer, u32 length)$/;"	f	file:
e1000_cfg_kmrn_1000_80003es2lan	src/80003es2lan.c	/^static s32 e1000_cfg_kmrn_1000_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_cfg_kmrn_10_100_80003es2lan	src/80003es2lan.c	/^static s32 e1000_cfg_kmrn_10_100_80003es2lan(struct e1000_hw *hw, u16 duplex)$/;"	f	file:
e1000_cfg_on_link_up_80003es2lan	src/80003es2lan.c	/^static s32 e1000_cfg_on_link_up_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_change_mtu	src/netdev.c	/^static int e1000_change_mtu(struct net_device *netdev, int new_mtu)$/;"	f	file:
e1000_check_alt_mac_addr_generic	src/mac.c	/^s32 e1000_check_alt_mac_addr_generic(struct e1000_hw *hw)$/;"	f
e1000_check_for_copper_link_ich8lan	src/ich8lan.c	/^static s32 e1000_check_for_copper_link_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_check_for_serdes_link_82571	src/82571.c	/^static s32 e1000_check_for_serdes_link_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_check_lbtest_frame	src/ethtool.c	/^static int e1000_check_lbtest_frame(struct sk_buff *skb,$/;"	f	file:
e1000_check_mng_mode_82574	src/82571.c	/^static bool e1000_check_mng_mode_82574(struct e1000_hw *hw)$/;"	f	file:
e1000_check_mng_mode_ich8lan	src/ich8lan.c	/^static bool e1000_check_mng_mode_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_check_mng_mode_pchlan	src/ich8lan.c	/^static bool e1000_check_mng_mode_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_check_phy_82574	src/82571.c	/^bool e1000_check_phy_82574(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_82577	src/phy.c	/^s32 e1000_check_polarity_82577(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_ife	src/phy.c	/^s32 e1000_check_polarity_ife(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_igp	src/phy.c	/^s32 e1000_check_polarity_igp(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_m88	src/phy.c	/^s32 e1000_check_polarity_m88(struct e1000_hw *hw)$/;"	f
e1000_check_reset_block_ich8lan	src/ich8lan.c	/^static s32 e1000_check_reset_block_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_clean_jumbo_rx_irq	src/netdev.c	/^static bool e1000_clean_jumbo_rx_irq(struct e1000_ring *rx_ring, int *work_done,$/;"	f	file:
e1000_clean_rx_irq	src/netdev.c	/^static bool e1000_clean_rx_irq(struct e1000_ring *rx_ring, int *work_done,$/;"	f	file:
e1000_clean_rx_irq_ps	src/netdev.c	/^static bool e1000_clean_rx_irq_ps(struct e1000_ring *rx_ring, int *work_done,$/;"	f	file:
e1000_clean_rx_ring	src/netdev.c	/^static void e1000_clean_rx_ring(struct e1000_ring *rx_ring)$/;"	f	file:
e1000_clean_tx_irq	src/netdev.c	/^static bool e1000_clean_tx_irq(struct e1000_ring *tx_ring)$/;"	f	file:
e1000_clean_tx_ring	src/netdev.c	/^static void e1000_clean_tx_ring(struct e1000_ring *tx_ring)$/;"	f	file:
e1000_cleanup_led_ich8lan	src/ich8lan.c	/^static s32 e1000_cleanup_led_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_cleanup_led_pchlan	src/ich8lan.c	/^static s32 e1000_cleanup_led_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_80003es2lan	src/80003es2lan.c	/^static void e1000_clear_hw_cntrs_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_82571	src/82571.c	/^static void e1000_clear_hw_cntrs_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_ich8lan	src/ich8lan.c	/^static void e1000_clear_hw_cntrs_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_vfta_82571	src/82571.c	/^static void e1000_clear_vfta_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_vfta_generic	src/mac.c	/^void e1000_clear_vfta_generic(struct e1000_hw *hw)$/;"	f
e1000_close	src/netdev.c	/^static int e1000_close(struct net_device *netdev)$/;"	f	file:
e1000_commit_fc_settings_generic	src/mac.c	/^static s32 e1000_commit_fc_settings_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_configure	src/netdev.c	/^static void e1000_configure(struct e1000_adapter *adapter)$/;"	f	file:
e1000_configure_k1_ich8lan	src/ich8lan.c	/^s32 e1000_configure_k1_ich8lan(struct e1000_hw *hw, bool k1_enable)$/;"	f
e1000_configure_msix	src/netdev.c	/^static void e1000_configure_msix(struct e1000_adapter *adapter)$/;"	f	file:
e1000_configure_rx	src/netdev.c	/^static void e1000_configure_rx(struct e1000_adapter *adapter)$/;"	f	file:
e1000_configure_tx	src/netdev.c	/^static void e1000_configure_tx(struct e1000_adapter *adapter)$/;"	f	file:
e1000_consume_page	src/netdev.c	/^static void e1000_consume_page(struct e1000_buffer *bi, struct sk_buff *skb,$/;"	f	file:
e1000_context_desc	src/hw.h	/^struct e1000_context_desc {$/;"	s
e1000_copper_link_autoneg	src/phy.c	/^static s32 e1000_copper_link_autoneg(struct e1000_hw *hw)$/;"	f	file:
e1000_copper_link_setup_82577	src/phy.c	/^s32 e1000_copper_link_setup_82577(struct e1000_hw *hw)$/;"	f
e1000_copper_link_setup_gg82563_80003es2lan	src/80003es2lan.c	/^static s32 e1000_copper_link_setup_gg82563_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_copy_rx_addrs_to_phy_ich8lan	src/ich8lan.c	/^void e1000_copy_rx_addrs_to_phy_ich8lan(struct e1000_hw *hw)$/;"	f
e1000_create_lbtest_frame	src/ethtool.c	/^static void e1000_create_lbtest_frame(struct sk_buff *skb,$/;"	f	file:
e1000_data_desc	src/hw.h	/^struct e1000_data_desc {$/;"	s
e1000_demote_ltr	src/ich8lan.c	/^void e1000_demote_ltr(struct e1000_hw *hw, bool demote, bool link)$/;"	f
e1000_desc_unused	src/netdev.c	/^static int e1000_desc_unused(struct e1000_ring *ring)$/;"	f	file:
e1000_dev_spec_80003es2lan	src/hw.h	/^struct e1000_dev_spec_80003es2lan {$/;"	s
e1000_dev_spec_82571	src/hw.h	/^struct e1000_dev_spec_82571 {$/;"	s
e1000_dev_spec_ich8lan	src/hw.h	/^struct e1000_dev_spec_ich8lan {$/;"	s
e1000_diag_test	src/ethtool.c	/^static void e1000_diag_test(struct net_device *netdev,$/;"	f	file:
e1000_disable_phy_wakeup_reg_access_bm	src/phy.c	/^s32 e1000_disable_phy_wakeup_reg_access_bm(struct e1000_hw *hw, u16 *phy_reg)$/;"	f
e1000_disable_ulp_lpt_lp	src/ich8lan.c	/^static s32 e1000_disable_ulp_lpt_lp(struct e1000_hw *hw, bool force)$/;"	f	file:
e1000_driver	src/netdev.c	/^static struct pci_driver e1000_driver = {$/;"	v	typeref:struct:pci_driver	file:
e1000_driver	src/netdev.c	/^static struct pci_driver e1000_driver;$/;"	v	typeref:struct:pci_driver	file:
e1000_eeprom_checks	src/netdev.c	/^static void e1000_eeprom_checks(struct e1000_adapter *adapter)$/;"	f	file:
e1000_eeprom_test	src/ethtool.c	/^static int e1000_eeprom_test(struct e1000_adapter *adapter, u64 *data)$/;"	f	file:
e1000_enable_phy_wakeup_reg_access_bm	src/phy.c	/^s32 e1000_enable_phy_wakeup_reg_access_bm(struct e1000_hw *hw, u16 *phy_reg)$/;"	f
e1000_enable_ulp_lpt_lp	src/ich8lan.c	/^s32 e1000_enable_ulp_lpt_lp(struct e1000_hw *hw, bool to_sx)$/;"	f
e1000_erase_flash_bank_ich8lan	src/ich8lan.c	/^static s32 e1000_erase_flash_bank_ich8lan(struct e1000_hw *hw, u32 bank)$/;"	f	file:
e1000_err_handler	src/netdev.c	/^static const struct pci_error_handlers e1000_err_handler = {$/;"	v	typeref:struct:pci_error_handlers	file:
e1000_es2_info	src/80003es2lan.c	/^const struct e1000_info e1000_es2_info = {$/;"	v	typeref:struct:e1000_info
e1000_ethtool_ops	src/ethtool.c	/^static const struct ethtool_ops e1000_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops	file:
e1000_exit_module	src/netdev.c	/^module_exit(e1000_exit_module);$/;"	v
e1000_exit_module	src/netdev.c	/^static void __exit e1000_exit_module(void)$/;"	f	file:
e1000_fc_default	src/hw.h	/^	e1000_fc_default = 0xFF$/;"	e	enum:e1000_fc_mode
e1000_fc_full	src/hw.h	/^	e1000_fc_full,$/;"	e	enum:e1000_fc_mode
e1000_fc_info	src/hw.h	/^struct e1000_fc_info {$/;"	s
e1000_fc_mode	src/hw.h	/^enum e1000_fc_mode {$/;"	g
e1000_fc_none	src/hw.h	/^	e1000_fc_none = 0,$/;"	e	enum:e1000_fc_mode
e1000_fc_rx_pause	src/hw.h	/^	e1000_fc_rx_pause,$/;"	e	enum:e1000_fc_mode
e1000_fc_tx_pause	src/hw.h	/^	e1000_fc_tx_pause,$/;"	e	enum:e1000_fc_mode
e1000_fix_nvm_checksum_82571	src/82571.c	/^static s32 e1000_fix_nvm_checksum_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_flash_cycle_ich8lan	src/ich8lan.c	/^static s32 e1000_flash_cycle_ich8lan(struct e1000_hw *hw, u32 timeout)$/;"	f	file:
e1000_flash_cycle_init_ich8lan	src/ich8lan.c	/^static s32 e1000_flash_cycle_init_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_free_desc_rings	src/ethtool.c	/^static void e1000_free_desc_rings(struct e1000_adapter *adapter)$/;"	f	file:
e1000_free_irq	src/netdev.c	/^static void e1000_free_irq(struct e1000_adapter *adapter)$/;"	f	file:
e1000_gate_hw_phy_config_ich8lan	src/ich8lan.c	/^static void e1000_gate_hw_phy_config_ich8lan(struct e1000_hw *hw, bool gate)$/;"	f	file:
e1000_get_bus_info_ich8lan	src/ich8lan.c	/^static s32 e1000_get_bus_info_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cable_length_80003es2lan	src/80003es2lan.c	/^static s32 e1000_get_cable_length_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cable_length_82577	src/phy.c	/^s32 e1000_get_cable_length_82577(struct e1000_hw *hw)$/;"	f
e1000_get_cfg_done_80003es2lan	src/80003es2lan.c	/^static s32 e1000_get_cfg_done_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cfg_done_82571	src/82571.c	/^static s32 e1000_get_cfg_done_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cfg_done_ich8lan	src/ich8lan.c	/^static s32 e1000_get_cfg_done_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_get_coalesce	src/ethtool.c	/^static int e1000_get_coalesce(struct net_device *netdev,$/;"	f	file:
e1000_get_drvinfo	src/ethtool.c	/^static void e1000_get_drvinfo(struct net_device *netdev,$/;"	f	file:
e1000_get_eeprom	src/ethtool.c	/^static int e1000_get_eeprom(struct net_device *netdev,$/;"	f	file:
e1000_get_eeprom_len	src/ethtool.c	/^static int e1000_get_eeprom_len(struct net_device *netdev)$/;"	f	file:
e1000_get_ethtool_stats	src/ethtool.c	/^static void e1000_get_ethtool_stats(struct net_device *netdev,$/;"	f	file:
e1000_get_hw_semaphore_82571	src/82571.c	/^static s32 e1000_get_hw_semaphore_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_get_hw_semaphore_82573	src/82571.c	/^static s32 e1000_get_hw_semaphore_82573(struct e1000_hw *hw)$/;"	f	file:
e1000_get_hw_semaphore_82574	src/82571.c	/^static s32 e1000_get_hw_semaphore_82574(struct e1000_hw *hw)$/;"	f	file:
e1000_get_link_up_info_80003es2lan	src/80003es2lan.c	/^static s32 e1000_get_link_up_info_80003es2lan(struct e1000_hw *hw, u16 *speed,$/;"	f	file:
e1000_get_link_up_info_ich8lan	src/ich8lan.c	/^static s32 e1000_get_link_up_info_ich8lan(struct e1000_hw *hw, u16 *speed,$/;"	f	file:
e1000_get_msglevel	src/ethtool.c	/^static u32 e1000_get_msglevel(struct net_device *netdev)$/;"	f	file:
e1000_get_pauseparam	src/ethtool.c	/^static void e1000_get_pauseparam(struct net_device *netdev,$/;"	f	file:
e1000_get_phy_addr_for_bm_page	src/phy.c	/^static u32 e1000_get_phy_addr_for_bm_page(u32 page, u32 reg)$/;"	f	file:
e1000_get_phy_addr_for_hv_page	src/phy.c	/^static u32 e1000_get_phy_addr_for_hv_page(u32 page)$/;"	f	file:
e1000_get_phy_id_82571	src/82571.c	/^static s32 e1000_get_phy_id_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_get_phy_info	src/e1000.h	/^static inline s32 e1000_get_phy_info(struct e1000_hw *hw)$/;"	f
e1000_get_phy_info_82577	src/phy.c	/^s32 e1000_get_phy_info_82577(struct e1000_hw *hw)$/;"	f
e1000_get_phy_info_ife	src/phy.c	/^s32 e1000_get_phy_info_ife(struct e1000_hw *hw)$/;"	f
e1000_get_regs	src/ethtool.c	/^static void e1000_get_regs(struct net_device *netdev,$/;"	f	file:
e1000_get_regs_len	src/ethtool.c	/^static int e1000_get_regs_len(struct net_device __always_unused *netdev)$/;"	f	file:
e1000_get_ringparam	src/ethtool.c	/^static void e1000_get_ringparam(struct net_device *netdev,$/;"	f	file:
e1000_get_rx_csum	src/ethtool.c	/^static u32 e1000_get_rx_csum(struct net_device *netdev)$/;"	f	file:
e1000_get_rxnfc	src/ethtool.c	/^static int e1000_get_rxnfc(struct net_device *netdev,$/;"	f	file:
e1000_get_self_test_count	src/ethtool.c	/^static int e1000_get_self_test_count(struct net_device __always_unused *netdev)$/;"	f	file:
e1000_get_settings	src/ethtool.c	/^static int e1000_get_settings(struct net_device *netdev,$/;"	f	file:
e1000_get_stats	src/netdev.c	/^static struct net_device_stats *e1000_get_stats(struct net_device *netdev)$/;"	f	file:
e1000_get_stats_count	src/ethtool.c	/^static int e1000_get_stats_count(struct net_device __always_unused *netdev)$/;"	f	file:
e1000_get_strings	src/ethtool.c	/^static void e1000_get_strings(struct net_device __always_unused *netdev,$/;"	f	file:
e1000_get_tx_csum	src/ethtool.c	/^static u32 e1000_get_tx_csum(struct net_device *netdev)$/;"	f	file:
e1000_get_variants_80003es2lan	src/80003es2lan.c	/^static s32 e1000_get_variants_80003es2lan(struct e1000_adapter *adapter)$/;"	f	file:
e1000_get_variants_82571	src/82571.c	/^static s32 e1000_get_variants_82571(struct e1000_adapter *adapter)$/;"	f	file:
e1000_get_variants_ich8lan	src/ich8lan.c	/^static s32 e1000_get_variants_ich8lan(struct e1000_adapter *adapter)$/;"	f	file:
e1000_get_wol	src/ethtool.c	/^static void e1000_get_wol(struct net_device *netdev,$/;"	f	file:
e1000_gg82563_cable_length_table	src/80003es2lan.c	/^static const u16 e1000_gg82563_cable_length_table[] = {$/;"	v	file:
e1000_gstrings_stats	src/ethtool.c	/^static const struct e1000_stats e1000_gstrings_stats[] = {$/;"	v	typeref:struct:e1000_stats	file:
e1000_gstrings_test	src/ethtool.c	/^static const char e1000_gstrings_test[][ETH_GSTRING_LEN] = {$/;"	v	file:
e1000_hash_mc_addr	src/mac.c	/^static u32 e1000_hash_mc_addr(struct e1000_hw *hw, u8 *mc_addr)$/;"	f	file:
e1000_host_command_header	src/hw.h	/^struct e1000_host_command_header {$/;"	s
e1000_host_command_info	src/hw.h	/^struct e1000_host_command_info {$/;"	s
e1000_host_mng_command_header	src/hw.h	/^struct e1000_host_mng_command_header {$/;"	s
e1000_host_mng_command_info	src/hw.h	/^struct e1000_host_mng_command_info {$/;"	s
e1000_host_mng_dhcp_cookie	src/hw.h	/^struct e1000_host_mng_dhcp_cookie {$/;"	s
e1000_hv_phy_workarounds_ich8lan	src/ich8lan.c	/^static s32 e1000_hv_phy_workarounds_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_hw	src/hw.h	/^struct e1000_hw {$/;"	s
e1000_hw_stats	src/hw.h	/^struct e1000_hw_stats {$/;"	s
e1000_ich10_info	src/ich8lan.c	/^const struct e1000_info e1000_ich10_info = {$/;"	v	typeref:struct:e1000_info
e1000_ich10lan	src/hw.h	/^	e1000_ich10lan,$/;"	e	enum:e1000_mac_type
e1000_ich8_info	src/ich8lan.c	/^const struct e1000_info e1000_ich8_info = {$/;"	v	typeref:struct:e1000_info
e1000_ich8lan	src/hw.h	/^	e1000_ich8lan,$/;"	e	enum:e1000_mac_type
e1000_ich9_info	src/ich8lan.c	/^const struct e1000_info e1000_ich9_info = {$/;"	v	typeref:struct:e1000_info
e1000_ich9lan	src/hw.h	/^	e1000_ich9lan,$/;"	e	enum:e1000_mac_type
e1000_id_led_init_pchlan	src/ich8lan.c	/^static s32 e1000_id_led_init_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_igp_2_cable_length_table	src/phy.c	/^static const u16 e1000_igp_2_cable_length_table[] = {$/;"	v	file:
e1000_info	src/e1000.h	/^struct e1000_info {$/;"	s
e1000_info_tbl	src/netdev.c	/^static const struct e1000_info *e1000_info_tbl[] = {$/;"	v	typeref:struct:e1000_info	file:
e1000_init_hw_80003es2lan	src/80003es2lan.c	/^static s32 e1000_init_hw_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_hw_82571	src/82571.c	/^static s32 e1000_init_hw_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_init_hw_ich8lan	src/ich8lan.c	/^static s32 e1000_init_hw_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_80003es2lan	src/80003es2lan.c	/^static s32 e1000_init_mac_params_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_82571	src/82571.c	/^static s32 e1000_init_mac_params_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_ich8lan	src/ich8lan.c	/^static s32 e1000_init_mac_params_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_manageability_pt	src/netdev.c	/^static void e1000_init_manageability_pt(struct e1000_adapter *adapter)$/;"	f	file:
e1000_init_module	src/netdev.c	/^module_init(e1000_init_module);$/;"	v
e1000_init_module	src/netdev.c	/^static int __init e1000_init_module(void)$/;"	f	file:
e1000_init_nvm_params_80003es2lan	src/80003es2lan.c	/^static s32 e1000_init_nvm_params_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_nvm_params_82571	src/82571.c	/^static s32 e1000_init_nvm_params_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_init_nvm_params_ich8lan	src/ich8lan.c	/^static s32 e1000_init_nvm_params_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_80003es2lan	src/80003es2lan.c	/^static s32 e1000_init_phy_params_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_82571	src/82571.c	/^static s32 e1000_init_phy_params_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_ich8lan	src/ich8lan.c	/^static s32 e1000_init_phy_params_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_pchlan	src/ich8lan.c	/^static s32 e1000_init_phy_params_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_wakeup	src/netdev.c	/^static int e1000_init_phy_wakeup(struct e1000_adapter *adapter, u32 wufc)$/;"	f	file:
e1000_init_phy_workarounds_pchlan	src/ich8lan.c	/^static s32 e1000_init_phy_workarounds_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_initialize_hw_bits_80003es2lan	src/80003es2lan.c	/^static void e1000_initialize_hw_bits_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_initialize_hw_bits_82571	src/82571.c	/^static void e1000_initialize_hw_bits_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_initialize_hw_bits_ich8lan	src/ich8lan.c	/^static void e1000_initialize_hw_bits_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_integrated_phy_loopback	src/ethtool.c	/^static int e1000_integrated_phy_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_intr	src/netdev.c	/^static irqreturn_t e1000_intr(int __always_unused irq, void *data)$/;"	f	file:
e1000_intr_msi	src/netdev.c	/^static irqreturn_t e1000_intr_msi(int __always_unused irq, void *data)$/;"	f	file:
e1000_intr_msi_test	src/netdev.c	/^static irqreturn_t e1000_intr_msi_test(int __always_unused irq, void *data)$/;"	f	file:
e1000_intr_msix	src/netdev.c	/^static irqreturn_t e1000_intr_msix(int __always_unused irq, void *data)$/;"	f	file:
e1000_intr_msix_rx	src/netdev.c	/^static irqreturn_t e1000_intr_msix_rx(int __always_unused irq, void *data)$/;"	f	file:
e1000_intr_msix_tx	src/netdev.c	/^static irqreturn_t e1000_intr_msix_tx(int __always_unused irq, void *data)$/;"	f	file:
e1000_intr_test	src/ethtool.c	/^static int e1000_intr_test(struct e1000_adapter *adapter, u64 *data)$/;"	f	file:
e1000_io_error_detected	src/netdev.c	/^static pci_ers_result_t e1000_io_error_detected(struct pci_dev *pdev,$/;"	f	file:
e1000_io_resume	src/netdev.c	/^static void e1000_io_resume(struct pci_dev *pdev)$/;"	f	file:
e1000_io_slot_reset	src/netdev.c	/^static pci_ers_result_t e1000_io_slot_reset(struct pci_dev *pdev)$/;"	f	file:
e1000_ioctl	src/netdev.c	/^static int e1000_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)$/;"	f	file:
e1000_irq_disable	src/netdev.c	/^static void e1000_irq_disable(struct e1000_adapter *adapter)$/;"	f	file:
e1000_irq_enable	src/netdev.c	/^static void e1000_irq_enable(struct e1000_adapter *adapter)$/;"	f	file:
e1000_k1_gig_workaround_hv	src/ich8lan.c	/^static s32 e1000_k1_gig_workaround_hv(struct e1000_hw *hw, bool link)$/;"	f	file:
e1000_k1_workaround_lpt_lp	src/ich8lan.c	/^static s32 e1000_k1_workaround_lpt_lp(struct e1000_hw *hw, bool link)$/;"	f	file:
e1000_k1_workaround_lv	src/ich8lan.c	/^static s32 e1000_k1_workaround_lv(struct e1000_hw *hw)$/;"	f	file:
e1000_kmrn_lock_loss_workaround_ich8lan	src/ich8lan.c	/^static s32 e1000_kmrn_lock_loss_workaround_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_lan_init_done_ich8lan	src/ich8lan.c	/^static void e1000_lan_init_done_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_led_blink_callback	src/ethtool.c	/^static void e1000_led_blink_callback(unsigned long data)$/;"	f	file:
e1000_led_off_ich8lan	src/ich8lan.c	/^static s32 e1000_led_off_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_led_off_pchlan	src/ich8lan.c	/^static s32 e1000_led_off_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_led_on_82574	src/82571.c	/^static s32 e1000_led_on_82574(struct e1000_hw *hw)$/;"	f	file:
e1000_led_on_ich8lan	src/ich8lan.c	/^static s32 e1000_led_on_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_led_on_pchlan	src/ich8lan.c	/^static s32 e1000_led_on_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_link_stall_workaround_hv	src/phy.c	/^s32 e1000_link_stall_workaround_hv(struct e1000_hw *hw)$/;"	f
e1000_link_test	src/ethtool.c	/^static int e1000_link_test(struct e1000_adapter *adapter, u64 *data)$/;"	f	file:
e1000_loopback_cleanup	src/ethtool.c	/^static void e1000_loopback_cleanup(struct e1000_adapter *adapter)$/;"	f	file:
e1000_loopback_test	src/ethtool.c	/^static int e1000_loopback_test(struct e1000_adapter *adapter, u64 *data)$/;"	f	file:
e1000_lower_eec_clk	src/nvm.c	/^static void e1000_lower_eec_clk(struct e1000_hw *hw, u32 *eecd)$/;"	f	file:
e1000_lv_jumbo_workaround_ich8lan	src/ich8lan.c	/^s32 e1000_lv_jumbo_workaround_ich8lan(struct e1000_hw *hw, bool enable)$/;"	f
e1000_lv_phy_workarounds_ich8lan	src/ich8lan.c	/^static s32 e1000_lv_phy_workarounds_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_m88_cable_length_table	src/phy.c	/^static const u16 e1000_m88_cable_length_table[] = {$/;"	v	file:
e1000_mac_info	src/hw.h	/^struct e1000_mac_info {$/;"	s
e1000_mac_operations	src/hw.h	/^struct e1000_mac_operations {$/;"	s
e1000_mac_type	src/hw.h	/^enum e1000_mac_type {$/;"	g
e1000_maybe_stop_tx	src/netdev.c	/^static int e1000_maybe_stop_tx(struct e1000_ring *tx_ring, int size)$/;"	f	file:
e1000_media_type	src/hw.h	/^enum e1000_media_type {$/;"	g
e1000_media_type_copper	src/hw.h	/^	e1000_media_type_copper = 1,$/;"	e	enum:e1000_media_type
e1000_media_type_fiber	src/hw.h	/^	e1000_media_type_fiber = 2,$/;"	e	enum:e1000_media_type
e1000_media_type_internal_serdes	src/hw.h	/^	e1000_media_type_internal_serdes = 3,$/;"	e	enum:e1000_media_type
e1000_media_type_unknown	src/hw.h	/^	e1000_media_type_unknown = 0,$/;"	e	enum:e1000_media_type
e1000_mii_ioctl	src/netdev.c	/^static int e1000_mii_ioctl(struct net_device *netdev, struct ifreq *ifr,$/;"	f	file:
e1000_mng_enable_host_if	src/manage.c	/^static s32 e1000_mng_enable_host_if(struct e1000_hw *hw)$/;"	f	file:
e1000_mng_host_if_write	src/manage.c	/^static s32 e1000_mng_host_if_write(struct e1000_hw *hw, u8 *buffer,$/;"	f	file:
e1000_mng_mode	src/manage.h	/^enum e1000_mng_mode {$/;"	g
e1000_mng_mode_asf	src/manage.h	/^	e1000_mng_mode_asf,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_host_if_only	src/manage.h	/^	e1000_mng_mode_host_if_only$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_ipmi	src/manage.h	/^	e1000_mng_mode_ipmi,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_none	src/manage.h	/^	e1000_mng_mode_none = 0,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_pt	src/manage.h	/^	e1000_mng_mode_pt,$/;"	e	enum:e1000_mng_mode
e1000_mng_write_cmd_header	src/manage.c	/^static s32 e1000_mng_write_cmd_header(struct e1000_hw *hw,$/;"	f	file:
e1000_ms_auto	src/hw.h	/^	e1000_ms_auto$/;"	e	enum:e1000_ms_type
e1000_ms_force_master	src/hw.h	/^	e1000_ms_force_master,$/;"	e	enum:e1000_ms_type
e1000_ms_force_slave	src/hw.h	/^	e1000_ms_force_slave,$/;"	e	enum:e1000_ms_type
e1000_ms_hw_default	src/hw.h	/^	e1000_ms_hw_default = 0,$/;"	e	enum:e1000_ms_type
e1000_ms_type	src/hw.h	/^enum e1000_ms_type {$/;"	g
e1000_msix_other	src/netdev.c	/^static irqreturn_t e1000_msix_other(int __always_unused irq, void *data)$/;"	f	file:
e1000_netpoll	src/netdev.c	/^static void e1000_netpoll(struct net_device *netdev)$/;"	f	file:
e1000_notifier_reboot	src/netdev.c	/^static struct notifier_block e1000_notifier_reboot = {$/;"	v	typeref:struct:notifier_block	file:
e1000_notify_reboot	src/netdev.c	/^static int e1000_notify_reboot(struct notifier_block *nb, unsigned long event,$/;"	f	file:
e1000_num_media_types	src/hw.h	/^	e1000_num_media_types$/;"	e	enum:e1000_media_type
e1000_nvm_eeprom_spi	src/hw.h	/^	e1000_nvm_eeprom_spi,$/;"	e	enum:e1000_nvm_type
e1000_nvm_flash_hw	src/hw.h	/^	e1000_nvm_flash_hw,$/;"	e	enum:e1000_nvm_type
e1000_nvm_flash_sw	src/hw.h	/^	e1000_nvm_flash_sw$/;"	e	enum:e1000_nvm_type
e1000_nvm_info	src/hw.h	/^struct e1000_nvm_info {$/;"	s
e1000_nvm_none	src/hw.h	/^	e1000_nvm_none,$/;"	e	enum:e1000_nvm_type
e1000_nvm_operations	src/hw.h	/^struct e1000_nvm_operations {$/;"	s
e1000_nvm_override	src/hw.h	/^enum e1000_nvm_override {$/;"	g
e1000_nvm_override_none	src/hw.h	/^	e1000_nvm_override_none = 0,$/;"	e	enum:e1000_nvm_override
e1000_nvm_override_spi_large	src/hw.h	/^	e1000_nvm_override_spi_large$/;"	e	enum:e1000_nvm_override
e1000_nvm_override_spi_small	src/hw.h	/^	e1000_nvm_override_spi_small,$/;"	e	enum:e1000_nvm_override
e1000_nvm_type	src/hw.h	/^enum e1000_nvm_type {$/;"	g
e1000_nvm_unknown	src/hw.h	/^	e1000_nvm_unknown = 0,$/;"	e	enum:e1000_nvm_type
e1000_nway_reset	src/ethtool.c	/^static int e1000_nway_reset(struct net_device *netdev)$/;"	f	file:
e1000_oem_bits_config_ich8lan	src/ich8lan.c	/^static s32 e1000_oem_bits_config_ich8lan(struct e1000_hw *hw, bool d0_state)$/;"	f	file:
e1000_open	src/netdev.c	/^static int e1000_open(struct net_device *netdev)$/;"	f	file:
e1000_opt_list	src/param.c	/^			struct e1000_opt_list {$/;"	s	struct:e1000_option::__anon4::__anon6	file:
e1000_option	src/param.c	/^struct e1000_option {$/;"	s	file:
e1000_pch2_info	src/ich8lan.c	/^const struct e1000_info e1000_pch2_info = {$/;"	v	typeref:struct:e1000_info
e1000_pch2lan	src/hw.h	/^	e1000_pch2lan,$/;"	e	enum:e1000_mac_type
e1000_pch_info	src/ich8lan.c	/^const struct e1000_info e1000_pch_info = {$/;"	v	typeref:struct:e1000_info
e1000_pch_lpt	src/hw.h	/^	e1000_pch_lpt,$/;"	e	enum:e1000_mac_type
e1000_pch_lpt_info	src/ich8lan.c	/^const struct e1000_info e1000_pch_lpt_info = {$/;"	v	typeref:struct:e1000_info
e1000_pchlan	src/hw.h	/^	e1000_pchlan,$/;"	e	enum:e1000_mac_type
e1000_pci_tbl	src/netdev.c	/^static const  struct pci_device_id e1000_pci_tbl[] = {$/;"	v	typeref:struct:pci_device_id	file:
e1000_phy_82577	src/hw.h	/^	e1000_phy_82577,$/;"	e	enum:e1000_phy_type
e1000_phy_82578	src/hw.h	/^	e1000_phy_82578,$/;"	e	enum:e1000_phy_type
e1000_phy_82579	src/hw.h	/^	e1000_phy_82579,$/;"	e	enum:e1000_phy_type
e1000_phy_bm	src/hw.h	/^	e1000_phy_bm,$/;"	e	enum:e1000_phy_type
e1000_phy_disable_receiver	src/ethtool.c	/^static void e1000_phy_disable_receiver(struct e1000_adapter *adapter)$/;"	f	file:
e1000_phy_force_speed_duplex_80003es2lan	src/80003es2lan.c	/^static s32 e1000_phy_force_speed_duplex_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_force_speed_duplex_82577	src/phy.c	/^s32 e1000_phy_force_speed_duplex_82577(struct e1000_hw *hw)$/;"	f
e1000_phy_force_speed_duplex_ife	src/phy.c	/^s32 e1000_phy_force_speed_duplex_ife(struct e1000_hw *hw)$/;"	f
e1000_phy_gg82563	src/hw.h	/^	e1000_phy_gg82563,$/;"	e	enum:e1000_phy_type
e1000_phy_hw_reset	src/e1000.h	/^static inline s32 e1000_phy_hw_reset(struct e1000_hw *hw)$/;"	f
e1000_phy_hw_reset_ich8lan	src/ich8lan.c	/^static s32 e1000_phy_hw_reset_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_i217	src/hw.h	/^	e1000_phy_i217,$/;"	e	enum:e1000_phy_type
e1000_phy_ife	src/hw.h	/^	e1000_phy_ife,$/;"	e	enum:e1000_phy_type
e1000_phy_igp	src/hw.h	/^	e1000_phy_igp,$/;"	e	enum:e1000_phy_type
e1000_phy_igp_2	src/hw.h	/^	e1000_phy_igp_2,$/;"	e	enum:e1000_phy_type
e1000_phy_igp_3	src/hw.h	/^	e1000_phy_igp_3,$/;"	e	enum:e1000_phy_type
e1000_phy_info	src/hw.h	/^struct e1000_phy_info {$/;"	s
e1000_phy_is_accessible_pchlan	src/ich8lan.c	/^static bool e1000_phy_is_accessible_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_m88	src/hw.h	/^	e1000_phy_m88,$/;"	e	enum:e1000_phy_type
e1000_phy_none	src/hw.h	/^	e1000_phy_none,$/;"	e	enum:e1000_phy_type
e1000_phy_operations	src/hw.h	/^struct e1000_phy_operations {$/;"	s
e1000_phy_read_status	src/netdev.c	/^static void e1000_phy_read_status(struct e1000_adapter *adapter)$/;"	f	file:
e1000_phy_regs	src/e1000.h	/^struct e1000_phy_regs {$/;"	s
e1000_phy_setup_autoneg	src/phy.c	/^static s32 e1000_phy_setup_autoneg(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_stats	src/hw.h	/^struct e1000_phy_stats {$/;"	s
e1000_phy_type	src/hw.h	/^enum e1000_phy_type {$/;"	g
e1000_phy_unknown	src/hw.h	/^	e1000_phy_unknown = 0,$/;"	e	enum:e1000_phy_type
e1000_phys_id	src/ethtool.c	/^static int e1000_phys_id(struct net_device *netdev, u32 data)$/;"	f	file:
e1000_platform_pm_pch_lpt	src/ich8lan.c	/^static s32 e1000_platform_pm_pch_lpt(struct e1000_hw *hw, bool link)$/;"	f	file:
e1000_pm_ops	src/netdev.c	/^static const struct dev_pm_ops e1000_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
e1000_poll_fiber_serdes_link_generic	src/mac.c	/^static s32 e1000_poll_fiber_serdes_link_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_post_phy_reset_ich8lan	src/ich8lan.c	/^static s32 e1000_post_phy_reset_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_power_down_phy	src/netdev.c	/^static void e1000_power_down_phy(struct e1000_adapter *adapter)$/;"	f	file:
e1000_power_down_phy_copper	src/phy.c	/^void e1000_power_down_phy_copper(struct e1000_hw *hw)$/;"	f
e1000_power_down_phy_copper_80003es2lan	src/80003es2lan.c	/^static void e1000_power_down_phy_copper_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_power_down_phy_copper_82571	src/82571.c	/^static void e1000_power_down_phy_copper_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_power_down_phy_copper_ich8lan	src/ich8lan.c	/^static void e1000_power_down_phy_copper_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_power_up_phy_copper	src/phy.c	/^void e1000_power_up_phy_copper(struct e1000_hw *hw)$/;"	f
e1000_print_device_info	src/netdev.c	/^static void e1000_print_device_info(struct e1000_adapter *adapter)$/;"	f	file:
e1000_print_hw_hang	src/netdev.c	/^static void e1000_print_hw_hang(struct work_struct *work)$/;"	f	file:
e1000_print_link_info	src/netdev.c	/^static void e1000_print_link_info(struct e1000_adapter *adapter)$/;"	f	file:
e1000_probe	src/netdev.c	/^static int __devinit e1000_probe(struct pci_dev *pdev,$/;"	f	file:
e1000_ps_page	src/e1000.h	/^struct e1000_ps_page {$/;"	s
e1000_put_hw_semaphore_82571	src/82571.c	/^static void e1000_put_hw_semaphore_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_put_hw_semaphore_82573	src/82571.c	/^static void e1000_put_hw_semaphore_82573(struct e1000_hw *hw)$/;"	f	file:
e1000_put_hw_semaphore_82574	src/82571.c	/^static void e1000_put_hw_semaphore_82574(struct e1000_hw *hw)$/;"	f	file:
e1000_put_txbuf	src/netdev.c	/^static void e1000_put_txbuf(struct e1000_ring *tx_ring,$/;"	f	file:
e1000_raise_eec_clk	src/nvm.c	/^static void e1000_raise_eec_clk(struct e1000_hw *hw, u32 *eecd)$/;"	f	file:
e1000_rar_get_count_pch_lpt	src/ich8lan.c	/^static u32 e1000_rar_get_count_pch_lpt(struct e1000_hw *hw)$/;"	f	file:
e1000_rar_set_pch2lan	src/ich8lan.c	/^static int e1000_rar_set_pch2lan(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f	file:
e1000_rar_set_pch_lpt	src/ich8lan.c	/^static int e1000_rar_set_pch_lpt(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f	file:
e1000_read_emi_reg_locked	src/ich8lan.c	/^s32 e1000_read_emi_reg_locked(struct e1000_hw *hw, u16 addr, u16 *data)$/;"	f
e1000_read_flash_byte_ich8lan	src/ich8lan.c	/^static s32 e1000_read_flash_byte_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_flash_data_ich8lan	src/ich8lan.c	/^static s32 e1000_read_flash_data_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_flash_word_ich8lan	src/ich8lan.c	/^static s32 e1000_read_flash_word_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_kmrn_reg_80003es2lan	src/80003es2lan.c	/^static s32 e1000_read_kmrn_reg_80003es2lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_mac_addr_80003es2lan	src/80003es2lan.c	/^static s32 e1000_read_mac_addr_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_read_mac_addr_82571	src/82571.c	/^static s32 e1000_read_mac_addr_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_read_mac_addr_generic	src/nvm.c	/^s32 e1000_read_mac_addr_generic(struct e1000_hw *hw)$/;"	f
e1000_read_nvm	src/e1000.h	/^static inline s32 e1000_read_nvm(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f
e1000_read_nvm_ich8lan	src/ich8lan.c	/^static s32 e1000_read_nvm_ich8lan(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	file:
e1000_read_pba_string_generic	src/nvm.c	/^s32 e1000_read_pba_string_generic(struct e1000_hw *hw, u8 *pba_num,$/;"	f
e1000_read_phy_reg_gg82563_80003es2lan	src/80003es2lan.c	/^static s32 e1000_read_phy_reg_gg82563_80003es2lan(struct e1000_hw *hw,$/;"	f	file:
e1000_read_phy_reg_hv	src/phy.c	/^s32 e1000_read_phy_reg_hv(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_hv_locked	src/phy.c	/^s32 e1000_read_phy_reg_hv_locked(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_page_hv	src/phy.c	/^s32 e1000_read_phy_reg_page_hv(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_ready_nvm_eeprom	src/nvm.c	/^static s32 e1000_ready_nvm_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_receive_skb	src/netdev.c	/^static void e1000_receive_skb(struct e1000_adapter *adapter,$/;"	f	file:
e1000_reg_info	src/netdev.c	/^struct e1000_reg_info {$/;"	s	file:
e1000_reg_info_tbl	src/netdev.c	/^static const struct e1000_reg_info e1000_reg_info_tbl[] = {$/;"	v	typeref:struct:e1000_reg_info	file:
e1000_reg_test	src/ethtool.c	/^static int e1000_reg_test(struct e1000_adapter *adapter, u64 *data)$/;"	f	file:
e1000_regdump	src/netdev.c	/^static void e1000_regdump(struct e1000_hw *hw, struct e1000_reg_info *reginfo)$/;"	f	file:
e1000_release_mac_csr_80003es2lan	src/80003es2lan.c	/^static void e1000_release_mac_csr_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_release_nvm_80003es2lan	src/80003es2lan.c	/^static void e1000_release_nvm_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_release_nvm_82571	src/82571.c	/^static void e1000_release_nvm_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_release_nvm_ich8lan	src/ich8lan.c	/^static void e1000_release_nvm_ich8lan(struct e1000_hw __always_unused *hw)$/;"	f	file:
e1000_release_phy_80003es2lan	src/80003es2lan.c	/^static void e1000_release_phy_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_release_swflag_ich8lan	src/ich8lan.c	/^static void e1000_release_swflag_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_release_swfw_sync_80003es2lan	src/80003es2lan.c	/^static void e1000_release_swfw_sync_80003es2lan(struct e1000_hw *hw, u16 mask)$/;"	f	file:
e1000_remove	src/netdev.c	/^static void __devexit e1000_remove(struct pci_dev *pdev)$/;"	f	file:
e1000_request_irq	src/netdev.c	/^static int e1000_request_irq(struct e1000_adapter *adapter)$/;"	f	file:
e1000_request_msix	src/netdev.c	/^static int e1000_request_msix(struct e1000_adapter *adapter)$/;"	f	file:
e1000_reset_hw_80003es2lan	src/80003es2lan.c	/^static s32 e1000_reset_hw_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_82571	src/82571.c	/^static s32 e1000_reset_hw_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_ich8lan	src/ich8lan.c	/^static s32 e1000_reset_hw_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_task	src/netdev.c	/^static void e1000_reset_task(struct work_struct *work)$/;"	f	file:
e1000_restore_vlan	src/netdev.c	/^static void e1000_restore_vlan(struct e1000_adapter *adapter)$/;"	f	file:
e1000_resume_workarounds_pchlan	src/ich8lan.c	/^void e1000_resume_workarounds_pchlan(struct e1000_hw *hw)$/;"	f
e1000_retry_write_flash_byte_ich8lan	src/ich8lan.c	/^static s32 e1000_retry_write_flash_byte_ich8lan(struct e1000_hw *hw,$/;"	f	file:
e1000_rev_polarity	src/hw.h	/^enum e1000_rev_polarity {$/;"	g
e1000_rev_polarity_normal	src/hw.h	/^	e1000_rev_polarity_normal = 0,$/;"	e	enum:e1000_rev_polarity
e1000_rev_polarity_reversed	src/hw.h	/^	e1000_rev_polarity_reversed,$/;"	e	enum:e1000_rev_polarity
e1000_rev_polarity_undefined	src/hw.h	/^	e1000_rev_polarity_undefined = 0xFF$/;"	e	enum:e1000_rev_polarity
e1000_ring	src/e1000.h	/^struct e1000_ring {$/;"	s
e1000_run_loopback_test	src/ethtool.c	/^static int e1000_run_loopback_test(struct e1000_adapter *adapter)$/;"	f	file:
e1000_rx_checksum	src/netdev.c	/^static void e1000_rx_checksum(struct e1000_adapter *adapter, u32 status_err,$/;"	f	file:
e1000_rx_desc_extended	src/hw.h	/^union e1000_rx_desc_extended {$/;"	u
e1000_rx_desc_packet_split	src/hw.h	/^union e1000_rx_desc_packet_split {$/;"	u
e1000_rx_hash	src/netdev.c	/^static inline void e1000_rx_hash(struct net_device *netdev, __le32 rss,$/;"	f	file:
e1000_serdes_link_autoneg_complete	src/hw.h	/^	e1000_serdes_link_autoneg_complete,$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_autoneg_progress	src/hw.h	/^	e1000_serdes_link_autoneg_progress,$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_down	src/hw.h	/^	e1000_serdes_link_down = 0,$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_forced_up	src/hw.h	/^	e1000_serdes_link_forced_up$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_state	src/hw.h	/^enum e1000_serdes_link_state {$/;"	g
e1000_set_82571_fiber_loopback	src/ethtool.c	/^static int e1000_set_82571_fiber_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_set_coalesce	src/ethtool.c	/^static int e1000_set_coalesce(struct net_device *netdev,$/;"	f	file:
e1000_set_d0_lplu_state_82571	src/82571.c	/^static s32 e1000_set_d0_lplu_state_82571(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d0_lplu_state_82574	src/82571.c	/^static s32 e1000_set_d0_lplu_state_82574(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d0_lplu_state_ich8lan	src/ich8lan.c	/^static s32 e1000_set_d0_lplu_state_ich8lan(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d3_lplu_state_82574	src/82571.c	/^static s32 e1000_set_d3_lplu_state_82574(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d3_lplu_state_ich8lan	src/ich8lan.c	/^static s32 e1000_set_d3_lplu_state_ich8lan(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_default_fc_generic	src/mac.c	/^static s32 e1000_set_default_fc_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_set_eee_pchlan	src/ich8lan.c	/^s32 e1000_set_eee_pchlan(struct e1000_hw *hw)$/;"	f
e1000_set_eeprom	src/ethtool.c	/^static int e1000_set_eeprom(struct net_device *netdev,$/;"	f	file:
e1000_set_es2lan_mac_loopback	src/ethtool.c	/^static int e1000_set_es2lan_mac_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_set_features	src/netdev.c	/^static int e1000_set_features(struct net_device *netdev,$/;"	f	file:
e1000_set_itr	src/netdev.c	/^static void e1000_set_itr(struct e1000_adapter *adapter)$/;"	f	file:
e1000_set_lan_id_multi_port_pcie	src/mac.c	/^void e1000_set_lan_id_multi_port_pcie(struct e1000_hw *hw)$/;"	f
e1000_set_lan_id_single_port	src/mac.c	/^void e1000_set_lan_id_single_port(struct e1000_hw *hw)$/;"	f
e1000_set_lplu_state_pchlan	src/ich8lan.c	/^static s32 e1000_set_lplu_state_pchlan(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_mac	src/netdev.c	/^static int e1000_set_mac(struct net_device *netdev, void *p)$/;"	f	file:
e1000_set_master_slave_mode	src/phy.c	/^static s32 e1000_set_master_slave_mode(struct e1000_hw *hw)$/;"	f	file:
e1000_set_mdio_slow_mode_hv	src/ich8lan.c	/^static s32 e1000_set_mdio_slow_mode_hv(struct e1000_hw *hw)$/;"	f	file:
e1000_set_msglevel	src/ethtool.c	/^static void e1000_set_msglevel(struct net_device *netdev, u32 data)$/;"	f	file:
e1000_set_page_igp	src/phy.c	/^s32 e1000_set_page_igp(struct e1000_hw *hw, u16 page)$/;"	f
e1000_set_pauseparam	src/ethtool.c	/^static int e1000_set_pauseparam(struct net_device *netdev,$/;"	f	file:
e1000_set_phys_id	src/ethtool.c	/^static int e1000_set_phys_id(struct net_device *netdev,$/;"	f	file:
e1000_set_ringparam	src/ethtool.c	/^static int e1000_set_ringparam(struct net_device *netdev,$/;"	f	file:
e1000_set_rx_csum	src/ethtool.c	/^static int e1000_set_rx_csum(struct net_device *netdev, u32 data)$/;"	f	file:
e1000_set_settings	src/ethtool.c	/^static int e1000_set_settings(struct net_device *netdev,$/;"	f	file:
e1000_set_spd_dplx	src/ethtool.c	/^static int e1000_set_spd_dplx(struct e1000_adapter *adapter, u32 spd, u8 dplx)$/;"	f	file:
e1000_set_tso	src/ethtool.c	/^static int e1000_set_tso(struct net_device *netdev, u32 data)$/;"	f	file:
e1000_set_tx_csum	src/ethtool.c	/^static int e1000_set_tx_csum(struct net_device *netdev, u32 data)$/;"	f	file:
e1000_set_wol	src/ethtool.c	/^static int e1000_set_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)$/;"	f	file:
e1000_setup_copper_link_80003es2lan	src/80003es2lan.c	/^static s32 e1000_setup_copper_link_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_82571	src/82571.c	/^static s32 e1000_setup_copper_link_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_ich8lan	src/ich8lan.c	/^static s32 e1000_setup_copper_link_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_pch_lpt	src/ich8lan.c	/^static s32 e1000_setup_copper_link_pch_lpt(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_desc_rings	src/ethtool.c	/^static int e1000_setup_desc_rings(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_fiber_serdes_link_82571	src/82571.c	/^static s32 e1000_setup_fiber_serdes_link_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_led_pchlan	src/ich8lan.c	/^static s32 e1000_setup_led_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_link_82571	src/82571.c	/^static s32 e1000_setup_link_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_link_ich8lan	src/ich8lan.c	/^static s32 e1000_setup_link_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_loopback_test	src/ethtool.c	/^static int e1000_setup_loopback_test(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_rctl	src/netdev.c	/^static void e1000_setup_rctl(struct e1000_adapter *adapter)$/;"	f	file:
e1000_shadow_ram	src/hw.h	/^struct e1000_shadow_ram {$/;"	s
e1000_shift_in_eec_bits	src/nvm.c	/^static u16 e1000_shift_in_eec_bits(struct e1000_hw *hw, u16 count)$/;"	f	file:
e1000_shift_out_eec_bits	src/nvm.c	/^static void e1000_shift_out_eec_bits(struct e1000_hw *hw, u16 data, u16 count)$/;"	f	file:
e1000_shutdown	src/netdev.c	/^static void e1000_shutdown(struct pci_dev *pdev)$/;"	f	file:
e1000_smart_speed	src/hw.h	/^enum e1000_smart_speed {$/;"	g
e1000_smart_speed_default	src/hw.h	/^	e1000_smart_speed_default = 0,$/;"	e	enum:e1000_smart_speed
e1000_smart_speed_off	src/hw.h	/^	e1000_smart_speed_off$/;"	e	enum:e1000_smart_speed
e1000_smart_speed_on	src/hw.h	/^	e1000_smart_speed_on,$/;"	e	enum:e1000_smart_speed
e1000_standby_nvm	src/nvm.c	/^static void e1000_standby_nvm(struct e1000_hw *hw)$/;"	f	file:
e1000_state_t	src/e1000.h	/^enum e1000_state_t {$/;"	g
e1000_stats	src/ethtool.c	/^struct e1000_stats {$/;"	s	file:
e1000_stop_nvm	src/nvm.c	/^static void e1000_stop_nvm(struct e1000_hw *hw)$/;"	f	file:
e1000_suspend_workarounds_ich8lan	src/ich8lan.c	/^void e1000_suspend_workarounds_ich8lan(struct e1000_hw *hw)$/;"	f
e1000_sw_init	src/netdev.c	/^static int __devinit e1000_sw_init(struct e1000_adapter *adapter)$/;"	f	file:
e1000_sw_lcd_config_ich8lan	src/ich8lan.c	/^static s32 e1000_sw_lcd_config_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_test_intr	src/ethtool.c	/^static irqreturn_t e1000_test_intr(int __always_unused irq, void *data)$/;"	f	file:
e1000_test_msi	src/netdev.c	/^static int e1000_test_msi(struct e1000_adapter *adapter)$/;"	f	file:
e1000_test_msi_interrupt	src/netdev.c	/^static int e1000_test_msi_interrupt(struct e1000_adapter *adapter)$/;"	f	file:
e1000_toggle_lanphypc_pch_lpt	src/ich8lan.c	/^static void e1000_toggle_lanphypc_pch_lpt(struct e1000_hw *hw)$/;"	f	file:
e1000_transfer_dhcp_info	src/netdev.c	/^static int e1000_transfer_dhcp_info(struct e1000_adapter *adapter,$/;"	f	file:
e1000_tso	src/netdev.c	/^static int e1000_tso(struct e1000_ring *tx_ring, struct sk_buff *skb)$/;"	f	file:
e1000_tx_csum	src/netdev.c	/^static bool e1000_tx_csum(struct e1000_ring *tx_ring, struct sk_buff *skb)$/;"	f	file:
e1000_tx_desc	src/hw.h	/^struct e1000_tx_desc {$/;"	s
e1000_tx_map	src/netdev.c	/^static int e1000_tx_map(struct e1000_ring *tx_ring, struct sk_buff *skb,$/;"	f	file:
e1000_tx_queue	src/netdev.c	/^static void e1000_tx_queue(struct e1000_ring *tx_ring, int tx_flags, int count)$/;"	f	file:
e1000_tx_timeout	src/netdev.c	/^static void e1000_tx_timeout(struct net_device *netdev)$/;"	f	file:
e1000_ulp_state	src/hw.h	/^enum e1000_ulp_state {$/;"	g
e1000_ulp_state_off	src/hw.h	/^	e1000_ulp_state_off,$/;"	e	enum:e1000_ulp_state
e1000_ulp_state_on	src/hw.h	/^	e1000_ulp_state_on,$/;"	e	enum:e1000_ulp_state
e1000_ulp_state_unknown	src/hw.h	/^	e1000_ulp_state_unknown,$/;"	e	enum:e1000_ulp_state
e1000_update_itr	src/netdev.c	/^static unsigned int e1000_update_itr(u16 itr_setting, int packets, int bytes)$/;"	f	file:
e1000_update_mng_vlan	src/netdev.c	/^static void e1000_update_mng_vlan(struct e1000_adapter *adapter)$/;"	f	file:
e1000_update_nvm_checksum_82571	src/82571.c	/^static s32 e1000_update_nvm_checksum_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_update_nvm_checksum_ich8lan	src/ich8lan.c	/^static s32 e1000_update_nvm_checksum_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_update_phy_info	src/netdev.c	/^static void e1000_update_phy_info(unsigned long data)$/;"	f	file:
e1000_valid_led_default_82571	src/82571.c	/^static s32 e1000_valid_led_default_82571(struct e1000_hw *hw, u16 *data)$/;"	f	file:
e1000_valid_led_default_ich8lan	src/ich8lan.c	/^static s32 e1000_valid_led_default_ich8lan(struct e1000_hw *hw, u16 *data)$/;"	f	file:
e1000_valid_nvm_bank_detect_ich8lan	src/ich8lan.c	/^static s32 e1000_valid_nvm_bank_detect_ich8lan(struct e1000_hw *hw, u32 *bank)$/;"	f	file:
e1000_validate_nvm_checksum	src/e1000.h	/^static inline s32 e1000_validate_nvm_checksum(struct e1000_hw *hw)$/;"	f
e1000_validate_nvm_checksum_82571	src/82571.c	/^static s32 e1000_validate_nvm_checksum_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_validate_nvm_checksum_ich8lan	src/ich8lan.c	/^static s32 e1000_validate_nvm_checksum_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_validate_option	src/param.c	/^static int __devinit e1000_validate_option(unsigned int *value,$/;"	f	file:
e1000_vlan_rx_add_vid	src/netdev.c	/^static int e1000_vlan_rx_add_vid(struct net_device *netdev,$/;"	f	file:
e1000_vlan_rx_kill_vid	src/netdev.c	/^static int e1000_vlan_rx_kill_vid(struct net_device *netdev,$/;"	f	file:
e1000_vlan_rx_register	src/netdev.c	/^static void e1000_vlan_rx_register(struct net_device *netdev,$/;"	f	file:
e1000_wait_autoneg	src/phy.c	/^static s32 e1000_wait_autoneg(struct e1000_hw *hw)$/;"	f	file:
e1000_watchdog	src/netdev.c	/^static void e1000_watchdog(unsigned long data)$/;"	f	file:
e1000_watchdog_task	src/netdev.c	/^static void e1000_watchdog_task(struct work_struct *work)$/;"	f	file:
e1000_write_emi_reg_locked	src/ich8lan.c	/^s32 e1000_write_emi_reg_locked(struct e1000_hw *hw, u16 addr, u16 data)$/;"	f
e1000_write_flash_byte_ich8lan	src/ich8lan.c	/^static s32 e1000_write_flash_byte_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_write_flash_data_ich8lan	src/ich8lan.c	/^static s32 e1000_write_flash_data_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_write_kmrn_reg_80003es2lan	src/80003es2lan.c	/^static s32 e1000_write_kmrn_reg_80003es2lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_write_nvm	src/e1000.h	/^static inline s32 e1000_write_nvm(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f
e1000_write_nvm_80003es2lan	src/80003es2lan.c	/^static s32 e1000_write_nvm_80003es2lan(struct e1000_hw *hw, u16 offset,$/;"	f	file:
e1000_write_nvm_82571	src/82571.c	/^static s32 e1000_write_nvm_82571(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	file:
e1000_write_nvm_eewr_82571	src/82571.c	/^static s32 e1000_write_nvm_eewr_82571(struct e1000_hw *hw, u16 offset,$/;"	f	file:
e1000_write_nvm_ich8lan	src/ich8lan.c	/^static s32 e1000_write_nvm_ich8lan(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	file:
e1000_write_phy_reg_gg82563_80003es2lan	src/80003es2lan.c	/^static s32 e1000_write_phy_reg_gg82563_80003es2lan(struct e1000_hw *hw,$/;"	f	file:
e1000_write_phy_reg_hv	src/phy.c	/^s32 e1000_write_phy_reg_hv(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_hv_locked	src/phy.c	/^s32 e1000_write_phy_reg_hv_locked(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_page_hv	src/phy.c	/^s32 e1000_write_phy_reg_page_hv(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_smbus_addr	src/ich8lan.c	/^static s32 e1000_write_smbus_addr(struct e1000_hw *hw)$/;"	f	file:
e1000_write_vfta_generic	src/mac.c	/^void e1000_write_vfta_generic(struct e1000_hw *hw, u32 offset, u32 value)$/;"	f
e1000_xmit_frame	src/netdev.c	/^static netdev_tx_t e1000_xmit_frame(struct sk_buff *skb,$/;"	f	file:
e1000e_acquire_nvm	src/nvm.c	/^s32 e1000e_acquire_nvm(struct e1000_hw *hw)$/;"	f
e1000e_blink_led_generic	src/mac.c	/^s32 e1000e_blink_led_generic(struct e1000_hw *hw)$/;"	f
e1000e_check_82574_phy_workaround	src/netdev.c	/^static void e1000e_check_82574_phy_workaround(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_check_downshift	src/phy.c	/^s32 e1000e_check_downshift(struct e1000_hw *hw)$/;"	f
e1000e_check_for_copper_link	src/mac.c	/^s32 e1000e_check_for_copper_link(struct e1000_hw *hw)$/;"	f
e1000e_check_for_fiber_link	src/mac.c	/^s32 e1000e_check_for_fiber_link(struct e1000_hw *hw)$/;"	f
e1000e_check_for_serdes_link	src/mac.c	/^s32 e1000e_check_for_serdes_link(struct e1000_hw *hw)$/;"	f
e1000e_check_ltr_demote	src/netdev.c	/^static void e1000e_check_ltr_demote(struct e1000_adapter *adapter,$/;"	f	file:
e1000e_check_mng_mode_generic	src/manage.c	/^bool e1000e_check_mng_mode_generic(struct e1000_hw *hw)$/;"	f
e1000e_check_options	src/param.c	/^void __devinit e1000e_check_options(struct e1000_adapter *adapter)$/;"	f
e1000e_check_reset_block_generic	src/phy.c	/^s32 e1000e_check_reset_block_generic(struct e1000_hw *hw)$/;"	f
e1000e_cleanup_led_generic	src/mac.c	/^s32 e1000e_cleanup_led_generic(struct e1000_hw *hw)$/;"	f
e1000e_clear_hw_cntrs_base	src/mac.c	/^void e1000e_clear_hw_cntrs_base(struct e1000_hw *hw)$/;"	f
e1000e_config_collision_dist_generic	src/mac.c	/^void e1000e_config_collision_dist_generic(struct e1000_hw *hw)$/;"	f
e1000e_config_fc_after_link_up	src/mac.c	/^s32 e1000e_config_fc_after_link_up(struct e1000_hw *hw)$/;"	f
e1000e_config_hwtstamp	src/netdev.c	/^static int e1000e_config_hwtstamp(struct e1000_adapter *adapter,$/;"	f	file:
e1000e_copper_link_setup_igp	src/phy.c	/^s32 e1000e_copper_link_setup_igp(struct e1000_hw *hw)$/;"	f
e1000e_copper_link_setup_m88	src/phy.c	/^s32 e1000e_copper_link_setup_m88(struct e1000_hw *hw)$/;"	f
e1000e_cyclecounter_read	src/netdev.c	/^static cycle_t e1000e_cyclecounter_read(const struct cyclecounter *cc)$/;"	f	file:
e1000e_determine_phy_address	src/phy.c	/^s32 e1000e_determine_phy_address(struct e1000_hw *hw)$/;"	f
e1000e_disable_aspm	src/netdev.c	/^static void e1000e_disable_aspm(struct pci_dev *pdev, u16 state)$/;"	f	file:
e1000e_disable_pcie_master	src/mac.c	/^s32 e1000e_disable_pcie_master(struct e1000_hw *hw)$/;"	f
e1000e_down	src/netdev.c	/^void e1000e_down(struct e1000_adapter *adapter, bool reset)$/;"	f
e1000e_downshift_workaround	src/netdev.c	/^static void e1000e_downshift_workaround(struct work_struct *work)$/;"	f	file:
e1000e_driver_name	src/netdev.c	/^char e1000e_driver_name[] = "e1000e";$/;"	v
e1000e_driver_version	src/netdev.c	/^const char e1000e_driver_version[] = DRV_VERSION;$/;"	v
e1000e_dump	src/netdev.c	/^static void e1000e_dump(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_dump_ps_pages	src/netdev.c	/^static void e1000e_dump_ps_pages(struct e1000_adapter *adapter,$/;"	f	file:
e1000e_enable_mng_pass_thru	src/manage.c	/^bool e1000e_enable_mng_pass_thru(struct e1000_hw *hw)$/;"	f
e1000e_enable_receives	src/netdev.c	/^static void e1000e_enable_receives(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_enable_tx_pkt_filtering	src/manage.c	/^bool e1000e_enable_tx_pkt_filtering(struct e1000_hw *hw)$/;"	f
e1000e_ethtool_ops_ext	src/ethtool.c	/^static const struct ethtool_ops_ext e1000e_ethtool_ops_ext = {$/;"	v	typeref:struct:ethtool_ops_ext	file:
e1000e_flush_descriptors	src/netdev.c	/^static void e1000e_flush_descriptors(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_flush_lpic	src/netdev.c	/^static void e1000e_flush_lpic(struct pci_dev *pdev)$/;"	f	file:
e1000e_force_mac_fc	src/mac.c	/^s32 e1000e_force_mac_fc(struct e1000_hw *hw)$/;"	f
e1000e_free_rx_resources	src/netdev.c	/^void e1000e_free_rx_resources(struct e1000_ring *rx_ring)$/;"	f
e1000e_free_tx_resources	src/netdev.c	/^void e1000e_free_tx_resources(struct e1000_ring *tx_ring)$/;"	f
e1000e_get_auto_rd_done	src/mac.c	/^s32 e1000e_get_auto_rd_done(struct e1000_hw *hw)$/;"	f
e1000e_get_base_timinca	src/netdev.c	/^s32 e1000e_get_base_timinca(struct e1000_adapter *adapter, u32 *timinca)$/;"	f	file:
e1000e_get_bus_info_pcie	src/mac.c	/^s32 e1000e_get_bus_info_pcie(struct e1000_hw *hw)$/;"	f
e1000e_get_cable_length_igp_2	src/phy.c	/^s32 e1000e_get_cable_length_igp_2(struct e1000_hw *hw)$/;"	f
e1000e_get_cable_length_m88	src/phy.c	/^s32 e1000e_get_cable_length_m88(struct e1000_hw *hw)$/;"	f
e1000e_get_cfg_done_generic	src/phy.c	/^s32 e1000e_get_cfg_done_generic(struct e1000_hw __always_unused *hw)$/;"	f
e1000e_get_eee	src/ethtool.c	/^static int e1000e_get_eee(struct net_device *netdev, struct ethtool_eee *edata)$/;"	f	file:
e1000e_get_hw_control	src/netdev.c	/^void e1000e_get_hw_control(struct e1000_adapter *adapter)$/;"	f
e1000e_get_hw_semaphore	src/mac.c	/^s32 e1000e_get_hw_semaphore(struct e1000_hw *hw)$/;"	f
e1000e_get_laa_state_82571	src/82571.c	/^bool e1000e_get_laa_state_82571(struct e1000_hw *hw)$/;"	f
e1000e_get_phy_id	src/phy.c	/^s32 e1000e_get_phy_id(struct e1000_hw *hw)$/;"	f
e1000e_get_phy_info_igp	src/phy.c	/^s32 e1000e_get_phy_info_igp(struct e1000_hw *hw)$/;"	f
e1000e_get_phy_info_m88	src/phy.c	/^s32 e1000e_get_phy_info_m88(struct e1000_hw *hw)$/;"	f
e1000e_get_phy_type_from_id	src/phy.c	/^enum e1000_phy_type e1000e_get_phy_type_from_id(u32 phy_id)$/;"	f
e1000e_get_speed_and_duplex_copper	src/mac.c	/^s32 e1000e_get_speed_and_duplex_copper(struct e1000_hw *hw, u16 *speed,$/;"	f
e1000e_get_speed_and_duplex_fiber_serdes	src/mac.c	/^s32 e1000e_get_speed_and_duplex_fiber_serdes(struct e1000_hw __always_unused$/;"	f
e1000e_get_sset_count	src/ethtool.c	/^static int e1000e_get_sset_count(struct net_device __always_unused *netdev,$/;"	f	file:
e1000e_get_stats64	src/netdev.c	/^struct rtnl_link_stats64 *e1000e_get_stats64(struct net_device *netdev,$/;"	f
e1000e_get_ts_info	src/ethtool.c	/^static int e1000e_get_ts_info(struct net_device *netdev,$/;"	f	file:
e1000e_gig_downshift_workaround_ich8lan	src/ich8lan.c	/^void e1000e_gig_downshift_workaround_ich8lan(struct e1000_hw *hw)$/;"	f
e1000e_has_link	src/netdev.c	/^static bool e1000e_has_link(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_hwtstamp_ioctl	src/netdev.c	/^static int e1000e_hwtstamp_ioctl(struct net_device *netdev, struct ifreq *ifr)$/;"	f	file:
e1000e_id_led_init_generic	src/mac.c	/^s32 e1000e_id_led_init_generic(struct e1000_hw *hw)$/;"	f
e1000e_igp3_phy_powerdown_workaround_ich8lan	src/ich8lan.c	/^void e1000e_igp3_phy_powerdown_workaround_ich8lan(struct e1000_hw *hw)$/;"	f
e1000e_init_rx_addrs	src/mac.c	/^void e1000e_init_rx_addrs(struct e1000_hw *hw, u16 rar_count)$/;"	f
e1000e_led_blink_task	src/ethtool.c	/^void e1000e_led_blink_task(struct work_struct *work)$/;"	f
e1000e_led_off_generic	src/mac.c	/^s32 e1000e_led_off_generic(struct e1000_hw *hw)$/;"	f
e1000e_led_on_generic	src/mac.c	/^s32 e1000e_led_on_generic(struct e1000_hw *hw)$/;"	f
e1000e_mng_write_dhcp_info	src/manage.c	/^s32 e1000e_mng_write_dhcp_info(struct e1000_hw *hw, u8 *buffer, u16 length)$/;"	f
e1000e_netdev_ops	src/netdev.c	/^static const struct net_device_ops e1000e_netdev_ops = {$/;"	v	typeref:struct:net_device_ops	file:
e1000e_phc_adjfreq	src/ptp.c	/^static int e1000e_phc_adjfreq(struct ptp_clock_info *ptp, s32 delta)$/;"	f	file:
e1000e_phc_adjtime	src/ptp.c	/^static int e1000e_phc_adjtime(struct ptp_clock_info *ptp, s64 delta)$/;"	f	file:
e1000e_phc_enable	src/ptp.c	/^static int e1000e_phc_enable(struct ptp_clock_info __always_unused *ptp,$/;"	f	file:
e1000e_phc_gettime	src/ptp.c	/^static int e1000e_phc_gettime(struct ptp_clock_info *ptp, struct timespec *ts)$/;"	f	file:
e1000e_phc_settime	src/ptp.c	/^static int e1000e_phc_settime(struct ptp_clock_info *ptp,$/;"	f	file:
e1000e_phy_force_speed_duplex_igp	src/phy.c	/^s32 e1000e_phy_force_speed_duplex_igp(struct e1000_hw *hw)$/;"	f
e1000e_phy_force_speed_duplex_m88	src/phy.c	/^s32 e1000e_phy_force_speed_duplex_m88(struct e1000_hw *hw)$/;"	f
e1000e_phy_force_speed_duplex_setup	src/phy.c	/^void e1000e_phy_force_speed_duplex_setup(struct e1000_hw *hw, u16 *phy_ctrl)$/;"	f
e1000e_phy_has_link_generic	src/phy.c	/^s32 e1000e_phy_has_link_generic(struct e1000_hw *hw, u32 iterations,$/;"	f
e1000e_phy_hw_reset_generic	src/phy.c	/^s32 e1000e_phy_hw_reset_generic(struct e1000_hw *hw)$/;"	f
e1000e_phy_init_script_igp3	src/phy.c	/^s32 e1000e_phy_init_script_igp3(struct e1000_hw *hw)$/;"	f
e1000e_phy_reset_dsp	src/phy.c	/^s32 e1000e_phy_reset_dsp(struct e1000_hw *hw)$/;"	f
e1000e_phy_sw_reset	src/phy.c	/^s32 e1000e_phy_sw_reset(struct e1000_hw *hw)$/;"	f
e1000e_pm_freeze	src/netdev.c	/^static int e1000e_pm_freeze(struct device *dev)$/;"	f	file:
e1000e_pm_resume	src/netdev.c	/^static int e1000e_pm_resume(struct device *dev)$/;"	f	file:
e1000e_pm_runtime_idle	src/netdev.c	/^static int e1000e_pm_runtime_idle(struct device *dev)$/;"	f	file:
e1000e_pm_runtime_resume	src/netdev.c	/^static int e1000e_pm_runtime_resume(struct device *dev)$/;"	f	file:
e1000e_pm_runtime_suspend	src/netdev.c	/^static int e1000e_pm_runtime_suspend(struct device *dev)$/;"	f	file:
e1000e_pm_suspend	src/netdev.c	/^static int e1000e_pm_suspend(struct device *dev)$/;"	f	file:
e1000e_pm_thaw	src/netdev.c	/^static int e1000e_pm_thaw(struct device *dev)$/;"	f	file:
e1000e_poll	src/netdev.c	/^static int e1000e_poll(struct napi_struct *napi, int weight)$/;"	f	file:
e1000e_poll_eerd_eewr_done	src/nvm.c	/^s32 e1000e_poll_eerd_eewr_done(struct e1000_hw *hw, int ee_reg)$/;"	f
e1000e_power_up_phy	src/netdev.c	/^void e1000e_power_up_phy(struct e1000_adapter *adapter)$/;"	f
e1000e_ptp_clock_info	src/ptp.c	/^static const struct ptp_clock_info e1000e_ptp_clock_info = {$/;"	v	typeref:struct:ptp_clock_info	file:
e1000e_ptp_init	src/e1000.h	582;"	d
e1000e_ptp_init	src/ptp.c	/^void e1000e_ptp_init(struct e1000_adapter *adapter)$/;"	f
e1000e_ptp_remove	src/e1000.h	583;"	d
e1000e_ptp_remove	src/ptp.c	/^void e1000e_ptp_remove(struct e1000_adapter *adapter)$/;"	f
e1000e_put_hw_semaphore	src/mac.c	/^void e1000e_put_hw_semaphore(struct e1000_hw *hw)$/;"	f
e1000e_rar_get_count_generic	src/mac.c	/^u32 e1000e_rar_get_count_generic(struct e1000_hw *hw)$/;"	f
e1000e_rar_set_generic	src/mac.c	/^int e1000e_rar_set_generic(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f
e1000e_read_kmrn_reg	src/phy.c	/^s32 e1000e_read_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_kmrn_reg_locked	src/phy.c	/^s32 e1000e_read_kmrn_reg_locked(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_mac_addr	src/e1000.h	/^static inline s32 e1000e_read_mac_addr(struct e1000_hw *hw)$/;"	f
e1000e_read_nvm_eerd	src/nvm.c	/^s32 e1000e_read_nvm_eerd(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000e_read_phy_reg_bm	src/phy.c	/^s32 e1000e_read_phy_reg_bm(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_phy_reg_bm2	src/phy.c	/^s32 e1000e_read_phy_reg_bm2(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_phy_reg_igp	src/phy.c	/^s32 e1000e_read_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_phy_reg_igp_locked	src/phy.c	/^s32 e1000e_read_phy_reg_igp_locked(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_phy_reg_m88	src/phy.c	/^s32 e1000e_read_phy_reg_m88(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_phy_reg_mdic	src/phy.c	/^s32 e1000e_read_phy_reg_mdic(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_reinit_locked	src/netdev.c	/^void e1000e_reinit_locked(struct e1000_adapter *adapter)$/;"	f
e1000e_release_hw_control	src/netdev.c	/^void e1000e_release_hw_control(struct e1000_adapter *adapter)$/;"	f
e1000e_release_nvm	src/nvm.c	/^void e1000e_release_nvm(struct e1000_hw *hw)$/;"	f
e1000e_reload_nvm_generic	src/nvm.c	/^void e1000e_reload_nvm_generic(struct e1000_hw *hw)$/;"	f
e1000e_reset	src/netdev.c	/^void e1000e_reset(struct e1000_adapter *adapter)$/;"	f
e1000e_reset_adaptive	src/mac.c	/^void e1000e_reset_adaptive(struct e1000_hw *hw)$/;"	f
e1000e_reset_interrupt_capability	src/netdev.c	/^void e1000e_reset_interrupt_capability(struct e1000_adapter *adapter)$/;"	f
e1000e_rx_hwtstamp	src/netdev.c	/^static void e1000e_rx_hwtstamp(struct e1000_adapter *adapter, u32 status,$/;"	f	file:
e1000e_set_d3_lplu_state	src/phy.c	/^s32 e1000e_set_d3_lplu_state(struct e1000_hw *hw, bool active)$/;"	f
e1000e_set_eee	src/ethtool.c	/^static int e1000e_set_eee(struct net_device *netdev, struct ethtool_eee *edata)$/;"	f	file:
e1000e_set_ethtool_ops	src/ethtool.c	/^void e1000e_set_ethtool_ops(struct net_device *netdev)$/;"	f
e1000e_set_fc_watermarks	src/mac.c	/^s32 e1000e_set_fc_watermarks(struct e1000_hw *hw)$/;"	f
e1000e_set_flags	src/ethtool.c	/^static int e1000e_set_flags(struct net_device *netdev, u32 data)$/;"	f	file:
e1000e_set_interrupt_capability	src/netdev.c	/^void e1000e_set_interrupt_capability(struct e1000_adapter *adapter)$/;"	f
e1000e_set_kmrn_lock_loss_workaround_ich8lan	src/ich8lan.c	/^void e1000e_set_kmrn_lock_loss_workaround_ich8lan(struct e1000_hw *hw,$/;"	f
e1000e_set_laa_state_82571	src/82571.c	/^void e1000e_set_laa_state_82571(struct e1000_hw *hw, bool state)$/;"	f
e1000e_set_pcie_no_snoop	src/mac.c	/^void e1000e_set_pcie_no_snoop(struct e1000_hw *hw, u32 no_snoop)$/;"	f
e1000e_set_rx_mode	src/netdev.c	/^static void e1000e_set_rx_mode(struct net_device *netdev)$/;"	f	file:
e1000e_setup_copper_link	src/phy.c	/^s32 e1000e_setup_copper_link(struct e1000_hw *hw)$/;"	f
e1000e_setup_fiber_serdes_link	src/mac.c	/^s32 e1000e_setup_fiber_serdes_link(struct e1000_hw *hw)$/;"	f
e1000e_setup_led_generic	src/mac.c	/^s32 e1000e_setup_led_generic(struct e1000_hw *hw)$/;"	f
e1000e_setup_link_generic	src/mac.c	/^s32 e1000e_setup_link_generic(struct e1000_hw *hw)$/;"	f
e1000e_setup_rss_hash	src/netdev.c	/^static void e1000e_setup_rss_hash(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_setup_rx_resources	src/netdev.c	/^int e1000e_setup_rx_resources(struct e1000_ring *rx_ring)$/;"	f
e1000e_setup_tx_resources	src/netdev.c	/^int e1000e_setup_tx_resources(struct e1000_ring *tx_ring)$/;"	f
e1000e_systim_overflow_work	src/ptp.c	/^static void e1000e_systim_overflow_work(struct work_struct *work)$/;"	f	file:
e1000e_systim_to_hwtstamp	src/netdev.c	/^static void e1000e_systim_to_hwtstamp(struct e1000_adapter *adapter,$/;"	f	file:
e1000e_tx_hwtstamp_work	src/netdev.c	/^static void e1000e_tx_hwtstamp_work(struct work_struct *work)$/;"	f	file:
e1000e_up	src/netdev.c	/^int e1000e_up(struct e1000_adapter *adapter)$/;"	f
e1000e_update_adaptive	src/mac.c	/^void e1000e_update_adaptive(struct e1000_hw *hw)$/;"	f
e1000e_update_mc_addr_list_generic	src/mac.c	/^void e1000e_update_mc_addr_list_generic(struct e1000_hw *hw,$/;"	f
e1000e_update_nvm_checksum	src/e1000.h	/^static inline s32 e1000e_update_nvm_checksum(struct e1000_hw *hw)$/;"	f
e1000e_update_nvm_checksum_generic	src/nvm.c	/^s32 e1000e_update_nvm_checksum_generic(struct e1000_hw *hw)$/;"	f
e1000e_update_phy_stats	src/netdev.c	/^static void e1000e_update_phy_stats(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_update_phy_task	src/netdev.c	/^static void e1000e_update_phy_task(struct work_struct *work)$/;"	f	file:
e1000e_update_rdt_wa	src/netdev.c	/^static void e1000e_update_rdt_wa(struct e1000_ring *rx_ring, unsigned int i)$/;"	f	file:
e1000e_update_stats	src/netdev.c	/^static void e1000e_update_stats(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_update_tdt_wa	src/netdev.c	/^static void e1000e_update_tdt_wa(struct e1000_ring *tx_ring, unsigned int i)$/;"	f	file:
e1000e_valid_led_default	src/mac.c	/^s32 e1000e_valid_led_default(struct e1000_hw *hw, u16 *data)$/;"	f
e1000e_validate_mdi_setting_crossover_generic	src/mac.c	/^s32 e1000e_validate_mdi_setting_crossover_generic(struct e1000_hw$/;"	f
e1000e_validate_mdi_setting_generic	src/mac.c	/^s32 e1000e_validate_mdi_setting_generic(struct e1000_hw *hw)$/;"	f
e1000e_validate_nvm_checksum_generic	src/nvm.c	/^s32 e1000e_validate_nvm_checksum_generic(struct e1000_hw *hw)$/;"	f
e1000e_vlan_filter_disable	src/netdev.c	/^static void e1000e_vlan_filter_disable(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_vlan_filter_enable	src/netdev.c	/^static void e1000e_vlan_filter_enable(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_vlan_strip_disable	src/netdev.c	/^static void e1000e_vlan_strip_disable(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_vlan_strip_enable	src/netdev.c	/^static void e1000e_vlan_strip_enable(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_write_itr	src/netdev.c	/^void e1000e_write_itr(struct e1000_adapter *adapter, u32 itr)$/;"	f
e1000e_write_kmrn_reg	src/phy.c	/^s32 e1000e_write_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_kmrn_reg_locked	src/phy.c	/^s32 e1000e_write_kmrn_reg_locked(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_mc_addr_list	src/netdev.c	/^static int e1000e_write_mc_addr_list(struct net_device *netdev)$/;"	f	file:
e1000e_write_nvm_spi	src/nvm.c	/^s32 e1000e_write_nvm_spi(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000e_write_phy_reg_bm	src/phy.c	/^s32 e1000e_write_phy_reg_bm(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_phy_reg_bm2	src/phy.c	/^s32 e1000e_write_phy_reg_bm2(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_phy_reg_igp	src/phy.c	/^s32 e1000e_write_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_phy_reg_igp_locked	src/phy.c	/^s32 e1000e_write_phy_reg_igp_locked(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_phy_reg_m88	src/phy.c	/^s32 e1000e_write_phy_reg_m88(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_phy_reg_mdic	src/phy.c	/^s32 e1000e_write_phy_reg_mdic(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_uc_addr_list	src/netdev.c	/^static int e1000e_write_uc_addr_list(struct net_device *netdev)$/;"	f	file:
e1e_flush	src/e1000.h	687;"	d
e1e_rphy	src/e1000.h	/^static inline s32 e1e_rphy(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1e_rphy_locked	src/e1000.h	/^static inline s32 e1e_rphy_locked(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1e_wphy	src/e1000.h	/^static inline s32 e1e_wphy(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1e_wphy_locked	src/e1000.h	/^static inline s32 e1e_wphy_locked(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e80003es2lan	src/hw.h	/^		struct e1000_dev_spec_80003es2lan e80003es2lan;$/;"	m	union:e1000_hw::__anon34	typeref:struct:e1000_hw::__anon34::e1000_dev_spec_80003es2lan
e82571	src/hw.h	/^		struct e1000_dev_spec_82571 e82571;$/;"	m	union:e1000_hw::__anon34	typeref:struct:e1000_hw::__anon34::e1000_dev_spec_82571
e82571_mac_ops	src/82571.c	/^static const struct e1000_mac_operations e82571_mac_ops = {$/;"	v	typeref:struct:e1000_mac_operations	file:
e82571_nvm_ops	src/82571.c	/^static const struct e1000_nvm_operations e82571_nvm_ops = {$/;"	v	typeref:struct:e1000_nvm_operations	file:
e82_phy_ops_bm	src/82571.c	/^static const struct e1000_phy_operations e82_phy_ops_bm = {$/;"	v	typeref:struct:e1000_phy_operations	file:
e82_phy_ops_igp	src/82571.c	/^static const struct e1000_phy_operations e82_phy_ops_igp = {$/;"	v	typeref:struct:e1000_phy_operations	file:
e82_phy_ops_m88	src/82571.c	/^static const struct e1000_phy_operations e82_phy_ops_m88 = {$/;"	v	typeref:struct:e1000_phy_operations	file:
e_dbg	src/e1000.h	50;"	d
e_err	src/e1000.h	52;"	d
e_info	src/e1000.h	54;"	d
e_notice	src/e1000.h	58;"	d
e_warn	src/e1000.h	56;"	d
ecol	src/hw.h	/^	u64 ecol;$/;"	m	struct:e1000_hw_stats
eedump_len	src/kcompat.h	/^	u32 eedump_len;$/;"	m	struct:k_ethtool_drvinfo
eee_advert	src/e1000.h	/^	u16 eee_advert;$/;"	m	struct:e1000_adapter
eee_disable	src/hw.h	/^	bool eee_disable;$/;"	m	struct:e1000_dev_spec_ich8lan
eee_lp_ability	src/hw.h	/^	u16 eee_lp_ability;$/;"	m	struct:e1000_dev_spec_ich8lan
eeprom_vers	src/e1000.h	/^	u16 eeprom_vers;$/;"	m	struct:e1000_adapter
eeprom_wol	src/e1000.h	/^	u32 eeprom_wol;$/;"	m	struct:e1000_adapter
ei	src/e1000.h	/^	const struct e1000_info *ei;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_info
eiac_mask	src/e1000.h	/^	u32 eiac_mask;$/;"	m	struct:e1000_adapter
enable_option	src/param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon3	file:
entry	src/kcompat.h	/^	u16 entry;		\/* driver uses to specify entry, OS writes *\/$/;"	m	struct:msix_entry
er16flash	src/ich8lan.c	159;"	d	file:
er32	src/e1000.h	653;"	d
er32flash	src/ich8lan.c	160;"	d	file:
err	src/param.c	/^	const char *err;$/;"	m	struct:e1000_option	file:
es2_mac_ops	src/80003es2lan.c	/^static const struct e1000_mac_operations es2_mac_ops = {$/;"	v	typeref:struct:e1000_mac_operations	file:
es2_nvm_ops	src/80003es2lan.c	/^static const struct e1000_nvm_operations es2_nvm_ops = {$/;"	v	typeref:struct:e1000_nvm_operations	file:
es2_phy_ops	src/80003es2lan.c	/^static const struct e1000_phy_operations es2_phy_ops = {$/;"	v	typeref:struct:e1000_phy_operations	file:
estatus	src/e1000.h	/^	u16 estatus;		\/* extended status register       *\/$/;"	m	struct:e1000_phy_regs
eth_hw_addr_random	src/kcompat.h	3642;"	d
eth_hw_addr_random	src/kcompat.h	3647;"	d
eth_random_addr	src/kcompat.h	3703;"	d
ether_addr_copy	src/kcompat.h	4078;"	d
ether_addr_equal	src/kcompat.h	3671;"	d
ether_crc_le	src/kcompat.h	1025;"	d
ether_crc_le	src/kcompat.h	1026;"	d
ethtool_adv_to_mmd_eee_adv_t	src/kcompat.h	3823;"	d
ethtool_cmd_speed	src/kcompat.h	2488;"	d
ethtool_cmd_speed_set	src/kcompat.h	2480;"	d
ethtool_coalesce	src/kcompat.h	479;"	d
ethtool_drvinfo	src/kcompat.h	357;"	d
ethtool_drvinfo	src/kcompat.h	358;"	d
ethtool_eeprom	src/kcompat.h	/^struct ethtool_eeprom {$/;"	s
ethtool_get_coalesce	src/kcompat_ethtool.c	/^static int ethtool_get_coalesce(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_drvinfo	src/kcompat_ethtool.c	/^static int ethtool_get_drvinfo(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_eeprom	src/kcompat_ethtool.c	/^static int ethtool_get_eeprom(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_link	src/kcompat_ethtool.c	/^static int ethtool_get_link(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_msglevel	src/kcompat_ethtool.c	/^static int ethtool_get_msglevel(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_pauseparam	src/kcompat_ethtool.c	/^static int ethtool_get_pauseparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_regs	src/kcompat_ethtool.c	/^static int ethtool_get_regs(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_ringparam	src/kcompat_ethtool.c	/^static int ethtool_get_ringparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_rx_csum	src/kcompat_ethtool.c	/^static int ethtool_get_rx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_settings	src/kcompat_ethtool.c	/^static int ethtool_get_settings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_sg	src/kcompat_ethtool.c	/^static int ethtool_get_sg(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_stats	src/kcompat_ethtool.c	/^static int ethtool_get_stats(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_strings	src/kcompat_ethtool.c	/^static int ethtool_get_strings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_tso	src/kcompat_ethtool.c	/^static int ethtool_get_tso(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_tx_csum	src/kcompat_ethtool.c	/^static int ethtool_get_tx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_wol	src/kcompat_ethtool.c	/^static int ethtool_get_wol(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_gstrings	src/kcompat.h	/^struct ethtool_gstrings {$/;"	s
ethtool_ioctl	src/kcompat_ethtool.c	/^int ethtool_ioctl(struct ifreq *ifr)$/;"	f
ethtool_nway_reset	src/kcompat_ethtool.c	/^static int ethtool_nway_reset(struct net_device *dev)$/;"	f	file:
ethtool_op_get_flags	src/kcompat.h	3155;"	d
ethtool_op_get_link	src/kcompat_ethtool.c	112;"	d	file:
ethtool_op_get_link	src/kcompat_ethtool.c	113;"	d	file:
ethtool_op_get_sg	src/kcompat_ethtool.c	150;"	d	file:
ethtool_op_get_sg	src/kcompat_ethtool.c	151;"	d	file:
ethtool_op_get_tso	src/kcompat_ethtool.c	175;"	d	file:
ethtool_op_get_tso	src/kcompat_ethtool.c	176;"	d	file:
ethtool_op_get_tx_csum	src/kcompat_ethtool.c	119;"	d	file:
ethtool_op_get_tx_csum	src/kcompat_ethtool.c	120;"	d	file:
ethtool_op_set_flags	src/kcompat.h	3153;"	d
ethtool_op_set_sg	src/kcompat_ethtool.c	161;"	d	file:
ethtool_op_set_sg	src/kcompat_ethtool.c	162;"	d	file:
ethtool_op_set_tso	src/kcompat_ethtool.c	186;"	d	file:
ethtool_op_set_tso	src/kcompat_ethtool.c	187;"	d	file:
ethtool_op_set_tx_csum	src/kcompat_ethtool.c	130;"	d	file:
ethtool_op_set_tx_csum	src/kcompat_ethtool.c	131;"	d	file:
ethtool_ops	src/kcompat_ethtool.c	/^} *ethtool_ops = NULL;$/;"	v	typeref:struct:_kc_ethtool_ops
ethtool_ops	src/kcompat_ethtool.c	60;"	d	file:
ethtool_ops	src/kcompat_ethtool.c	61;"	d	file:
ethtool_pauseparam	src/kcompat.h	611;"	d
ethtool_phys_id	src/kcompat_ethtool.c	/^static int ethtool_phys_id(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_regs	src/kcompat.h	448;"	d
ethtool_ringparam	src/kcompat.h	582;"	d
ethtool_rx_flow_spec	src/kcompat.h	3421;"	d
ethtool_self_test	src/kcompat_ethtool.c	/^static int ethtool_self_test(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_coalesce	src/kcompat_ethtool.c	/^static int ethtool_set_coalesce(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_eeprom	src/kcompat_ethtool.c	/^static int ethtool_set_eeprom(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_msglevel	src/kcompat_ethtool.c	/^static int ethtool_set_msglevel(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_pauseparam	src/kcompat_ethtool.c	/^static int ethtool_set_pauseparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_ringparam	src/kcompat_ethtool.c	/^static int ethtool_set_ringparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_rx_csum	src/kcompat_ethtool.c	/^static int ethtool_set_rx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_settings	src/kcompat_ethtool.c	/^static int ethtool_set_settings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_sg	src/kcompat_ethtool.c	/^static int ethtool_set_sg(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_tso	src/kcompat_ethtool.c	/^static int ethtool_set_tso(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_tx_csum	src/kcompat_ethtool.c	/^static int ethtool_set_tx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_wol	src/kcompat_ethtool.c	/^static int ethtool_set_wol(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_stats	src/kcompat.h	/^struct ethtool_stats {$/;"	s
ethtool_stringset	src/kcompat.h	/^enum ethtool_stringset {$/;"	g
ethtool_test	src/kcompat.h	/^struct ethtool_test {$/;"	s
ethtool_test_flags	src/kcompat.h	/^enum ethtool_test_flags {$/;"	g
ethtool_value	src/kcompat.h	/^struct ethtool_value {$/;"	s
ethtool_wolinfo	src/kcompat.h	/^struct ethtool_wolinfo {$/;"	s
ew16flash	src/ich8lan.c	161;"	d	file:
ew32	src/e1000.h	685;"	d
ew32flash	src/ich8lan.c	162;"	d	file:
expansion	src/e1000.h	/^	u16 expansion;		\/* auto-negotiation expansion reg *\/$/;"	m	struct:e1000_phy_regs
false	src/kcompat.h	2035;"	d
fc	src/hw.h	/^	struct e1000_fc_info fc;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_fc_info
fc_autoneg	src/e1000.h	/^	bool fc_autoneg;$/;"	m	struct:e1000_adapter
fcruc	src/hw.h	/^	u64 fcruc;$/;"	m	struct:e1000_hw_stats
fields	src/hw.h	/^		} fields;$/;"	m	union:e1000_context_desc::__anon28	typeref:struct:e1000_context_desc::__anon28::__anon29
fields	src/hw.h	/^		} fields;$/;"	m	union:e1000_data_desc::__anon32	typeref:struct:e1000_data_desc::__anon32::__anon33
fields	src/hw.h	/^		} fields;$/;"	m	union:e1000_tx_desc::__anon22	typeref:struct:e1000_tx_desc::__anon22::__anon23
find_first_bit	src/kcompat.h	1364;"	d
find_next_bit	src/kcompat.c	/^unsigned long find_next_bit(const unsigned long *addr, unsigned long size,$/;"	f
find_next_bit	src/kcompat.h	1359;"	d
find_next_bit	src/kcompat.h	1360;"	d
first	src/kcompat.h	/^	struct hlist_node *first;$/;"	m	struct:hlist_head	typeref:struct:hlist_head::hlist_node
first_online_node	src/kcompat.h	1866;"	d
flags	src/e1000.h	/^	unsigned int		flags;$/;"	m	struct:e1000_info
flags	src/e1000.h	/^	unsigned int flags;$/;"	m	struct:e1000_adapter
flags	src/hw.h	/^		} flags;$/;"	m	union:e1000_data_desc::__anon30	typeref:struct:e1000_data_desc::__anon30::__anon31
flags	src/hw.h	/^		} flags;$/;"	m	union:e1000_tx_desc::__anon20	typeref:struct:e1000_tx_desc::__anon20::__anon21
flags	src/kcompat.h	/^	u32 flags;$/;"	m	struct:ethtool_test
flags2	src/e1000.h	/^	unsigned int		flags2;$/;"	m	struct:e1000_info
flags2	src/e1000.h	/^	unsigned int flags2;$/;"	m	struct:e1000_adapter
flash_address	src/hw.h	/^	void __iomem *flash_address;$/;"	m	struct:e1000_hw
flash_bank_size	src/hw.h	/^	u32 flash_bank_size;$/;"	m	struct:e1000_nvm_info
flash_base_addr	src/hw.h	/^	u32 flash_base_addr;$/;"	m	struct:e1000_nvm_info
flcdone	src/ich8lan.c	/^		u16 flcdone:1;	\/* bit 0 Flash Cycle Done *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flcerr	src/ich8lan.c	/^		u16 flcerr:1;	\/* bit 1 Flash Cycle Error *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flcgo	src/ich8lan.c	/^		u16 flcgo:1;	\/* 0 Flash Cycle Go *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
flcinprog	src/ich8lan.c	/^		u16 flcinprog:1;	\/* bit 5 flash cycle in Progress *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flcycle	src/ich8lan.c	/^		u16 flcycle:2;	\/* 2:1 Flash Cycle *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
fldbcount	src/ich8lan.c	/^		u16 fldbcount:2;	\/* 9:8 Flash Data Byte Count *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
fldesvalid	src/ich8lan.c	/^		u16 fldesvalid:1;	\/* bit 14 Flash Descriptor Valid *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flockdn	src/ich8lan.c	/^		u16 flockdn:1;	\/* bit 15 Flash Config Lock-Down *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flockdn	src/ich8lan.c	/^		u16 flockdn:6;	\/* 15:10 Reserved *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
flow_type	src/kcompat.h	/^	__u32 flow_type;$/;"	m	struct:_kc_ethtool_rx_flow_spec
flush_scheduled_work	src/kcompat.h	1307;"	d
for_each_set_bit	src/kcompat.h	3059;"	d
force_media	src/kcompat_ethtool.c	/^	unsigned int force_media:1;	\/* is autoneg. disabled? *\/$/;"	m	struct:_kc_mii_if_info	file:
force_speed_duplex	src/hw.h	/^	s32 (*force_speed_duplex) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
forced_speed_duplex	src/hw.h	/^	u8 forced_speed_duplex;$/;"	m	struct:e1000_mac_info
free_netdev	src/kcompat.h	173;"	d
free_netdev	src/kcompat.h	2018;"	d
free_netdev	src/kcompat.h	2020;"	d
full_duplex	src/kcompat_ethtool.c	/^	unsigned int full_duplex:1;	\/* is full duplex? *\/$/;"	m	struct:_kc_mii_if_info	file:
func	src/hw.h	/^	u16 func;$/;"	m	struct:e1000_bus_info
fw_version	src/kcompat.h	/^	char fw_version[32];$/;"	m	struct:k_ethtool_drvinfo
generic_mii_ioctl	src/kcompat_ethtool.c	900;"	d	file:
generic_mii_ioctl	src/kcompat_ethtool.c	901;"	d	file:
get_bus_info	src/hw.h	/^	s32 (*get_bus_info) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
get_cable_length	src/hw.h	/^	s32 (*get_cable_length) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
get_cfg_done	src/hw.h	/^	s32 (*get_cfg_done) (struct e1000_hw *hw);$/;"	m	struct:e1000_phy_operations
get_coalesce	src/kcompat_ethtool.c	/^	int (*get_coalesce) (struct net_device *, struct ethtool_coalesce *);$/;"	m	struct:_kc_ethtool_ops	file:
get_cpu	src/kcompat.h	1319;"	d
get_cpu	src/kcompat.h	1320;"	d
get_drvinfo	src/kcompat_ethtool.c	/^	void (*get_drvinfo) (struct net_device *, struct ethtool_drvinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
get_eeprom	src/kcompat_ethtool.c	/^	int (*get_eeprom) (struct net_device *, struct ethtool_eeprom *, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
get_eeprom_len	src/kcompat_ethtool.c	/^	int (*get_eeprom_len) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_ethtool_stats	src/kcompat_ethtool.c	/^	void (*get_ethtool_stats) (struct net_device *, struct ethtool_stats *,$/;"	m	struct:_kc_ethtool_ops	file:
get_info	src/hw.h	/^	s32 (*get_info) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
get_link	src/kcompat_ethtool.c	/^	u32 (*get_link) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_link_status	src/hw.h	/^	bool get_link_status;$/;"	m	struct:e1000_mac_info
get_link_up_info	src/hw.h	/^	s32 (*get_link_up_info) (struct e1000_hw *, u16 *, u16 *);$/;"	m	struct:e1000_mac_operations
get_msglevel	src/kcompat_ethtool.c	/^	u32 (*get_msglevel) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_pauseparam	src/kcompat_ethtool.c	/^	void (*get_pauseparam) (struct net_device *,$/;"	m	struct:_kc_ethtool_ops	file:
get_regs	src/kcompat_ethtool.c	/^	void (*get_regs) (struct net_device *, struct ethtool_regs *, void *);$/;"	m	struct:_kc_ethtool_ops	file:
get_regs_len	src/kcompat_ethtool.c	/^	int (*get_regs_len) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_ringparam	src/kcompat_ethtool.c	/^	void (*get_ringparam) (struct net_device *, struct ethtool_ringparam *);$/;"	m	struct:_kc_ethtool_ops	file:
get_rx_csum	src/kcompat_ethtool.c	/^	u32 (*get_rx_csum) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_settings	src/kcompat_ethtool.c	/^	int (*get_settings) (struct net_device *, struct ethtool_cmd *);$/;"	m	struct:_kc_ethtool_ops	file:
get_sg	src/kcompat_ethtool.c	/^	u32 (*get_sg) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_stats_count	src/kcompat_ethtool.c	/^	int (*get_stats_count) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_strings	src/kcompat_ethtool.c	/^	void (*get_strings) (struct net_device *, u32 stringset, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
get_tso	src/kcompat_ethtool.c	/^	u32 (*get_tso) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_tx_csum	src/kcompat_ethtool.c	/^	u32 (*get_tx_csum) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_variants	src/e1000.h	/^	s32			(*get_variants)(struct e1000_adapter *);$/;"	m	struct:e1000_info
get_wol	src/kcompat_ethtool.c	/^	void (*get_wol) (struct net_device *, struct ethtool_wolinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
gfp_t	src/kcompat.h	/^typedef unsigned gfp_t;$/;"	t
gfp_t	src/kcompat.h	1779;"	d
gmrag	src/ich8lan.c	/^		u32 gmrag:8;	\/* 23:16 GbE Master Read Access Grant *\/$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc	file:
gmwag	src/ich8lan.c	/^		u32 gmwag:8;	\/* 31:24 GbE Master Write Access Grant *\/$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc	file:
gorc	src/e1000.h	/^	u32 gorc;$/;"	m	struct:e1000_adapter
gorc	src/hw.h	/^	u64 gorc;$/;"	m	struct:e1000_hw_stats
gorc_old	src/e1000.h	/^	u64 gorc_old;$/;"	m	struct:e1000_adapter
gotc	src/e1000.h	/^	u32 gotc;$/;"	m	struct:e1000_adapter
gotc	src/hw.h	/^	u64 gotc;$/;"	m	struct:e1000_hw_stats
gotc_old	src/e1000.h	/^	u64 gotc_old;$/;"	m	struct:e1000_adapter
gprc	src/hw.h	/^	u64 gprc;$/;"	m	struct:e1000_hw_stats
gptc	src/hw.h	/^	u64 gptc;$/;"	m	struct:e1000_hw_stats
grra	src/ich8lan.c	/^		u32 grra:8;	\/* 0:7 GbE region Read Access *\/$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc	file:
grwa	src/ich8lan.c	/^		u32 grwa:8;	\/* 8:15 GbE region Write Access *\/$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc	file:
gso_segs	src/kcompat.h	188;"	d
gso_size	src/kcompat.h	187;"	d
h_dest	src/kcompat.h	/^	unsigned char h_dest[ETH_ALEN];$/;"	m	struct:_kc_vlan_ethhdr
h_dest	src/kcompat.h	/^	unsigned char h_dest[ETH_ALEN];$/;"	m	struct:vlan_ethhdr
h_ext	src/kcompat.h	/^	struct _kc_ethtool_flow_ext h_ext;$/;"	m	struct:_kc_ethtool_rx_flow_spec	typeref:struct:_kc_ethtool_rx_flow_spec::_kc_ethtool_flow_ext
h_source	src/kcompat.h	/^	unsigned char h_source[ETH_ALEN];$/;"	m	struct:_kc_vlan_ethhdr
h_source	src/kcompat.h	/^	unsigned char h_source[ETH_ALEN];$/;"	m	struct:vlan_ethhdr
h_u	src/kcompat.h	/^	union _kc_ethtool_flow_union h_u;$/;"	m	struct:_kc_ethtool_rx_flow_spec	typeref:union:_kc_ethtool_rx_flow_spec::_kc_ethtool_flow_union
h_vlan_TCI	src/kcompat.h	/^	__be16 h_vlan_TCI;$/;"	m	struct:_kc_vlan_ethhdr
h_vlan_TCI	src/kcompat.h	/^	__be16 h_vlan_TCI;$/;"	m	struct:_kc_vlan_hdr
h_vlan_TCI	src/kcompat.h	/^	unsigned short h_vlan_TCI;$/;"	m	struct:vlan_ethhdr
h_vlan_encapsulated_proto	src/kcompat.h	/^	__be16 h_vlan_encapsulated_proto;$/;"	m	struct:_kc_vlan_ethhdr
h_vlan_encapsulated_proto	src/kcompat.h	/^	__be16 h_vlan_encapsulated_proto;$/;"	m	struct:_kc_vlan_hdr
h_vlan_encapsulated_proto	src/kcompat.h	/^	unsigned short h_vlan_encapsulated_proto;$/;"	m	struct:vlan_ethhdr
h_vlan_proto	src/kcompat.h	/^	__be16 h_vlan_proto;$/;"	m	struct:_kc_vlan_ethhdr
h_vlan_proto	src/kcompat.h	/^	unsigned short h_vlan_proto;$/;"	m	struct:vlan_ethhdr
has_fwsm	src/hw.h	/^	bool has_fwsm;$/;"	m	struct:e1000_mac_info
hdata	src/kcompat.h	/^	__u8 hdata[60];$/;"	m	union:_kc_ethtool_flow_union
hdr_len	src/hw.h	/^			u8 hdr_len;	\/* Header length *\/$/;"	m	struct:e1000_context_desc::__anon28::__anon29
head	src/e1000.h	/^	void __iomem *head;$/;"	m	struct:e1000_ring
header_status	src/hw.h	/^			__le16 header_status;$/;"	m	struct:e1000_rx_desc_packet_split::__anon14::__anon19
hex_asc	src/kcompat.h	2192;"	d
hi_dword	src/hw.h	/^			} hi_dword;$/;"	m	struct:e1000_rx_desc_extended::__anon8::__anon9	typeref:union:e1000_rx_desc_extended::__anon8::__anon9::__anon10
hi_dword	src/hw.h	/^			} hi_dword;$/;"	m	struct:e1000_rx_desc_packet_split::__anon14::__anon15	typeref:union:e1000_rx_desc_packet_split::__anon14::__anon15::__anon16
high_water	src/hw.h	/^	u32 high_water;		\/* Flow control high-water mark *\/$/;"	m	struct:e1000_fc_info
hlist_add_head	src/kcompat.h	/^static inline void hlist_add_head(struct hlist_node *n, struct hlist_head *h)$/;"	f
hlist_del	src/kcompat.h	/^static inline void hlist_del(struct hlist_node *n)$/;"	f
hlist_empty	src/kcompat.h	/^static inline int hlist_empty(const struct hlist_head *h)$/;"	f
hlist_entry	src/kcompat.h	3961;"	d
hlist_entry	src/kcompat.h	3962;"	d
hlist_entry_safe	src/kcompat.h	3964;"	d
hlist_entry_safe	src/kcompat.h	3965;"	d
hlist_for_each_entry	src/kcompat.h	3968;"	d
hlist_for_each_entry	src/kcompat.h	3969;"	d
hlist_for_each_entry_safe	src/kcompat.h	3974;"	d
hlist_for_each_entry_safe	src/kcompat.h	3975;"	d
hlist_head	src/kcompat.h	/^struct hlist_head {$/;"	s
hlist_node	src/kcompat.h	/^struct hlist_node {$/;"	s
hsf_ctrl	src/ich8lan.c	/^	} hsf_ctrl;$/;"	m	union:ich8_hws_flash_ctrl	typeref:struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
hsf_flregacc	src/ich8lan.c	/^	} hsf_flregacc;$/;"	m	union:ich8_hws_flash_regacc	typeref:struct:ich8_hws_flash_regacc::ich8_flracc	file:
hsf_status	src/ich8lan.c	/^	} hsf_status;$/;"	m	union:ich8_hws_flash_status	typeref:struct:ich8_hws_flash_status::ich8_hsfsts	file:
hw	src/e1000.h	/^	struct e1000_hw hw;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_hw
hw_addr	src/hw.h	/^	void __iomem *hw_addr;$/;"	m	struct:e1000_hw
hw_csum_err	src/e1000.h	/^	u64 hw_csum_err;$/;"	m	struct:e1000_adapter
hw_csum_good	src/e1000.h	/^	u64 hw_csum_good;$/;"	m	struct:e1000_adapter
hwtstamp_config	src/e1000.h	/^	struct hwtstamp_config hwtstamp_config;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::hwtstamp_config
i	src/param.c	/^				int i;$/;"	m	struct:e1000_option::__anon4::__anon6::e1000_opt_list	file:
i_private	src/kcompat.h	1955;"	d
iac	src/hw.h	/^	u64 iac;$/;"	m	struct:e1000_hw_stats
ich8_flracc	src/ich8lan.c	/^	struct ich8_flracc {$/;"	s	union:ich8_hws_flash_regacc	file:
ich8_hsflctl	src/ich8lan.c	/^	struct ich8_hsflctl {$/;"	s	union:ich8_hws_flash_ctrl	file:
ich8_hsfsts	src/ich8lan.c	/^	struct ich8_hsfsts {$/;"	s	union:ich8_hws_flash_status	file:
ich8_hws_flash_ctrl	src/ich8lan.c	/^union ich8_hws_flash_ctrl {$/;"	u	file:
ich8_hws_flash_regacc	src/ich8lan.c	/^union ich8_hws_flash_regacc {$/;"	u	file:
ich8_hws_flash_status	src/ich8lan.c	/^union ich8_hws_flash_status {$/;"	u	file:
ich8_mac_ops	src/ich8lan.c	/^static const struct e1000_mac_operations ich8_mac_ops = {$/;"	v	typeref:struct:e1000_mac_operations	file:
ich8_nvm_ops	src/ich8lan.c	/^static const struct e1000_nvm_operations ich8_nvm_ops = {$/;"	v	typeref:struct:e1000_nvm_operations	file:
ich8_phy_ops	src/ich8lan.c	/^static const struct e1000_phy_operations ich8_phy_ops = {$/;"	v	typeref:struct:e1000_phy_operations	file:
ich8lan	src/hw.h	/^		struct e1000_dev_spec_ich8lan ich8lan;$/;"	m	union:e1000_hw::__anon34	typeref:struct:e1000_hw::__anon34::e1000_dev_spec_ich8lan
icrxatc	src/hw.h	/^	u64 icrxatc;$/;"	m	struct:e1000_hw_stats
icrxdmtc	src/hw.h	/^	u64 icrxdmtc;$/;"	m	struct:e1000_hw_stats
icrxoc	src/hw.h	/^	u64 icrxoc;$/;"	m	struct:e1000_hw_stats
icrxptc	src/hw.h	/^	u64 icrxptc;$/;"	m	struct:e1000_hw_stats
ictxatc	src/hw.h	/^	u64 ictxatc;$/;"	m	struct:e1000_hw_stats
ictxptc	src/hw.h	/^	u64 ictxptc;$/;"	m	struct:e1000_hw_stats
ictxqec	src/hw.h	/^	u64 ictxqec;$/;"	m	struct:e1000_hw_stats
ictxqmtc	src/hw.h	/^	u64 ictxqmtc;$/;"	m	struct:e1000_hw_stats
id	src/hw.h	/^	u32 id;$/;"	m	struct:e1000_phy_info
id_led_init	src/hw.h	/^	s32 (*id_led_init) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
idle_errors	src/hw.h	/^	u32 idle_errors;$/;"	m	struct:e1000_phy_stats
if_mii	src/kcompat.h	1476;"	d
if_mii	src/kcompat.h	1477;"	d
ifs_max_val	src/hw.h	/^	u16 ifs_max_val;$/;"	m	struct:e1000_mac_info
ifs_min_val	src/hw.h	/^	u16 ifs_min_val;$/;"	m	struct:e1000_mac_info
ifs_ratio	src/hw.h	/^	u16 ifs_ratio;$/;"	m	struct:e1000_mac_info
ifs_step_size	src/hw.h	/^	u16 ifs_step_size;$/;"	m	struct:e1000_mac_info
ims_val	src/e1000.h	/^	u32 ims_val;$/;"	m	struct:e1000_ring
in_ifs_mode	src/hw.h	/^	bool in_ifs_mode;$/;"	m	struct:e1000_mac_info
init_hw	src/hw.h	/^	s32 (*init_hw) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
int_mode	src/e1000.h	/^	int int_mode;$/;"	m	struct:e1000_adapter
ip_config	src/hw.h	/^		__le32 ip_config;$/;"	m	union:e1000_context_desc::__anon24
ip_fields	src/hw.h	/^		} ip_fields;$/;"	m	union:e1000_context_desc::__anon24	typeref:struct:e1000_context_desc::__anon24::__anon25
ip_hdr	src/kcompat.h	2141;"	d
ip_id	src/hw.h	/^					__le16 ip_id;	\/* IP id *\/$/;"	m	struct:e1000_rx_desc_extended::__anon8::__anon9::__anon10::__anon11
ip_id	src/hw.h	/^					__le16 ip_id;	\/* IP id *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon14::__anon15::__anon16::__anon17
ipcse	src/hw.h	/^			__le16 ipcse;	\/* IP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon24::__anon25
ipcso	src/hw.h	/^			u8 ipcso;	\/* IP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon24::__anon25
ipcss	src/hw.h	/^			u8 ipcss;	\/* IP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon24::__anon25
ipv6_hdr	src/kcompat.h	2140;"	d
irq_handler_t	src/kcompat.h	/^typedef irqreturn_t(*irq_handler_t) (int, void *, struct pt_regs *);$/;"	t
irq_handler_t	src/kcompat.h	1999;"	d
irqreturn_t	src/kcompat.h	1877;"	d
is_link_local_ether_addr	src/kcompat.h	3918;"	d
is_mdix	src/hw.h	/^	bool is_mdix;$/;"	m	struct:e1000_phy_info
is_multicast_ether_addr	src/kcompat.h	1738;"	d
is_valid_ether_addr	src/kcompat.h	769;"	d
is_zero_ether_addr	src/kcompat.h	1731;"	d
itr	src/e1000.h	/^	u32 itr;$/;"	m	struct:e1000_adapter
itr_register	src/e1000.h	/^	void __iomem *itr_register;$/;"	m	struct:e1000_ring
itr_setting	src/e1000.h	/^	u32 itr_setting;$/;"	m	struct:e1000_adapter
itr_val	src/e1000.h	/^	u32 itr_val;$/;"	m	struct:e1000_ring
ixgbe_get_netdev_tc_txq	src/kcompat.h	3574;"	d
ixgbe_get_netdev_tc_txq	src/kcompat.h	3575;"	d
k_ethtool_drvinfo	src/kcompat.h	/^struct k_ethtool_drvinfo {$/;"	s
kcalloc	src/kcompat.h	1518;"	d
kfree_rcu	src/kcompat.h	1799;"	d
kfree_rcu	src/kcompat.h	3445;"	d
kmap_atomic	src/kcompat.h	3625;"	d
kmap_atomic	src/kcompat.h	3626;"	d
kmemdup	src/kcompat.h	2031;"	d
kmrn_lock_loss_workaround_enabled	src/hw.h	/^	bool kmrn_lock_loss_workaround_enabled;$/;"	m	struct:e1000_dev_spec_ich8lan
kstrdup	src/kcompat.h	1749;"	d
kunmap_atomic	src/kcompat.h	3633;"	d
kunmap_atomic	src/kcompat.h	3634;"	d
kzalloc	src/kcompat.h	1758;"	d
kzalloc_node	src/kcompat.h	2459;"	d
kzalloc_node	src/kcompat.h	2460;"	d
l	src/param.c	/^		} l;$/;"	m	union:e1000_option::__anon4	typeref:struct:e1000_option::__anon4::__anon6	file:
laa_is_present	src/hw.h	/^	bool laa_is_present;$/;"	m	struct:e1000_dev_spec_82571
lat_enc	src/hw.h	/^	u16 lat_enc;$/;"	m	struct:e1000_dev_spec_ich8lan
latecol	src/hw.h	/^	u64 latecol;$/;"	m	struct:e1000_hw_stats
latency_invalid	src/e1000.h	/^	latency_invalid = 255$/;"	e	enum:latency_range
latency_range	src/e1000.h	/^enum latency_range {$/;"	g
led_blink_task	src/e1000.h	/^	struct work_struct led_blink_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
led_off	src/hw.h	/^	s32 (*led_off) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
led_on	src/hw.h	/^	s32 (*led_on) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
led_status	src/e1000.h	/^	unsigned long led_status;$/;"	m	struct:e1000_adapter
ledctl_default	src/hw.h	/^	u32 ledctl_default;$/;"	m	struct:e1000_mac_info
ledctl_mode1	src/hw.h	/^	u32 ledctl_mode1;$/;"	m	struct:e1000_mac_info
ledctl_mode2	src/hw.h	/^	u32 ledctl_mode2;$/;"	m	struct:e1000_mac_info
len	src/kcompat.h	/^	u32 len;		\/* bytes *\/$/;"	m	struct:_kc_ethtool_regs
len	src/kcompat.h	/^	u32 len;		\/* number of strings in the string set *\/$/;"	m	struct:ethtool_gstrings
len	src/kcompat.h	/^	u32 len;$/;"	m	struct:ethtool_eeprom
len	src/kcompat.h	/^	u32 len;$/;"	m	struct:ethtool_test
length	src/e1000.h	/^			u16 length;$/;"	m	struct:e1000_buffer::__anon35::__anon36
length	src/hw.h	/^			__le16 length;	\/* Data buffer length *\/$/;"	m	struct:e1000_data_desc::__anon30::__anon31
length	src/hw.h	/^			__le16 length;	\/* Data buffer length *\/$/;"	m	struct:e1000_tx_desc::__anon20::__anon21
length	src/hw.h	/^			__le16 length;$/;"	m	struct:e1000_rx_desc_extended::__anon8::__anon12
length	src/hw.h	/^			__le16 length[PS_PAGE_BUFFERS];$/;"	m	struct:e1000_rx_desc_packet_split::__anon14::__anon19
length0	src/hw.h	/^			__le16 length0;	\/* length of buffer 0 *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon14::__anon18
likely	src/kcompat.h	228;"	d
link_duplex	src/e1000.h	/^	u16 link_duplex;$/;"	m	struct:e1000_adapter
link_speed	src/e1000.h	/^	u16 link_speed;$/;"	m	struct:e1000_adapter
list_first_entry_or_null	src/kcompat.h	3992;"	d
list_for_each_safe	src/kcompat.h	890;"	d
list_option	src/param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon3	file:
local_rx	src/hw.h	/^	enum e1000_1000t_rx_status local_rx;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_1000t_rx_status
location	src/kcompat.h	/^	__u32 location;$/;"	m	struct:_kc_ethtool_rx_flow_spec
low_latency	src/e1000.h	/^	low_latency = 1,$/;"	e	enum:latency_range
low_water	src/hw.h	/^	u32 low_water;		\/* Flow control low-water mark *\/$/;"	m	struct:e1000_fc_info
lower	src/hw.h	/^		} lower;$/;"	m	struct:e1000_rx_desc_extended::__anon8	typeref:struct:e1000_rx_desc_extended::__anon8::__anon9
lower	src/hw.h	/^		} lower;$/;"	m	struct:e1000_rx_desc_packet_split::__anon14	typeref:struct:e1000_rx_desc_packet_split::__anon14::__anon15
lower	src/hw.h	/^	} lower;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon30
lower	src/hw.h	/^	} lower;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon20
lower_setup	src/hw.h	/^	} lower_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon24
lowest_latency	src/e1000.h	/^	lowest_latency = 0,$/;"	e	enum:latency_range
lpa	src/e1000.h	/^	u16 lpa;		\/* link partner ability register  *\/$/;"	m	struct:e1000_phy_regs
m_ext	src/kcompat.h	/^	struct _kc_ethtool_flow_ext m_ext;$/;"	m	struct:_kc_ethtool_rx_flow_spec	typeref:struct:_kc_ethtool_rx_flow_spec::_kc_ethtool_flow_ext
m_u	src/kcompat.h	/^	union _kc_ethtool_flow_union m_u;$/;"	m	struct:_kc_ethtool_rx_flow_spec	typeref:union:_kc_ethtool_rx_flow_spec::_kc_ethtool_flow_union
mac	src/e1000.h	/^	enum e1000_mac_type	mac;$/;"	m	struct:e1000_info	typeref:enum:e1000_info::e1000_mac_type
mac	src/hw.h	/^	struct e1000_mac_info mac;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_mac_info
mac_ops	src/e1000.h	/^	const struct e1000_mac_operations *mac_ops;$/;"	m	struct:e1000_info	typeref:struct:e1000_info::e1000_mac_operations
magic	src/kcompat.h	/^	u32 magic;$/;"	m	struct:ethtool_eeprom
mapped_as_page	src/e1000.h	/^			u16 mapped_as_page;$/;"	m	struct:e1000_buffer::__anon35::__anon36
max	src/kcompat.h	872;"	d
max	src/kcompat.h	873;"	d
max	src/param.c	/^			int max;$/;"	m	struct:e1000_option::__anon4::__anon5	file:
max_cable_length	src/hw.h	/^	u16 max_cable_length;$/;"	m	struct:e1000_phy_info
max_frame_size	src/e1000.h	/^	u32 max_frame_size;$/;"	m	struct:e1000_adapter
max_hw_frame_size	src/e1000.h	/^	u32			max_hw_frame_size;$/;"	m	struct:e1000_info
max_hw_frame_size	src/e1000.h	/^	u32 max_hw_frame_size;$/;"	m	struct:e1000_adapter
max_ltr_enc	src/hw.h	/^	u16 max_ltr_enc;$/;"	m	struct:e1000_dev_spec_ich8lan
max_t	src/kcompat.h	884;"	d
mc_filter_type	src/hw.h	/^	u32 mc_filter_type;$/;"	m	struct:e1000_mac_info
mcc	src/hw.h	/^	u64 mcc;$/;"	m	struct:e1000_hw_stats
mdic_wa_enable	src/hw.h	/^	bool mdic_wa_enable;$/;"	m	struct:e1000_dev_spec_80003es2lan
mdio_read	src/kcompat_ethtool.c	/^	int (*mdio_read) (struct net_device * dev, int phy_id, int location);$/;"	m	struct:_kc_mii_if_info	file:
mdio_write	src/kcompat_ethtool.c	/^	void (*mdio_write) (struct net_device * dev, int phy_id, int location,$/;"	m	struct:_kc_mii_if_info	file:
mdix	src/hw.h	/^	u8 mdix;$/;"	m	struct:e1000_phy_info
media_type	src/hw.h	/^	enum e1000_media_type media_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_media_type
mgpdc	src/hw.h	/^	u64 mgpdc;$/;"	m	struct:e1000_hw_stats
mgprc	src/hw.h	/^	u64 mgprc;$/;"	m	struct:e1000_hw_stats
mgptc	src/hw.h	/^	u64 mgptc;$/;"	m	struct:e1000_hw_stats
middle	src/hw.h	/^		} middle;$/;"	m	struct:e1000_rx_desc_packet_split::__anon14	typeref:struct:e1000_rx_desc_packet_split::__anon14::__anon18
might_sleep	src/kcompat.h	1287;"	d
mii_check_link	src/kcompat_ethtool.c	890;"	d	file:
mii_check_link	src/kcompat_ethtool.c	891;"	d	file:
mii_ethtool_gset	src/kcompat_ethtool.c	886;"	d	file:
mii_ethtool_gset	src/kcompat_ethtool.c	887;"	d	file:
mii_ethtool_sset	src/kcompat_ethtool.c	888;"	d	file:
mii_ethtool_sset	src/kcompat_ethtool.c	889;"	d	file:
mii_if_info	src/kcompat_ethtool.c	863;"	d	file:
mii_link_ok	src/kcompat_ethtool.c	882;"	d	file:
mii_link_ok	src/kcompat_ethtool.c	883;"	d	file:
mii_nway_restart	src/kcompat_ethtool.c	884;"	d	file:
mii_nway_restart	src/kcompat_ethtool.c	885;"	d	file:
min	src/kcompat.h	865;"	d
min	src/kcompat.h	866;"	d
min	src/param.c	/^			int min;$/;"	m	struct:e1000_option::__anon4::__anon5	file:
min_cable_length	src/hw.h	/^	u16 min_cable_length;$/;"	m	struct:e1000_phy_info
min_frame_size	src/e1000.h	/^	u32 min_frame_size;$/;"	m	struct:e1000_adapter
min_t	src/kcompat.h	879;"	d
mmd_eee_adv_to_ethtool_adv_t	src/kcompat.h	3790;"	d
mmd_eee_cap_to_ethtool_sup_t	src/kcompat.h	3757;"	d
mmiowb	src/kcompat.h	162;"	d
mmiowb	src/kcompat.h	164;"	d
mng_cookie	src/hw.h	/^	struct e1000_host_mng_dhcp_cookie mng_cookie;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_host_mng_dhcp_cookie
mng_vlan_id	src/e1000.h	/^	u16 mng_vlan_id;$/;"	m	struct:e1000_adapter
modified	src/hw.h	/^	bool modified;$/;"	m	struct:e1000_shadow_ram
module_param	src/kcompat.h	134;"	d
module_param_array_named	src/kcompat.h	1631;"	d
module_param_array_named	src/kcompat.h	1632;"	d
mpc	src/hw.h	/^	u64 mpc;$/;"	m	struct:e1000_hw_stats
mprc	src/hw.h	/^	u64 mprc;$/;"	m	struct:e1000_hw_stats
mptc	src/hw.h	/^	u64 mptc;$/;"	m	struct:e1000_hw_stats
mrq	src/hw.h	/^			__le32 mrq;	\/* Multiple Rx Queues *\/$/;"	m	struct:e1000_rx_desc_extended::__anon8::__anon9
mrq	src/hw.h	/^			__le32 mrq;	\/* Multiple Rx Queues *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon14::__anon15
ms_type	src/hw.h	/^	enum e1000_ms_type ms_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_ms_type
msg_enable	src/e1000.h	/^	u32 msg_enable;$/;"	m	struct:e1000_adapter
msi_remove_pci_irq_vectors	src/kcompat.h	101;"	d
msix_entries	src/e1000.h	/^	struct msix_entry *msix_entries;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::msix_entry
msix_entry	src/kcompat.h	/^struct msix_entry {$/;"	s
msleep	src/kcompat.h	1506;"	d
msleep_interruptible	src/kcompat.h	1546;"	d
mss	src/hw.h	/^			__le16 mss;	\/* Maximum segment size *\/$/;"	m	struct:e1000_context_desc::__anon28::__anon29
mta_reg_count	src/hw.h	/^	u16 mta_reg_count;$/;"	m	struct:e1000_mac_info
mta_shadow	src/hw.h	/^	u32 mta_shadow[MAX_MTA_REG];$/;"	m	struct:e1000_mac_info
mutex_lock	src/kcompat.h	1836;"	d
mutex_unlock	src/kcompat.h	1837;"	d
n_stats	src/kcompat.h	/^	u32 n_stats;$/;"	m	struct:ethtool_stats
n_stats	src/kcompat.h	/^	u32 n_stats;$/;"	m	struct:k_ethtool_drvinfo
name	src/e1000.h	/^	char name[IFNAMSIZ + 5];$/;"	m	struct:e1000_ring
name	src/netdev.c	/^	char *name;$/;"	m	struct:e1000_reg_info	file:
name	src/param.c	/^	const char *name;$/;"	m	struct:e1000_option	file:
napi	src/e1000.h	/^	struct napi_struct napi;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::napi_struct
napi_complete	src/kcompat.h	2320;"	d
napi_complete	src/kcompat.h	2322;"	d
napi_disable	src/kcompat.h	2304;"	d
napi_enable	src/kcompat.h	2303;"	d
napi_gro_receive	src/kcompat.h	194;"	d
napi_schedule	src/kcompat.h	2282;"	d
napi_schedule	src/kcompat.h	2301;"	d
napi_schedule_prep	src/kcompat.h	2280;"	d
napi_schedule_prep	src/kcompat.h	2300;"	d
napi_struct	src/kcompat.h	/^struct napi_struct {$/;"	s
napi_synchronize	src/kcompat.h	/^static inline void napi_synchronize(const struct napi_struct *n)$/;"	f
napi_synchronize	src/kcompat.h	2316;"	d
napi_to_poll_dev	src/kcompat.c	/^struct net_device *napi_to_poll_dev(const struct napi_struct *napi)$/;"	f
napi_to_poll_dev	src/kcompat.h	2288;"	d
net_stats	src/e1000.h	/^	struct net_device_stats net_stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::net_device_stats
netdev	src/e1000.h	/^	struct net_device *netdev;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::net_device
netdev_alert	src/kcompat.h	2988;"	d
netdev_alert	src/kcompat.h	2989;"	d
netdev_alloc_page	src/kcompat.h	2599;"	d
netdev_alloc_skb_ip_align	src/kcompat.h	3191;"	d
netdev_alloc_skb_ip_align	src/kcompat.h	3193;"	d
netdev_completed_queue	src/kcompat.h	3586;"	d
netdev_crit	src/kcompat.h	2991;"	d
netdev_crit	src/kcompat.h	2992;"	d
netdev_dbg	src/kcompat.h	3006;"	d
netdev_dbg	src/kcompat.h	3008;"	d
netdev_dbg	src/kcompat.h	3014;"	d
netdev_emerg	src/kcompat.h	2985;"	d
netdev_emerg	src/kcompat.h	2986;"	d
netdev_err	src/kcompat.h	2994;"	d
netdev_err	src/kcompat.h	2995;"	d
netdev_features_t	src/kcompat.h	/^typedef u32 netdev_features_t;$/;"	t
netdev_for_each_mc_addr	src/kcompat.h	2931;"	d
netdev_for_each_uc_addr	src/kcompat.h	2696;"	d
netdev_for_each_uc_addr	src/kcompat.h	2941;"	d
netdev_info	src/kcompat.h	3003;"	d
netdev_info	src/kcompat.h	3004;"	d
netdev_mc_count	src/kcompat.h	2925;"	d
netdev_mc_empty	src/kcompat.h	2928;"	d
netdev_name	src/kcompat.h	1374;"	d
netdev_name	src/kcompat.h	2961;"	d
netdev_notice	src/kcompat.h	3000;"	d
netdev_notice	src/kcompat.h	3001;"	d
netdev_printk	src/kcompat.h	2964;"	d
netdev_printk	src/kcompat.h	2966;"	d
netdev_printk	src/kcompat.h	2972;"	d
netdev_printk	src/kcompat.h	2980;"	d
netdev_priv	src/kcompat.h	1156;"	d
netdev_reset_queue	src/kcompat.h	3590;"	d
netdev_sent_queue	src/kcompat.h	3588;"	d
netdev_to_dev	src/kcompat.h	/^static inline struct device *netdev_to_dev(struct net_device *netdev)$/;"	f
netdev_to_dev	src/kcompat.h	2124;"	d
netdev_tx_completed_queue	src/kcompat.h	3585;"	d
netdev_tx_reset_queue	src/kcompat.h	3589;"	d
netdev_tx_sent_queue	src/kcompat.h	3587;"	d
netdev_tx_t	src/kcompat.h	2750;"	d
netdev_tx_t	src/kcompat.h	2751;"	d
netdev_uc_count	src/kcompat.h	2693;"	d
netdev_uc_count	src/kcompat.h	2935;"	d
netdev_uc_empty	src/kcompat.h	2938;"	d
netdev_warn	src/kcompat.h	2997;"	d
netdev_warn	src/kcompat.h	2998;"	d
netif_alert	src/kcompat.h	3032;"	d
netif_alert	src/kcompat.h	3033;"	d
netif_crit	src/kcompat.h	3035;"	d
netif_crit	src/kcompat.h	3036;"	d
netif_dbg	src/kcompat.h	3050;"	d
netif_dbg	src/kcompat.h	3051;"	d
netif_emerg	src/kcompat.h	3029;"	d
netif_emerg	src/kcompat.h	3030;"	d
netif_err	src/kcompat.h	3038;"	d
netif_err	src/kcompat.h	3039;"	d
netif_info	src/kcompat.h	3047;"	d
netif_info	src/kcompat.h	3048;"	d
netif_is_multiqueue	src/kcompat.h	2561;"	d
netif_level	src/kcompat.h	3195;"	d
netif_level	src/kcompat.h	3196;"	d
netif_msg_drv	src/kcompat.h	937;"	d
netif_msg_hw	src/kcompat.h	1015;"	d
netif_msg_ifdown	src/kcompat.h	941;"	d
netif_msg_ifup	src/kcompat.h	942;"	d
netif_msg_init	src/kcompat.h	1137;"	d
netif_msg_intr	src/kcompat.h	946;"	d
netif_msg_link	src/kcompat.h	939;"	d
netif_msg_pktdata	src/kcompat.h	949;"	d
netif_msg_probe	src/kcompat.h	938;"	d
netif_msg_rx_err	src/kcompat.h	943;"	d
netif_msg_rx_status	src/kcompat.h	948;"	d
netif_msg_timer	src/kcompat.h	940;"	d
netif_msg_tx_done	src/kcompat.h	947;"	d
netif_msg_tx_err	src/kcompat.h	944;"	d
netif_msg_tx_queued	src/kcompat.h	945;"	d
netif_msg_wol	src/kcompat.h	1018;"	d
netif_napi_add	src/kcompat.h	2259;"	d
netif_napi_add	src/kcompat.h	2289;"	d
netif_napi_add	src/kcompat.h	2329;"	d
netif_napi_del	src/kcompat.h	2273;"	d
netif_napi_del	src/kcompat.h	2299;"	d
netif_napi_del	src/kcompat.h	2338;"	d
netif_napi_del	src/kcompat.h	2514;"	d
netif_napi_del	src/kcompat.h	2517;"	d
netif_napi_del	src/kcompat.h	2518;"	d
netif_notice	src/kcompat.h	3044;"	d
netif_notice	src/kcompat.h	3045;"	d
netif_poll_disable	src/kcompat.h	1079;"	d
netif_poll_enable	src/kcompat.h	1090;"	d
netif_printk	src/kcompat.h	3022;"	d
netif_printk	src/kcompat.h	3023;"	d
netif_set_real_num_rx_queues	src/kcompat.h	3231;"	d
netif_set_real_num_tx_queues	src/kcompat.h	3128;"	d
netif_set_real_num_tx_queues	src/kcompat.h	3131;"	d
netif_set_real_num_tx_queues	src/kcompat.h	3137;"	d
netif_start_subqueue	src/kcompat.h	2541;"	d
netif_start_subqueue	src/kcompat.h	2542;"	d
netif_start_subqueue	src/kcompat.h	2557;"	d
netif_stop_subqueue	src/kcompat.h	2534;"	d
netif_stop_subqueue	src/kcompat.h	2535;"	d
netif_stop_subqueue	src/kcompat.h	2556;"	d
netif_subqueue_stopped	src/kcompat.h	2220;"	d
netif_tx_disable	src/kcompat.h	1098;"	d
netif_tx_start_all_queues	src/kcompat.h	2533;"	d
netif_tx_start_all_queues	src/kcompat.h	2552;"	d
netif_tx_start_all_queues	src/kcompat.h	2554;"	d
netif_tx_stop_all_queues	src/kcompat.h	2531;"	d
netif_tx_stop_all_queues	src/kcompat.h	2549;"	d
netif_tx_wake_all_queues	src/kcompat.h	2532;"	d
netif_tx_wake_all_queues	src/kcompat.h	2550;"	d
netif_wake_subqueue	src/kcompat.h	2562;"	d
netif_warn	src/kcompat.h	3041;"	d
netif_warn	src/kcompat.h	3042;"	d
new_handler_t	src/kcompat.h	/^typedef irqreturn_t(*new_handler_t) (int, void *);$/;"	t
next	src/kcompat.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::hlist_node
next_to_clean	src/e1000.h	/^	u16 next_to_clean;$/;"	m	struct:e1000_ring
next_to_use	src/e1000.h	/^	u16 next_to_use;$/;"	m	struct:e1000_ring
next_to_watch	src/e1000.h	/^			u16 next_to_watch;$/;"	m	struct:e1000_buffer::__anon35::__anon36
node	src/e1000.h	/^	int node; \/* store the node to allocate memory on *\/$/;"	m	struct:e1000_adapter
node_online	src/kcompat.h	242;"	d
node_online_map	src/kcompat.h	1646;"	d
node_online_map	src/kcompat.h	1647;"	d
nr	src/param.c	/^			int nr;$/;"	m	struct:e1000_option::__anon4::__anon6	file:
nr_cpus_node	src/kcompat.h	2680;"	d
nr_cpus_node	src/kcompat.h	2681;"	d
num_online_cpus	src/kcompat.h	246;"	d
num_online_nodes	src/kcompat.h	1643;"	d
num_online_nodes	src/kcompat.h	1644;"	d
num_vectors	src/e1000.h	/^	unsigned int num_vectors;$/;"	m	struct:e1000_adapter
numa_node_id	src/kcompat.h	3121;"	d
number	src/kcompat.c	/^static char *number(char *buf, char *end, long long num, int base, int size,$/;"	f	file:
nvm	src/hw.h	/^	struct e1000_nvm_info nvm;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_nvm_info
nvm_k1_enabled	src/hw.h	/^	bool nvm_k1_enabled;$/;"	m	struct:e1000_dev_spec_ich8lan
nvm_ops	src/e1000.h	/^	const struct e1000_nvm_operations *nvm_ops;$/;"	m	struct:e1000_info	typeref:struct:e1000_info::e1000_nvm_operations
nway_reset	src/kcompat_ethtool.c	/^	int (*nway_reset) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
offset	src/kcompat.h	/^	u32 offset;$/;"	m	struct:ethtool_eeprom
ofs	src/netdev.c	/^	u32 ofs;$/;"	m	struct:e1000_reg_info	file:
opcode_bits	src/hw.h	/^	u16 opcode_bits;$/;"	m	struct:e1000_nvm_info
ops	src/hw.h	/^	struct e1000_mac_operations ops;$/;"	m	struct:e1000_mac_info	typeref:struct:e1000_mac_info::e1000_mac_operations
ops	src/hw.h	/^	struct e1000_nvm_operations ops;$/;"	m	struct:e1000_nvm_info	typeref:struct:e1000_nvm_info::e1000_nvm_operations
ops	src/hw.h	/^	struct e1000_phy_operations ops;$/;"	m	struct:e1000_phy_info	typeref:struct:e1000_phy_info::e1000_phy_operations
original_ms_type	src/hw.h	/^	enum e1000_ms_type original_ms_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_ms_type
override	src/hw.h	/^	enum e1000_nvm_override override;$/;"	m	struct:e1000_nvm_info	typeref:enum:e1000_nvm_info::e1000_nvm_override
p	src/param.c	/^			} *p;$/;"	m	struct:e1000_option::__anon4::__anon6	typeref:struct:e1000_option::__anon4::__anon6::e1000_opt_list	file:
page	src/e1000.h	/^			struct page *page;$/;"	m	struct:e1000_buffer::__anon35::__anon37	typeref:struct:e1000_buffer::__anon35::__anon37::page
page	src/e1000.h	/^	struct page *page;$/;"	m	struct:e1000_ps_page	typeref:struct:e1000_ps_page::page
page_count	src/kcompat.h	1346;"	d
page_size	src/hw.h	/^	u16 page_size;$/;"	m	struct:e1000_nvm_info
page_to_nid	src/kcompat.h	1470;"	d
pause_time	src/hw.h	/^	u16 pause_time;		\/* Flow control pause timer *\/$/;"	m	struct:e1000_fc_info
pba	src/e1000.h	/^	u32			pba;$/;"	m	struct:e1000_info
pba	src/e1000.h	/^	u32 pba;$/;"	m	struct:e1000_adapter
pci_channel_offline	src/kcompat.h	2113;"	d
pci_choose_state	src/kcompat.h	1659;"	d
pci_cleanup_aer_uncorrect_error_status	src/kcompat.h	2028;"	d
pci_clear_master	src/kcompat.h	2634;"	d
pci_clear_mwi	src/kcompat.h	847;"	d
pci_config_space_ich8lan	src/kcompat.h	2005;"	d
pci_dev_run_wake	src/kcompat.h	2949;"	d
pci_dev_to_dev	src/kcompat.h	/^static inline struct device *pci_dev_to_dev(struct pci_dev *pdev)$/;"	f
pci_disable_device	src/kcompat.h	835;"	d
pci_disable_link_state	src/kcompat.h	2463;"	d
pci_disable_link_state_locked	src/kcompat.h	3425;"	d
pci_disable_msi	src/kcompat.h	95;"	d
pci_disable_msi	src/kcompat.h	96;"	d
pci_disable_msix	src/kcompat.h	100;"	d
pci_disable_msix	src/kcompat.h	99;"	d
pci_disable_pcie_error_reporting	src/kcompat.h	2027;"	d
pci_disable_sriov	src/kcompat.h	2658;"	d
pci_disable_sriov	src/kcompat.h	2659;"	d
pci_dma_mapping_error	src/kcompat.h	1441;"	d
pci_drvdata	src/kcompat_ethtool.c	/^	void *pci_drvdata;$/;"	m	struct:_kc_pci_dev_ext	file:
pci_enable_device_mem	src/kcompat.h	2412;"	d
pci_enable_msi	src/kcompat.h	93;"	d
pci_enable_msi	src/kcompat.h	94;"	d
pci_enable_msix	src/kcompat.h	97;"	d
pci_enable_msix	src/kcompat.h	98;"	d
pci_enable_msix_range	src/kcompat.h	4074;"	d
pci_enable_pcie_error_reporting	src/kcompat.h	/^static inline int pci_enable_pcie_error_reporting(struct pci_dev *dev)$/;"	f
pci_enable_sriov	src/kcompat.h	2656;"	d
pci_enable_sriov	src/kcompat.h	2657;"	d
pci_enable_wake	src/kcompat.h	830;"	d
pci_get_class	src/kcompat.h	1648;"	d
pci_get_device	src/kcompat.h	1127;"	d
pci_ioremap_bar	src/kcompat.h	2593;"	d
pci_is_pcie	src/kcompat.h	/^static inline bool pci_is_pcie(struct pci_dev *dev)$/;"	f
pci_map_page	src/kcompat.h	965;"	d
pci_name	src/kcompat.h	1062;"	d
pci_num_vf	src/kcompat.h	2915;"	d
pci_pcie_cap	src/kcompat.h	2824;"	d
pci_pcie_type	src/kcompat.h	/^static inline u8 pci_pcie_type(struct pci_dev *pdev)$/;"	f
pci_pcie_type	src/kcompat.h	3840;"	d
pci_power_t	src/kcompat.h	/^typedef int pci_power_t;$/;"	t
pci_prepare_to_sleep	src/kcompat.h	2596;"	d
pci_register_driver	src/kcompat.h	1163;"	d
pci_register_driver	src/kcompat.h	1164;"	d
pci_register_driver	src/kcompat.h	2158;"	d
pci_release_regions	src/kcompat.h	756;"	d
pci_release_selected_regions	src/kcompat.h	2117;"	d
pci_request_regions	src/kcompat.h	751;"	d
pci_request_selected_regions	src/kcompat.h	2115;"	d
pci_request_selected_regions_exclusive	src/kcompat.h	2621;"	d
pci_restore_state	src/kcompat.h	2012;"	d
pci_restore_state	src/kcompat.h	2014;"	d
pci_save_state	src/kcompat.h	2009;"	d
pci_save_state	src/kcompat.h	2011;"	d
pci_set_dma_mask	src/kcompat.h	746;"	d
pci_set_mwi	src/kcompat.h	845;"	d
pci_set_power_state	src/kcompat.h	825;"	d
pci_sriov_set_totalvfs	src/kcompat.h	3895;"	d
pci_unmap_addr	src/kcompat.h	1940;"	d
pci_unmap_addr_set	src/kcompat.h	1942;"	d
pci_unmap_len	src/kcompat.h	1944;"	d
pci_unmap_len_set	src/kcompat.h	1946;"	d
pci_unmap_page	src/kcompat.h	971;"	d
pci_wake_from_d3	src/kcompat.h	2595;"	d
pcie_aspm_enabled	src/kcompat.h	2627;"	d
pcie_capability_clear_and_set_word	src/kcompat.h	3863;"	d
pcie_capability_clear_word	src/kcompat.h	3869;"	d
pcie_capability_read_word	src/kcompat.h	3852;"	d
pcie_capability_write_word	src/kcompat.h	3857;"	d
pdev	src/e1000.h	/^	struct pci_dev *pdev;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::pci_dev
pdev	src/kcompat.h	/^	struct pci_dev pdev;$/;"	m	struct:device	typeref:struct:device::pci_dev
pdev_printk	src/kcompat.h	1193;"	d
perm_addr	src/hw.h	/^	u8 perm_addr[ETH_ALEN];$/;"	m	struct:e1000_mac_info
phy	src/hw.h	/^	struct e1000_phy_info phy;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_phy_info
phy_hang_count	src/e1000.h	/^	int phy_hang_count;$/;"	m	struct:e1000_adapter
phy_id	src/kcompat_ethtool.c	/^	int phy_id;$/;"	m	struct:_kc_mii_if_info	file:
phy_id_mask	src/kcompat_ethtool.c	/^	int phy_id_mask;$/;"	m	struct:_kc_mii_if_info	file:
phy_info	src/e1000.h	/^	struct e1000_phy_info phy_info;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_phy_info
phy_info_timer	src/e1000.h	/^	struct timer_list phy_info_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
phy_ops	src/e1000.h	/^	const struct e1000_phy_operations *phy_ops;$/;"	m	struct:e1000_info	typeref:struct:e1000_info::e1000_phy_operations
phy_regs	src/e1000.h	/^	struct e1000_phy_regs phy_regs;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_phy_regs
phy_stats	src/e1000.h	/^	struct e1000_phy_stats phy_stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_phy_stats
phys_id	src/kcompat_ethtool.c	/^	int (*phys_id) (struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
pkt_rate_high	src/kcompat.h	/^	u32 pkt_rate_high;$/;"	m	struct:_kc_ethtool_coalesce
pkt_rate_low	src/kcompat.h	/^	u32 pkt_rate_low;$/;"	m	struct:_kc_ethtool_coalesce
pm_message_t	src/kcompat.h	1756;"	d
pm_qos_add_requirement	src/kcompat.h	2393;"	d
pm_qos_add_requirement	src/kcompat.h	2401;"	d
pm_qos_remove_requirement	src/kcompat.h	2395;"	d
pm_qos_remove_requirement	src/kcompat.h	2402;"	d
pm_qos_update_requirement	src/kcompat.h	2397;"	d
pm_qos_update_requirement	src/kcompat.h	2403;"	d
pm_runtime_disable	src/kcompat.h	2791;"	d
pm_runtime_enable	src/kcompat.h	2800;"	d
pm_runtime_get_noresume	src/kcompat.h	2803;"	d
pm_runtime_get_sync	src/kcompat.h	2764;"	d
pm_runtime_get_sync	src/kcompat.h	2772;"	d
pm_runtime_put	src/kcompat.h	2776;"	d
pm_runtime_put_noidle	src/kcompat.h	2794;"	d
pm_runtime_put_sync	src/kcompat.h	2779;"	d
pm_runtime_resume	src/kcompat.h	2782;"	d
pm_runtime_set_active	src/kcompat.h	2797;"	d
pm_runtime_set_suspended	src/kcompat.h	2788;"	d
pm_runtime_suspended	src/kcompat.h	3094;"	d
pm_runtime_suspended	src/kcompat.h	3102;"	d
pm_schedule_suspend	src/kcompat.h	2785;"	d
polarity_correction	src/hw.h	/^	bool polarity_correction;$/;"	m	struct:e1000_phy_info
poll	src/kcompat.h	/^	int (*poll) (struct napi_struct *, int);$/;"	m	struct:napi_struct
popts	src/hw.h	/^			u8 popts;	\/* Packet Options *\/$/;"	m	struct:e1000_data_desc::__anon32::__anon33
power_down	src/hw.h	/^	void (*power_down) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
power_up	src/hw.h	/^	void (*power_up) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
pprev	src/kcompat.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::
pr_cont	src/kcompat.h	2662;"	d
pr_err	src/kcompat.h	2360;"	d
pr_fmt	src/netdev.c	23;"	d	file:
prc1023	src/hw.h	/^	u64 prc1023;$/;"	m	struct:e1000_hw_stats
prc127	src/hw.h	/^	u64 prc127;$/;"	m	struct:e1000_hw_stats
prc1522	src/hw.h	/^	u64 prc1522;$/;"	m	struct:e1000_hw_stats
prc255	src/hw.h	/^	u64 prc255;$/;"	m	struct:e1000_hw_stats
prc511	src/hw.h	/^	u64 prc511;$/;"	m	struct:e1000_hw_stats
prc64	src/hw.h	/^	u64 prc64;$/;"	m	struct:e1000_hw_stats
prefetch	src/kcompat.h	1666;"	d
print_hang_task	src/e1000.h	/^	struct work_struct print_hang_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
print_hex_dump	src/kcompat.h	2198;"	d
ps_pages	src/e1000.h	/^			struct e1000_ps_page *ps_pages;$/;"	m	struct:e1000_buffer::__anon35::__anon37	typeref:struct:e1000_buffer::__anon35::__anon37::e1000_ps_page
ptc1023	src/hw.h	/^	u64 ptc1023;$/;"	m	struct:e1000_hw_stats
ptc127	src/hw.h	/^	u64 ptc127;$/;"	m	struct:e1000_hw_stats
ptc1522	src/hw.h	/^	u64 ptc1522;$/;"	m	struct:e1000_hw_stats
ptc255	src/hw.h	/^	u64 ptc255;$/;"	m	struct:e1000_hw_stats
ptc511	src/hw.h	/^	u64 ptc511;$/;"	m	struct:e1000_hw_stats
ptc64	src/hw.h	/^	u64 ptc64;$/;"	m	struct:e1000_hw_stats
ptp_clock	src/e1000.h	/^	struct ptp_clock *ptp_clock;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::ptp_clock
ptp_clock_info	src/e1000.h	/^	struct ptp_clock_info ptp_clock_info;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::ptp_clock_info
ptp_clock_register	src/kcompat.h	3847;"	d
put_cpu	src/kcompat.h	1321;"	d
put_cpu	src/kcompat.h	1322;"	d
r	src/param.c	/^		} r;$/;"	m	union:e1000_option::__anon4	typeref:struct:e1000_option::__anon4::__anon5	file:
range_option	src/param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon3	file:
rar_entry_count	src/hw.h	/^	u16 rar_entry_count;$/;"	m	struct:e1000_mac_info
rar_get_count	src/hw.h	/^	u32 (*rar_get_count) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
rar_set	src/hw.h	/^	int (*rar_set) (struct e1000_hw *, u8 *, u32);$/;"	m	struct:e1000_mac_operations
rate_sample_interval	src/kcompat.h	/^	u32 rate_sample_interval;$/;"	m	struct:_kc_ethtool_coalesce
read	src/hw.h	/^	s32 (*read) (struct e1000_hw *, u16, u16, u16 *);$/;"	m	struct:e1000_nvm_operations
read	src/hw.h	/^	} read;$/;"	m	union:e1000_rx_desc_extended	typeref:struct:e1000_rx_desc_extended::__anon7
read	src/hw.h	/^	} read;$/;"	m	union:e1000_rx_desc_packet_split	typeref:struct:e1000_rx_desc_packet_split::__anon13
read_barrier_depends	src/kcompat.h	1316;"	d
read_mac_addr	src/hw.h	/^	s32 (*read_mac_addr) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
read_reg	src/hw.h	/^	s32 (*read_reg) (struct e1000_hw *, u32, u16 *);$/;"	m	struct:e1000_phy_operations
read_reg_locked	src/hw.h	/^	s32 (*read_reg_locked) (struct e1000_hw *, u32, u16 *);$/;"	m	struct:e1000_phy_operations
read_reg_page	src/hw.h	/^	s32 (*read_reg_page) (struct e1000_hw *, u32, u16 *);$/;"	m	struct:e1000_phy_operations
receive_errors	src/hw.h	/^	u32 receive_errors;$/;"	m	struct:e1000_phy_stats
refresh_time	src/hw.h	/^	u16 refresh_time;	\/* Flow control refresh timer *\/$/;"	m	struct:e1000_fc_info
reg_num_mask	src/kcompat_ethtool.c	/^	int reg_num_mask;$/;"	m	struct:_kc_mii_if_info	file:
reg_pattern_test	src/ethtool.c	/^static bool reg_pattern_test(struct e1000_adapter *adapter, u64 *data,$/;"	f	file:
reg_set_and_check	src/ethtool.c	/^static bool reg_set_and_check(struct e1000_adapter *adapter, u64 *data,$/;"	f	file:
regdump_len	src/kcompat.h	/^	u32 regdump_len;$/;"	m	struct:k_ethtool_drvinfo
regval	src/ich8lan.c	/^	u16 regval;$/;"	m	union:ich8_hws_flash_ctrl	file:
regval	src/ich8lan.c	/^	u16 regval;$/;"	m	union:ich8_hws_flash_regacc	file:
regval	src/ich8lan.c	/^	u16 regval;$/;"	m	union:ich8_hws_flash_status	file:
release	src/hw.h	/^	void (*release) (struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
release	src/hw.h	/^	void (*release) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
reload	src/hw.h	/^	void (*reload) (struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
remote_rx	src/hw.h	/^	enum e1000_1000t_rx_status remote_rx;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_1000t_rx_status
request_irq	src/kcompat.h	1996;"	d
request_irq	src/kcompat.h	1997;"	d
requested_mode	src/hw.h	/^	enum e1000_fc_mode requested_mode;	\/* FC mode requested by caller *\/$/;"	m	struct:e1000_fc_info	typeref:enum:e1000_fc_info::e1000_fc_mode
reserved	src/hw.h	/^		__le64 reserved;$/;"	m	struct:e1000_rx_desc_extended::__anon7
reserved	src/hw.h	/^		__le64 reserved;$/;"	m	struct:e1000_rx_desc_packet_split::__anon14
reserved	src/ich8lan.c	/^		u16 reserved:5;	\/* 7:3 Reserved  *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
reserved	src/kcompat.h	/^	u32 reserved;$/;"	m	struct:ethtool_test
reserved0	src/hw.h	/^	u8 reserved0;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved1	src/hw.h	/^	u16 reserved1;$/;"	m	struct:e1000_host_mng_command_header
reserved1	src/hw.h	/^	u32 reserved1;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved1	src/ich8lan.c	/^		u16 reserved1:2;	\/* bit 13:6 Reserved *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
reserved1	src/kcompat.h	/^	char reserved1[32];$/;"	m	struct:k_ethtool_drvinfo
reserved2	src/hw.h	/^	u16 reserved2;$/;"	m	struct:e1000_host_mng_command_header
reserved2	src/hw.h	/^	u16 reserved2;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved2	src/ich8lan.c	/^		u16 reserved2:6;	\/* bit 13:6 Reserved *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
reserved2	src/kcompat.h	/^	char reserved2[16];$/;"	m	struct:k_ethtool_drvinfo
reserved3	src/hw.h	/^	u8 reserved3;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reset	src/hw.h	/^	s32 (*reset) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
reset_delay_us	src/hw.h	/^	u32 reset_delay_us;	\/* in usec *\/$/;"	m	struct:e1000_phy_info
reset_hw	src/hw.h	/^	s32 (*reset_hw) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
reset_task	src/e1000.h	/^	struct work_struct reset_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
resource_size_t	src/kcompat.h	1915;"	d
restart_queue	src/e1000.h	/^	unsigned int restart_queue;$/;"	m	struct:e1000_adapter
revision	src/hw.h	/^	u32 revision;$/;"	m	struct:e1000_phy_info
revision_id	src/e1000.h	/^	u8 revision_id;$/;"	m	struct:e1000_adapter
rfc	src/hw.h	/^	u64 rfc;$/;"	m	struct:e1000_hw_stats
ring_cookie	src/kcompat.h	/^	__u64 ring_cookie;$/;"	m	struct:_kc_ethtool_rx_flow_spec
rjc	src/hw.h	/^	u64 rjc;$/;"	m	struct:e1000_hw_stats
rlec	src/hw.h	/^	u64 rlec;$/;"	m	struct:e1000_hw_stats
rnbc	src/hw.h	/^	u64 rnbc;$/;"	m	struct:e1000_hw_stats
roc	src/hw.h	/^	u64 roc;$/;"	m	struct:e1000_hw_stats
round_jiffies	src/kcompat.h	2067;"	d
rounddown_pow_of_two	src/kcompat.h	2365;"	d
rss	src/hw.h	/^				__le32 rss;	\/* RSS Hash *\/$/;"	m	union:e1000_rx_desc_extended::__anon8::__anon9::__anon10
rss	src/hw.h	/^				__le32 rss;	\/* RSS Hash *\/$/;"	m	union:e1000_rx_desc_packet_split::__anon14::__anon15::__anon16
ruc	src/hw.h	/^	u64 ruc;$/;"	m	struct:e1000_hw_stats
rx_abs_int_delay	src/e1000.h	/^	u32 rx_abs_int_delay;$/;"	m	struct:e1000_adapter
rx_buffer_len	src/e1000.h	/^	u32 rx_buffer_len;$/;"	m	struct:e1000_adapter
rx_coalesce_usecs	src/kcompat.h	/^	u32 rx_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_high	src/kcompat.h	/^	u32 rx_coalesce_usecs_high;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_irq	src/kcompat.h	/^	u32 rx_coalesce_usecs_irq;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_low	src/kcompat.h	/^	u32 rx_coalesce_usecs_low;$/;"	m	struct:_kc_ethtool_coalesce
rx_dma_failed	src/e1000.h	/^	u32 rx_dma_failed;$/;"	m	struct:e1000_adapter
rx_dropped_backlog	src/e1000.h	/^	u64 rx_dropped_backlog;		\/* count drops from rx int handler *\/$/;"	m	struct:e1000_adapter
rx_hdr_split	src/e1000.h	/^	u64 rx_hdr_split;$/;"	m	struct:e1000_adapter
rx_hwtstamp_cleared	src/e1000.h	/^	u32 rx_hwtstamp_cleared;$/;"	m	struct:e1000_adapter
rx_int_delay	src/e1000.h	/^	u32 rx_int_delay;$/;"	m	struct:e1000_adapter
rx_itr	src/e1000.h	/^	u16 rx_itr;$/;"	m	struct:e1000_adapter
rx_jumbo_max_pending	src/kcompat.h	/^	u32 rx_jumbo_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_jumbo_pending	src/kcompat.h	/^	u32 rx_jumbo_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_max_coalesced_frames	src/kcompat.h	/^	u32 rx_max_coalesced_frames;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_high	src/kcompat.h	/^	u32 rx_max_coalesced_frames_high;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_irq	src/kcompat.h	/^	u32 rx_max_coalesced_frames_irq;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_low	src/kcompat.h	/^	u32 rx_max_coalesced_frames_low;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_pending	src/kcompat.h	/^	u32 rx_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_mini_max_pending	src/kcompat.h	/^	u32 rx_mini_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_mini_pending	src/kcompat.h	/^	u32 rx_mini_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_pause	src/kcompat.h	/^	u32 rx_pause;$/;"	m	struct:_kc_ethtool_pauseparam
rx_pending	src/kcompat.h	/^	u32 rx_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_ps_bsize0	src/e1000.h	/^	u16 rx_ps_bsize0;$/;"	m	struct:e1000_adapter
rx_ps_pages	src/e1000.h	/^	unsigned int rx_ps_pages;$/;"	m	struct:e1000_adapter
rx_ring	src/e1000.h	/^	struct e1000_ring *rx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_ring
rx_ring_count	src/e1000.h	/^	u16 rx_ring_count;$/;"	m	struct:e1000_adapter
rx_skb_top	src/e1000.h	/^	struct sk_buff *rx_skb_top;$/;"	m	struct:e1000_ring	typeref:struct:e1000_ring::sk_buff
rxerrc	src/hw.h	/^	u64 rxerrc;$/;"	m	struct:e1000_hw_stats
rxtop	src/netdev.c	1679;"	d	file:
scc	src/hw.h	/^	u64 scc;$/;"	m	struct:e1000_hw_stats
schedule_work	src/kcompat.h	1306;"	d
scnprintf	src/kcompat.h	1452;"	d
sec	src/hw.h	/^	u64 sec;$/;"	m	struct:e1000_hw_stats
segs	src/e1000.h	/^			unsigned int segs;$/;"	m	struct:e1000_buffer::__anon35::__anon36
self_test	src/kcompat_ethtool.c	/^	void (*self_test) (struct net_device *, struct ethtool_test *, u64 *);$/;"	m	struct:_kc_ethtool_ops	file:
self_test_count	src/kcompat_ethtool.c	/^	int (*self_test_count) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
send_xon	src/hw.h	/^	bool send_xon;		\/* Flow control send XON *\/$/;"	m	struct:e1000_fc_info
serdes_has_link	src/hw.h	/^	bool serdes_has_link;$/;"	m	struct:e1000_mac_info
serdes_link_state	src/hw.h	/^	enum e1000_serdes_link_state serdes_link_state;$/;"	m	struct:e1000_mac_info	typeref:enum:e1000_mac_info::e1000_serdes_link_state
set_coalesce	src/kcompat_ethtool.c	/^	int (*set_coalesce) (struct net_device *, struct ethtool_coalesce *);$/;"	m	struct:_kc_ethtool_ops	file:
set_d0_lplu_state	src/hw.h	/^	s32 (*set_d0_lplu_state) (struct e1000_hw *, bool);$/;"	m	struct:e1000_phy_operations
set_d3_lplu_state	src/hw.h	/^	s32 (*set_d3_lplu_state) (struct e1000_hw *, bool);$/;"	m	struct:e1000_phy_operations
set_dev_node	src/kcompat.h	2074;"	d
set_dev_node	src/kcompat.h	2076;"	d
set_eeprom	src/kcompat_ethtool.c	/^	int (*set_eeprom) (struct net_device *, struct ethtool_eeprom *, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
set_itr	src/e1000.h	/^	int set_itr;$/;"	m	struct:e1000_ring
set_lan_id	src/hw.h	/^	void (*set_lan_id) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
set_msglevel	src/kcompat_ethtool.c	/^	void (*set_msglevel) (struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_page	src/hw.h	/^	s32 (*set_page) (struct e1000_hw *, u16);$/;"	m	struct:e1000_phy_operations
set_pauseparam	src/kcompat_ethtool.c	/^	int (*set_pauseparam) (struct net_device *,$/;"	m	struct:_kc_ethtool_ops	file:
set_ringparam	src/kcompat_ethtool.c	/^	int (*set_ringparam) (struct net_device *, struct ethtool_ringparam *);$/;"	m	struct:_kc_ethtool_ops	file:
set_rx_csum	src/kcompat_ethtool.c	/^	int (*set_rx_csum) (struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_settings	src/kcompat_ethtool.c	/^	int (*set_settings) (struct net_device *, struct ethtool_cmd *);$/;"	m	struct:_kc_ethtool_ops	file:
set_sg	src/kcompat_ethtool.c	/^	int (*set_sg) (struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_tso	src/kcompat_ethtool.c	/^	int (*set_tso) (struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_tx_csum	src/kcompat_ethtool.c	/^	int (*set_tx_csum) (struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_wol	src/kcompat_ethtool.c	/^	int (*set_wol) (struct net_device *, struct ethtool_wolinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
setup_led	src/hw.h	/^	s32 (*setup_led) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
setup_link	src/hw.h	/^	s32 (*setup_link) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
setup_physical_interface	src/hw.h	/^	s32 (*setup_physical_interface) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
setup_timer	src/kcompat.h	1805;"	d
shadow_ram	src/hw.h	/^	struct e1000_shadow_ram shadow_ram[E1000_ICH8_SHADOW_RAM_WORDS];$/;"	m	struct:e1000_dev_spec_ich8lan	typeref:struct:e1000_dev_spec_ich8lan::e1000_shadow_ram
signature	src/hw.h	/^	u32 signature;$/;"	m	struct:e1000_host_mng_dhcp_cookie
simple_open	src/kcompat.h	3616;"	d
simple_write_to_buffer	src/kcompat.h	3118;"	d
size	src/e1000.h	/^	unsigned int size;		\/* length of ring in bytes *\/$/;"	m	struct:e1000_ring
sizeof_stat	src/ethtool.c	/^	int sizeof_stat;$/;"	m	struct:e1000_stats	file:
sk_protocol	src/kcompat.h	1126;"	d
sk_tx_queue_get	src/kcompat.h	2890;"	d
sk_tx_queue_set	src/kcompat.h	2891;"	d
skb	src/e1000.h	/^	struct sk_buff *skb;$/;"	m	struct:e1000_buffer	typeref:struct:e1000_buffer::sk_buff
skb_add_rx_frag	src/kcompat.h	3637;"	d
skb_checksum_none_assert	src/kcompat.h	3252;"	d
skb_checksum_start_offset	src/kcompat.h	3309;"	d
skb_checksum_start_offset	src/kcompat.h	3316;"	d
skb_copy_to_linear_data	src/kcompat.h	2153;"	d
skb_copy_to_linear_data_offset	src/kcompat.h	2155;"	d
skb_dst	src/kcompat.h	2709;"	d
skb_fill_page_desc	src/kcompat.h	1337;"	d
skb_frag_address	src/kcompat.h	3520;"	d
skb_frag_dma_map	src/kcompat.h	3531;"	d
skb_frag_page	src/kcompat.h	3512;"	d
skb_frag_size	src/kcompat.h	3496;"	d
skb_frag_size_sub	src/kcompat.h	3504;"	d
skb_get_rx_queue	src/kcompat.h	2652;"	d
skb_header_cloned	src/kcompat.h	183;"	d
skb_header_pointer	src/kcompat.h	1594;"	d
skb_is_gso	src/kcompat.h	1904;"	d
skb_is_gso	src/kcompat.h	1910;"	d
skb_is_gso_v6	src/kcompat.h	2349;"	d
skb_mac_header	src/kcompat.h	2159;"	d
skb_network_header	src/kcompat.h	2143;"	d
skb_network_header_len	src/kcompat.h	2157;"	d
skb_network_offset	src/kcompat.h	2142;"	d
skb_pad	src/kcompat.h	1919;"	d
skb_pad	src/kcompat.h	1921;"	d
skb_padto	src/kcompat.h	1924;"	d
skb_padto	src/kcompat.h	1926;"	d
skb_queue_reverse_walk_safe	src/kcompat.h	3352;"	d
skb_record_rx_queue	src/kcompat.h	2653;"	d
skb_reset_tail_pointer	src/kcompat.h	2145;"	d
skb_rx_queue_recorded	src/kcompat.h	2651;"	d
skb_set_hash	src/kcompat.h	4056;"	d
skb_set_tail_pointer	src/kcompat.h	2149;"	d
skb_tail_pointer	src/kcompat.h	2144;"	d
skb_transport_header	src/kcompat.h	2139;"	d
skb_transport_offset	src/kcompat.h	2138;"	d
skb_tx_hash	src/kcompat.h	2654;"	d
skb_tx_timestamp	src/kcompat.h	3663;"	d
skip_atoi	src/kcompat.c	/^static int skip_atoi(const char **s)$/;"	f	file:
smart_speed	src/hw.h	/^	enum e1000_smart_speed smart_speed;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_smart_speed
smb_counter	src/hw.h	/^	u32 smb_counter;$/;"	m	struct:e1000_dev_spec_82571
snprintf	src/kcompat.h	905;"	d
sopass	src/kcompat.h	/^	u8 sopass[SOPASS_MAX];	\/* SecureOn(tm) password *\/$/;"	m	struct:ethtool_wolinfo
special	src/hw.h	/^			__le16 special;$/;"	m	struct:e1000_data_desc::__anon32::__anon33
special	src/hw.h	/^			__le16 special;$/;"	m	struct:e1000_tx_desc::__anon22::__anon23
speed_downgraded	src/hw.h	/^	bool speed_downgraded;$/;"	m	struct:e1000_phy_info
stat1000	src/e1000.h	/^	u16 stat1000;		\/* 1000BASE-T status register     *\/$/;"	m	struct:e1000_phy_regs
stat_offset	src/ethtool.c	/^	int stat_offset;$/;"	m	struct:e1000_stats	file:
stat_string	src/ethtool.c	/^	char stat_string[ETH_GSTRING_LEN];$/;"	m	struct:e1000_stats	file:
state	src/e1000.h	/^	unsigned long state;$/;"	m	struct:e1000_adapter
stats	src/e1000.h	/^	struct e1000_hw_stats stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_hw_stats
stats64_lock	src/e1000.h	/^	spinlock_t stats64_lock;	\/* protects statistics counters *\/$/;"	m	struct:e1000_adapter
stats_block_coalesce_usecs	src/kcompat.h	/^	u32 stats_block_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
status	src/hw.h	/^			u8 status;	\/* Descriptor status *\/$/;"	m	struct:e1000_context_desc::__anon28::__anon29
status	src/hw.h	/^			u8 status;	\/* Descriptor status *\/$/;"	m	struct:e1000_data_desc::__anon32::__anon33
status	src/hw.h	/^			u8 status;	\/* Descriptor status *\/$/;"	m	struct:e1000_tx_desc::__anon22::__anon23
status	src/hw.h	/^	u8 status;$/;"	m	struct:e1000_host_mng_dhcp_cookie
status_error	src/hw.h	/^			__le32 status_error;	\/* ext status\/error *\/$/;"	m	struct:e1000_rx_desc_extended::__anon8::__anon12
status_error	src/hw.h	/^			__le32 status_error;	\/* ext status\/error *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon14::__anon18
str	src/param.c	/^				char *str;$/;"	m	struct:e1000_option::__anon4::__anon6::e1000_opt_list	file:
strict_ieee	src/hw.h	/^	bool strict_ieee;	\/* Strict IEEE mode *\/$/;"	m	struct:e1000_fc_info
strict_strtol	src/kcompat.h	2419;"	d
string_set	src/kcompat.h	/^	u32 string_set;		\/* string set id e.c. ETH_SS_TEST, etc *\/$/;"	m	struct:ethtool_gstrings
strlcpy	src/kcompat.h	1378;"	d
supported	src/kcompat.h	/^	u32 supported;$/;"	m	struct:ethtool_wolinfo
swap	src/kcompat.h	2618;"	d
symerrs	src/hw.h	/^	u64 symerrs;$/;"	m	struct:e1000_hw_stats
synchronize_irq	src/kcompat.h	2674;"	d
synchronize_irq	src/kcompat.h	2675;"	d
sysfs_attr_init	src/kcompat.h	3077;"	d
sysfs_attr_init	src/kcompat.h	3083;"	d
systim_lock	src/e1000.h	/^	spinlock_t systim_lock;	\/* protects SYSTIML\/H regsters *\/$/;"	m	struct:e1000_adapter
systim_overflow_work	src/e1000.h	/^	struct delayed_work systim_overflow_work;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::delayed_work
tail	src/e1000.h	/^	void __iomem *tail;$/;"	m	struct:e1000_ring
tc	src/e1000.h	/^	struct timecounter tc;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timecounter
tcp_config	src/hw.h	/^		__le32 tcp_config;$/;"	m	union:e1000_context_desc::__anon26
tcp_fields	src/hw.h	/^		} tcp_fields;$/;"	m	union:e1000_context_desc::__anon26	typeref:struct:e1000_context_desc::__anon26::__anon27
tcp_hdr	src/kcompat.h	2136;"	d
tcp_hdrlen	src/kcompat.h	2137;"	d
tcp_ip4_spec	src/kcompat.h	/^	struct ethtool_tcpip4_spec tcp_ip4_spec;$/;"	m	union:_kc_ethtool_flow_union	typeref:struct:_kc_ethtool_flow_union::ethtool_tcpip4_spec
tcp_seg_setup	src/hw.h	/^	} tcp_seg_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon28
test_cc	src/Makefile	/^test_cc = $(shell $(cc) --version > \/dev\/null 2>&1 && echo $(cc))$/;"	m
test_dir	src/Makefile	/^    test_dir = $(findstring $(dir), $(MANPATH))$/;"	m
test_dir	src/Makefile	/^    test_dir = $(shell [ -e $(dir) ] && echo $(dir))$/;"	m
test_dir	src/Makefile	/^test_dir = $(shell [ -e $(dir)\/include\/linux ] && echo $(dir))$/;"	m
test_file	src/Makefile	/^test_file = $(shell [ -f $(file) ] && echo $(file))$/;"	m
test_icr	src/e1000.h	/^	u32 test_icr;$/;"	m	struct:e1000_adapter
test_rx_ring	src/e1000.h	/^	struct e1000_ring test_rx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_ring
test_tx_ring	src/e1000.h	/^	struct e1000_ring test_tx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_ring
testinfo_len	src/kcompat.h	/^	u32 testinfo_len;$/;"	m	struct:k_ethtool_drvinfo
time_stamp	src/e1000.h	/^			unsigned long time_stamp;$/;"	m	struct:e1000_buffer::__anon35::__anon36
tncrs	src/hw.h	/^	u64 tncrs;$/;"	m	struct:e1000_hw_stats
to_net_dev	src/kcompat.h	2104;"	d
to_pci_dev	src/kcompat.h	/^static inline struct pci_dev *to_pci_dev(struct device *dev)$/;"	f
tor	src/hw.h	/^	u64 tor;$/;"	m	struct:e1000_hw_stats
tot	src/hw.h	/^	u64 tot;$/;"	m	struct:e1000_hw_stats
total_rx_bytes	src/e1000.h	/^	unsigned int total_rx_bytes;$/;"	m	struct:e1000_adapter
total_rx_packets	src/e1000.h	/^	unsigned int total_rx_packets;$/;"	m	struct:e1000_adapter
total_tx_bytes	src/e1000.h	/^	unsigned int total_tx_bytes;$/;"	m	struct:e1000_adapter
total_tx_packets	src/e1000.h	/^	unsigned int total_tx_packets;$/;"	m	struct:e1000_adapter
tpr	src/hw.h	/^	u64 tpr;$/;"	m	struct:e1000_hw_stats
tpt	src/hw.h	/^	u64 tpt;$/;"	m	struct:e1000_hw_stats
tpt_old	src/e1000.h	/^	u64 tpt_old;$/;"	m	struct:e1000_adapter
true	src/kcompat.h	2034;"	d
tsctc	src/hw.h	/^	u64 tsctc;$/;"	m	struct:e1000_hw_stats
tsctfc	src/hw.h	/^	u64 tsctfc;$/;"	m	struct:e1000_hw_stats
tucse	src/hw.h	/^			__le16 tucse;	\/* TCP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon26::__anon27
tucso	src/hw.h	/^			u8 tucso;	\/* TCP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon26::__anon27
tucss	src/hw.h	/^			u8 tucss;	\/* TCP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon26::__anon27
tx_abs_int_delay	src/e1000.h	/^	u32 tx_abs_int_delay;$/;"	m	struct:e1000_adapter
tx_coalesce_usecs	src/kcompat.h	/^	u32 tx_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_high	src/kcompat.h	/^	u32 tx_coalesce_usecs_high;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_irq	src/kcompat.h	/^	u32 tx_coalesce_usecs_irq;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_low	src/kcompat.h	/^	u32 tx_coalesce_usecs_low;$/;"	m	struct:_kc_ethtool_coalesce
tx_dma_failed	src/e1000.h	/^	u32 tx_dma_failed;$/;"	m	struct:e1000_adapter
tx_fifo_head	src/e1000.h	/^	u32 tx_fifo_head;$/;"	m	struct:e1000_adapter
tx_fifo_limit	src/e1000.h	/^	u32 tx_fifo_limit;$/;"	m	struct:e1000_adapter
tx_fifo_size	src/e1000.h	/^	u32 tx_fifo_size;$/;"	m	struct:e1000_adapter
tx_hang_recheck	src/e1000.h	/^	bool tx_hang_recheck;$/;"	m	struct:e1000_adapter
tx_head_addr	src/e1000.h	/^	u32 tx_head_addr;$/;"	m	struct:e1000_adapter
tx_hwtstamp_skb	src/e1000.h	/^	struct sk_buff *tx_hwtstamp_skb;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::sk_buff
tx_hwtstamp_start	src/e1000.h	/^	unsigned long tx_hwtstamp_start;$/;"	m	struct:e1000_adapter
tx_hwtstamp_timeouts	src/e1000.h	/^	u32 tx_hwtstamp_timeouts;$/;"	m	struct:e1000_adapter
tx_hwtstamp_work	src/e1000.h	/^	struct work_struct tx_hwtstamp_work;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
tx_int_delay	src/e1000.h	/^	u32 tx_int_delay;$/;"	m	struct:e1000_adapter
tx_itr	src/e1000.h	/^	u16 tx_itr;$/;"	m	struct:e1000_adapter
tx_max_coalesced_frames	src/kcompat.h	/^	u32 tx_max_coalesced_frames;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_high	src/kcompat.h	/^	u32 tx_max_coalesced_frames_high;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_irq	src/kcompat.h	/^	u32 tx_max_coalesced_frames_irq;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_low	src/kcompat.h	/^	u32 tx_max_coalesced_frames_low;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_pending	src/kcompat.h	/^	u32 tx_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
tx_packet_delta	src/hw.h	/^	u32 tx_packet_delta;$/;"	m	struct:e1000_mac_info
tx_pause	src/kcompat.h	/^	u32 tx_pause;$/;"	m	struct:_kc_ethtool_pauseparam
tx_pending	src/kcompat.h	/^	u32 tx_pending;$/;"	m	struct:_kc_ethtool_ringparam
tx_pkt_filtering	src/hw.h	/^	bool tx_pkt_filtering;$/;"	m	struct:e1000_mac_info
tx_ring_count	src/e1000.h	/^	u16 tx_ring_count;$/;"	m	struct:e1000_adapter
tx_timeout_count	src/e1000.h	/^	u32 tx_timeout_count;$/;"	m	struct:e1000_adapter
tx_timeout_factor	src/e1000.h	/^	u8 tx_timeout_factor;$/;"	m	struct:e1000_adapter
txcw	src/hw.h	/^	u32 txcw;$/;"	m	struct:e1000_mac_info
txd_cmd	src/e1000.h	/^	u32 txd_cmd;$/;"	m	struct:e1000_adapter
typ_len_ext	src/hw.h	/^			u8 typ_len_ext;$/;"	m	struct:e1000_data_desc::__anon30::__anon31
type	src/ethtool.c	/^	int type;$/;"	m	struct:e1000_stats	file:
type	src/hw.h	/^	enum e1000_mac_type type;$/;"	m	struct:e1000_mac_info	typeref:enum:e1000_mac_info::e1000_mac_type
type	src/hw.h	/^	enum e1000_nvm_type type;$/;"	m	struct:e1000_nvm_info	typeref:enum:e1000_nvm_info::e1000_nvm_type
type	src/hw.h	/^	enum e1000_phy_type type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_phy_type
type	src/param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	m	struct:e1000_option	typeref:enum:e1000_option::__anon3	file:
u64_stats_fetch_begin	src/kcompat.h	3207;"	d
u64_stats_fetch_begin_bh	src/kcompat.h	3209;"	d
u64_stats_fetch_begin_irq	src/kcompat.h	4106;"	d
u64_stats_fetch_retry_bh	src/kcompat.h	3208;"	d
u64_stats_fetch_retry_irq	src/kcompat.h	4107;"	d
u64_stats_update_begin	src/kcompat.h	3205;"	d
u64_stats_update_end	src/kcompat.h	3206;"	d
udp_csum	src/kcompat.h	3359;"	d
udp_hdr	src/kcompat.h	2172;"	d
ulp_state	src/hw.h	/^	enum e1000_ulp_state ulp_state;$/;"	m	struct:e1000_dev_spec_ich8lan	typeref:enum:e1000_dev_spec_ich8lan::e1000_ulp_state
uncorr_errors	src/e1000.h	/^	unsigned int uncorr_errors;	\/* uncorrectable ECC errors *\/$/;"	m	struct:e1000_adapter
uninitialized_var	src/kcompat.h	150;"	d
unlikely	src/kcompat.h	227;"	d
update	src/hw.h	/^	s32 (*update) (struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
update_mc_addr_list	src/hw.h	/^	void (*update_mc_addr_list) (struct e1000_hw *, u8 *, u32);$/;"	m	struct:e1000_mac_operations
update_phy_task	src/e1000.h	/^	struct work_struct update_phy_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
upper	src/hw.h	/^		} upper;$/;"	m	struct:e1000_rx_desc_extended::__anon8	typeref:struct:e1000_rx_desc_extended::__anon8::__anon12
upper	src/hw.h	/^		} upper;$/;"	m	struct:e1000_rx_desc_packet_split::__anon14	typeref:struct:e1000_rx_desc_packet_split::__anon14::__anon19
upper	src/hw.h	/^	} upper;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon32
upper	src/hw.h	/^	} upper;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon22
upper_setup	src/hw.h	/^	} upper_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon26
use_adaptive_rx_coalesce	src/kcompat.h	/^	u32 use_adaptive_rx_coalesce;$/;"	m	struct:_kc_ethtool_coalesce
use_adaptive_tx_coalesce	src/kcompat.h	/^	u32 use_adaptive_tx_coalesce;$/;"	m	struct:_kc_ethtool_coalesce
usecs_to_jiffies	src/kcompat.h	1674;"	d
usleep_range	src/kcompat.h	3202;"	d
usleep_range	src/kcompat.h	3203;"	d
usr_ip4_spec	src/kcompat.h	/^	struct ethtool_usrip4_spec usr_ip4_spec;$/;"	m	union:_kc_ethtool_flow_union	typeref:struct:_kc_ethtool_flow_union::ethtool_usrip4_spec
valid_led_default	src/hw.h	/^	s32 (*valid_led_default) (struct e1000_hw *, u16 *);$/;"	m	struct:e1000_nvm_operations
validate	src/hw.h	/^	s32 (*validate) (struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
validate_mdi_setting	src/hw.h	/^	s32 (*validate_mdi_setting) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
value	src/hw.h	/^	u16 value;$/;"	m	struct:e1000_shadow_ram
vector	src/kcompat.h	/^	u16 vector;		\/* kernel uses to write allocated vector *\/$/;"	m	struct:msix_entry
version	src/kcompat.h	/^	char version[32];$/;"	m	struct:k_ethtool_drvinfo
version	src/kcompat.h	/^	u32 version;		\/* driver-specific, indicates different chips\/revs *\/$/;"	m	struct:_kc_ethtool_regs
virt_to_page	src/kcompat.h	961;"	d
vlan	src/hw.h	/^			__le16 vlan;	\/* VLAN tag *\/$/;"	m	struct:e1000_rx_desc_extended::__anon8::__anon12
vlan	src/hw.h	/^			__le16 vlan;	\/* VLAN tag *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon14::__anon18
vlan_eth_hdr	src/kcompat.h	/^static inline struct vlan_ethhdr *vlan_eth_hdr(const struct sk_buff *skb)$/;"	f
vlan_ethhdr	src/kcompat.h	/^struct vlan_ethhdr {$/;"	s
vlan_ethhdr	src/kcompat.h	325;"	d
vlan_etype	src/kcompat.h	/^	__be16 vlan_etype;$/;"	m	struct:_kc_ethtool_flow_ext
vlan_get_protocol	src/kcompat.h	3287;"	d
vlan_gro_receive	src/kcompat.h	192;"	d
vlan_group_get_device	src/kcompat.h	2107;"	d
vlan_group_set_device	src/kcompat.h	2108;"	d
vlan_hdr	src/kcompat.h	330;"	d
vlan_id	src/hw.h	/^	u16 vlan_id;$/;"	m	struct:e1000_host_mng_dhcp_cookie
vlan_tci	src/kcompat.h	/^	__be16 vlan_tci;$/;"	m	struct:_kc_ethtool_flow_ext
vlan_tx_tag_get	src/kcompat.h	332;"	d
vlan_tx_tag_present	src/kcompat.h	331;"	d
vlgrp	src/e1000.h	/^	struct vlan_group *vlgrp;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::vlan_group
vmalloc_node	src/kcompat.h	1802;"	d
vsnprintf	src/kcompat.h	907;"	d
vzalloc	src/kcompat.h	3272;"	d
vzalloc_node	src/kcompat.h	3262;"	d
watchdog_task	src/e1000.h	/^	struct work_struct watchdog_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
watchdog_timer	src/e1000.h	/^	struct timer_list watchdog_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
wb	src/hw.h	/^	} wb;			\/* writeback *\/$/;"	m	union:e1000_rx_desc_extended	typeref:struct:e1000_rx_desc_extended::__anon8
wb	src/hw.h	/^	} wb;			\/* writeback *\/$/;"	m	union:e1000_rx_desc_packet_split	typeref:struct:e1000_rx_desc_packet_split::__anon14
weight	src/kcompat.h	/^	int weight;$/;"	m	struct:napi_struct
width	src/hw.h	/^	enum e1000_bus_width width;$/;"	m	struct:e1000_bus_info	typeref:enum:e1000_bus_info::e1000_bus_width
wol	src/e1000.h	/^	u32 wol;$/;"	m	struct:e1000_adapter
wolopts	src/kcompat.h	/^	u32 wolopts;$/;"	m	struct:ethtool_wolinfo
word_size	src/hw.h	/^	u16 word_size;$/;"	m	struct:e1000_nvm_info
work_struct	src/kcompat.h	1301;"	d
write	src/hw.h	/^	s32 (*write) (struct e1000_hw *, u16, u16, u16 *);$/;"	m	struct:e1000_nvm_operations
write_reg	src/hw.h	/^	s32 (*write_reg) (struct e1000_hw *, u32, u16);$/;"	m	struct:e1000_phy_operations
write_reg_locked	src/hw.h	/^	s32 (*write_reg_locked) (struct e1000_hw *, u32, u16);$/;"	m	struct:e1000_phy_operations
write_reg_page	src/hw.h	/^	s32 (*write_reg_page) (struct e1000_hw *, u32, u16);$/;"	m	struct:e1000_phy_operations
write_vfta	src/hw.h	/^	void (*write_vfta) (struct e1000_hw *, u32, u32);$/;"	m	struct:e1000_mac_operations
xoffrxc	src/hw.h	/^	u64 xoffrxc;$/;"	m	struct:e1000_hw_stats
xofftxc	src/hw.h	/^	u64 xofftxc;$/;"	m	struct:e1000_hw_stats
xonrxc	src/hw.h	/^	u64 xonrxc;$/;"	m	struct:e1000_hw_stats
xontxc	src/hw.h	/^	u64 xontxc;$/;"	m	struct:e1000_hw_stats
